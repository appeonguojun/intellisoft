$PBExportHeader$n_cst_update_sql_v140.sru
forward
global type n_cst_update_sql_v140 from n_cst_update
end type
end forward

global type n_cst_update_sql_v140 from n_cst_update
end type
global n_cst_update_sql_v140 n_cst_update_sql_v140

type variables

end variables

forward prototypes
public function integer of_ver80_release_table1 ()
public function integer of_ver80_release_table2 ()
public function integer of_ver80_release_view1 ()
public function integer of_ver80_patch_table1 ()
public function integer of_ver70_release_table1 ()
public function integer of_ver70_release_table2 ()
public function integer of_ver70_release_table3 ()
public function integer of_ver70_patch_table1 ()
public function integer of_ver70_release_view1 ()
public function integer of_ver70_release_view2 ()
public function integer of_ver70_release_dropfulltext1 ()
public function integer of_ver70_release_createfulltext1 ()
public function integer of_ver60_patch_table1 ()
public function integer of_ver60_release_table1 ()
public function integer of_ver80_updates ()
public function integer of_ver60_updates ()
public function integer of_ver70_updates ()
public function integer of_ver80_patch_view1 ()
public function integer of_ver85_release_table1 ()
public function integer of_ver85_release_view1 ()
public function integer of_ver85_updates ()
public function integer of_ver85_release_dropfulltext1 ()
public function integer of_ver85_release_createfulltext1 ()
public function integer of_ver90_release_table1 ()
public function integer of_ver90_release_view1 ()
public function integer of_ver90_updates ()
public function integer of_ver90_release_storeprocedure1 ()
public function integer of_ver90_release_table2 ()
public function integer of_ver95_release_table1 ()
public function integer of_ver95_updates ()
public function integer of_ver95_release_view1 ()
public function integer of_ver95_release_storeprocedure1 ()
public function integer of_ver95_release_createfulltext1 ()
public function integer of_ver95_release_dropfulltext1 ()
public function integer of_ver95_release_table2 ()
public function integer of_ver100_release_table1 ()
public function integer of_ver100_release_view1 ()
public function integer of_ver100_release_storeprocedure1 ()
public function integer of_ver100_updates ()
public function integer of_ver100_release_createfulltext1 ()
public function integer of_ver100_release_dropfulltext1 ()
public function integer of_ver100_release_table2 ()
public function integer of_ver105_release_view1 ()
public function integer of_ver105_release_createfulltext1 ()
public function integer of_ver105_release_dropfulltext1 ()
public function integer of_ver105_release_table1 ()
public function integer of_ver105_release_storeprocedure1 ()
public function integer of_ver105_updates ()
public function integer of_ver105_release_trigger1 ()
public function integer of_ver110_release_table1 ()
public function integer of_ver110_release_view1 ()
public function integer of_ver110_release_storeprocedure1 ()
public function integer of_ver110_release_trigger1 ()
public function integer of_ver110_release_createfulltext1 ()
public function integer of_ver110_release_dropfulltext1 ()
public function integer of_ver110_updates ()
public function integer of_ver115_updates ()
public function integer of_ver115_release_table1 ()
public function integer of_ver115_release_view1 ()
public function integer of_ver115_release_storeprocedure1 ()
public function integer of_ver115_release_trigger1 ()
public function integer of_ver115_release_createfulltext1 ()
public function integer of_ver115_release_dropfulltext1 ()
public function integer of_ver120_release_table1 ()
public function integer of_ver120_release_view1 ()
public function integer of_ver120_release_storeprocedure1 ()
public function integer of_ver120_release_trigger1 ()
public function integer of_ver120_release_createfulltext1 ()
public function integer of_ver120_release_dropfulltext1 ()
public function integer of_ver120_updates ()
public function integer of_ver130_release_table1 ()
public function integer of_ver130_release_view1 ()
public function integer of_ver130_release_storeprocedure1 ()
public function integer of_ver130_release_trigger1 ()
public function integer of_ver130_release_createfulltext1 ()
public function integer of_ver130_release_dropfulltext1 ()
public function integer of_ver130_updates ()
public function integer of_ver130_release_storeprocedure2 ()
public function integer of_ver140_updates ()
public function integer of_ver140_release_table1 ()
public function integer of_ver140_release_view1 ()
public function integer of_ver140_release_storeprocedure1 ()
public function integer of_ver140_release_trigger1 ()
public function integer of_ver140_release_createfulltext1 ()
public function integer of_ver140_release_dropfulltext1 ()
public function integer of_ver140_release_storeprocedure2 ()
public subroutine of_release_fulltext (boolean ab_do_drop)
end prototypes

public function integer of_ver80_release_table1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='set_patch_ver' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add set_patch_ver varchar(250) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='multi_screen_filter' and t.name='export_header' and t.type = 'U') " + &
"alter table export_header add multi_screen_filter varchar(250) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ic_ldap_user' and t.name='security_users' and t.type = 'U') " + &
"alter table security_users add ic_ldap_user varchar(20) null "

// deleted by nova 2008-04-08.
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_primary_office') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_primary_office DEFAULT 0 FOR primary_office "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_exp_letters') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_exp_letters DEFAULT 0 FOR exp_letters "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_include_in_directory') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_include_in_directory DEFAULT 0 FOR include_in_directory "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_prac_correspondence') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_prac_correspondence DEFAULT 0 FOR prac_correspondence "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_home_address') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_home_address DEFAULT 0 FOR home_address "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_additional_office') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_additional_office DEFAULT 0 FOR additional_office "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_mailing') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_mailing DEFAULT 0 FOR mailing "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_billing') " + &
//"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_billing DEFAULT 0 FOR billing "
//

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"sp_fulltext_database 'enable' "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contacts_numbers_catalog') " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_contacts_numbers','phone','drop' " + &
//"end "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"ALTER TABLE ctx_contacts_numbers ALTER COLUMN phone varchar(25) "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contacts_numbers_catalog') " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_contacts_numbers','phone','add' " + &
//"end "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_org_contact_catalog') " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_org_contact','Phone','drop' " + &
//"end  "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"ALTER TABLE ctx_org_contact ALTER COLUMN phone varchar(25) "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_org_contact_catalog') " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_org_contact','Phone','add' " + &
//"end "
//
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='wf_id' " + &
"     and t.name='ctx_notification' " + &
"     and t.type = 'U') " + &
"alter table ctx_notification add wf_id integer null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='isdisabled' " + &
"     and t.name='wv_esign_log' " + &
"     and t.type = 'U') " + &
"alter table wv_esign_log add isdisabled int null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='force_update' " + &
"     and t.name='ctx_screen' " + &
"     and t.type = 'U') " + &
"alter table ctx_screen add force_update text null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='ctx_screen_datafill' " + &
"            and   type = 'U') " + &
"create table ctx_screen_datafill (data_view_id integer not null, screen_id integer not null, field_name varchar(50) not null, field_name_fill varchar(50) not null, field_name_map varchar(50) null, modify_by varchar(20) null, modify_date datetime null, " + &
"constraint PK_ctx_screen_datafill PRIMARY KEY (data_view_id, screen_id, field_name, field_name_fill), " + &
"constraint FK_ctx_screen_datafill_ctx_screen foreign key (data_view_id, screen_id) references ctx_screen (data_view_id, screen_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name = 'ic_client_data' ) " + &
"	Create Table ic_client_data " + &
"	( " + &
"		id  numeric(10,0) identity  not null, " + &
"		client_id varchar(20) not null, " + &
"		data_int numeric(10,0) null, " + &
"		data_vchar varchar(30) null, " + &
"		Primary Key(id) " + &
"	) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF NOT EXISTS (select TOP 1 1 FROM sysindexes  WHERE name = 'idx_ic_client_data_client_id') " + &
"	CREATE INDEX idx_ic_client_data_client_id  ON ic_client_data (client_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( select TOP 1 1 from sysobjects where name = 'v_ic_client_data_int' ) " + &
"	Drop view v_ic_client_data_int "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create view v_ic_client_data_int As (Select distinct client_id,data_int from  ic_client_data where data_int is not null) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( select TOP 1 1 from sysobjects where name = 'v_ic_client_data_vchar' ) " + &
"	Drop view v_ic_client_data_vchar "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create view v_ic_client_data_vchar As Select distinct client_id,data_vchar from  ic_client_data where (data_vchar is not null) and (data_vchar <> '') "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE app_facility ALTER COLUMN phone varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE app_facility ALTER COLUMN fax varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE group_practice ALTER COLUMN phone varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE group_practice ALTER COLUMN fax varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE group_multi_loc ALTER COLUMN phone varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF not exists( select TOP 1 1 from sysobjects where name = 'ic_array_to_db' and type='U') " + &
"Create table ic_array_to_db " + &
"( " + &
"id numeric(9,0) identity  not null, " + &
"client_id varchar(20) not null, " + &
"seq_no integer not null, " + &
"data varchar(8000) null, " + &
"Primary Key(id) " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF EXISTS (SELECT name FROM   sysobjects WHERE  name = 'up_array_to_row'  AND  type = 'P') " + &
"    DROP PROCEDURE up_array_to_row "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE PROCEDURE up_array_to_row " + &
"( " + &
"@as_client_id varchar(20),		 " + &
"@ai_col_type integer,		 " + &
"@ai_seq_count integer		 " + &
") " + &
"AS " + &
"Begin " + &
"	Declare @i integer " + &
"	Declare @li_pos integer " + &
"	Declare @ls_text varchar(8000) " + &
"	Declare @ls_col varchar(20) " + &
"	Select @ls_col = '' " + &
"	Select @ls_text = '' " + &
"	Select @i = 1 " + &
"	Select @li_pos = 0 " + &
"	While (@i <= @ai_seq_count) " + &
"	Begin " + &
"		Select @ls_text = data from ic_array_to_db where client_id = @as_client_id and seq_no = @i  " + &
"			While (@ls_text <> '') " + &
"			Begin " + &
"				Select @li_pos = CharIndex(',',@ls_text) " + &
"				If @li_pos > 0  " + &
"				Begin " + &
"					Select @ls_col =  SubString(@ls_text,1,(@li_pos - 1)) " + &
"					Select @ls_text = SubString(@ls_text,@li_pos + 1, (Len(@ls_text) - @li_pos) ) " + &
"				End	 " + &
"				Else " + &
"				Begin " + &
"					Select @ls_col =  @ls_text " + &
"					Select @ls_text = ''  " + &
"				End " + &
"				If @ai_col_type = 1  " + &
"					Insert into ic_client_data(client_id,data_int) values(@as_client_id,Convert(numeric(9),@ls_col)) " + &
"				Else  " + &
"					If @ai_col_type = 2  " + &
"						Insert into ic_client_data(client_id,data_vchar) values(@as_client_id,@ls_col) " + &
"			End " + &
"		Select @i = @i + 1 " + &
"	End   " + &
"End "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='DefaultTo' " + &
"     and t.name='ctx_contacts' " + &
"     and t.type = 'U') " + &
"alter table ctx_contacts add DefaultTo VarChar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='em_smtp_accounts' " + &
"            and   type = 'U') " + &
"CREATE TABLE em_smtp_accounts " + &
"( " + &
"  user_id varchar(10) not null, " + &
"  is_default char(1) not null, " + &
"  server varchar(50) null, " + &
"  port integer null, " + &
"  authmode integer null, " + &
"  account varchar(50) null, " + &
"  password varchar(30) null, " + &
"  email varchar(50) not null, " + &
"  constraint pk_email primary key (email) " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_smtp_accounts drop constraint pk_email "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_smtp_accounts alter column email varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='id' and t.name='em_smtp_accounts' and t.type = 'U') " + &
"alter table em_smtp_accounts add id integer identity "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_smtp_accounts add constraint pk_email primary key(id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_smtp_accounts alter column user_id varchar(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_smtp_accounts alter column is_default char(1) null "
//<added by nova 2008-05-04>
//reason:mail from wuzhijun urgent fix
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_smtp_accounts alter column account varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='PntDownLoadPath' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add PntDownLoadPath VarChar(255) null "




is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_53' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_53 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_54' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_54 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_55' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_55 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_56' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_56 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_57' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_57 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_58' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_58 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_59' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_59 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_60' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_60 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_import' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"alter table icred_settings add set_import integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='npdb_user_id' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add npdb_user_id varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='user_name' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add user_name varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_tdl' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_tdl integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_task' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_task integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_go_on_open' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_go_on_open integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='open_tdl' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add open_tdl integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_1' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_1 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_2' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_2 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_3' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_3 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_4' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add set_4 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='npdb_password' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add npdb_password varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='dw_syntax' " + &
"     and t.name='profile_view_reports' " + &
"     and t.type = 'U') " + &
"alter table profile_view_reports add dw_syntax text null "

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"IF EXISTS (select TOP 1 1 FROM SYSOBJECTS WHERE name='sp_contract_search' AND TYPE = 'P') " + &
//" DROP PROCEDURE sp_contract_search "
//
////This procedure was modified for no access control to contract by Alfee on 03.14.2008
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"  " + &
//"CREATE  PROCEDURE sp_contract_search " + &
//"   @user_d VARCHAR(10)  " + &
//"  as  " + &
//"  BEGIN  " + &
//"    SELECT DISTINCT ctx_basic_info.app_facility,    " + &
//" 	 ctx_products.product_id product_code,    " + &
//"   code_lookup.code product_name,    " + &
//"   ctx_basic_info.effective_date,    " + &
//"   ctx_basic_info.expriation_date,    " + &
//"   ctx_basic_info.status,    " + &
//"   ctx_basic_info.group_multi_loc_id,    " + &
//"   ctx_basic_info.ctx_id,    " + &
//"   ctx_basic_info.master_contract_id,                           " + &
//"   master_cnt = (select count(ctx_basic_info1.ctx_id) from ctx_basic_info ctx_basic_info1 where ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id),                         " + &
//"   ctx_basic_info.category,     " + &
//"   ctx_basic_info.facility_id,    " + &
//"   ctx_basic_info.contract_type,    " + &
//"   code_lookup1.code product_type,    " + &
//"   ctx_basic_info.reimbursment_menth,    " + &
//"   ctx_basic_info.file_location,    " + &
//"   ctx_basic_info.review_date,    " + &
//"   ctx_basic_info.review_by,    " + &
//"   ctx_basic_info.term_date,    " + &
//"   ctx_basic_info.term_reason,    " + &
//"   ctx_basic_info.last_revis_date,    " + &
//"   ctx_basic_info.other_date_1,    " + &
//"   ctx_basic_info.other_date_2,    " + &
//"   ctx_basic_info.oc_signed_by,    " + &
//"   ctx_basic_info.oc_title,    " + &
//"   ctx_basic_info.oc_department,    " + &
//"   ctx_basic_info.oc_legal_rep,    " + &
//"   ctx_basic_info.cc_signed_by,    " + &
//"   ctx_basic_info.cc_title,    " + &
//"   ctx_basic_info.cc_department,    " + &
//"   ctx_basic_info.cc_legal_rep,    " + &
//"   ctx_basic_info.notes,    " + &
//"   ctx_basic_info.keyword,    " + &
//"   ctx_basic_info.dvision,    " + &
//"   ctx_basic_info.custom_1,    " + &
//"   ctx_basic_info.custom_2,    " + &
//"   ctx_basic_info.custom_3,    " + &
//"   ctx_basic_info.custom_4,    " + &
//"   ctx_basic_info.custom_5,    " + &
//"   ctx_basic_info.custom_6,    " + &
//"   ctx_basic_info.custom_7,    " + &
//"   ctx_basic_info.custom_8,    " + &
//"   ctx_basic_info.custom_9,    " + &
//"   ctx_basic_info.custom_10,    " + &
//"   ctx_basic_info.group_id,    " + &
//"   ctx_basic_info.revision_reason,    " + &
//"   ctx_basic_info.record_id , " + &
//"   owner = upper((SELECT top 1 ctx_contacts.user_d  " + &
//"       FROM ctx_contacts,ctx_contract_contacts " + &
//"       WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) and   " + &
//"         (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) AND   " + &
//"         ( ctx_contract_contacts.owner = 'Y' ) )), " + &
//"   contracted_entity = (SELECT top 1 group_multi_loc.rec_id   " + &
//"             FROM ctx_loc,    " + &
//"              group_multi_loc   " + &
//"           WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) and   " + &
//"             ( ctx_loc.ctx_id = ctx_basic_info.ctx_id) AND   " + &
//"               ctx_loc.loc_id = 0), " + &
//"   app_facility.facility_name facility_name, " + &
//"   ctx_basic_info.custom_date1,   " + &
//"   ctx_basic_info.custom_date2,   " + &
//"   ctx_basic_info.custom_date3,   " + &
//"   ctx_basic_info.custom_date4,   " + &
//"   ctx_basic_info.custom_date5,   " + &
//"   ctx_basic_info.inserted_by_user,   " + &
//"   ctx_basic_info.inserted_at_date_time,   " + &
//"   ctx_basic_info.updated_by_user,   " + &
//"   ctx_basic_info.updated_at_date_time,   " + &
//"   ctx_basic_info.custom_11,   " + &
//"   ctx_basic_info.custom_12,   " + &
//"   ctx_basic_info.custom_13,   " + &
//"   ctx_basic_info.custom_14,   " + &
//"   ctx_basic_info.custom_15,   " + &
//"   ctx_basic_info.custom_16,   " + &
//"   ctx_basic_info.custom_17,   " + &
//"   ctx_basic_info.custom_18,   " + &
//"   ctx_basic_info.custom_19,   " + &
//"   ctx_basic_info.custom_20,   " + &
//"   ctx_basic_info.custom_date6,   " + &
//"   ctx_basic_info.custom_date7,   " + &
//"   ctx_basic_info.custom_date8,   " + &
//"   ctx_basic_info.custom_date9,   " + &
//"   ctx_basic_info.custom_date10,   " + &
//"   ctx_basic_info.custom_date11,   " + &
//"   ctx_basic_info.custom_date12,   " + &
//"   ctx_basic_info.custom_date13,   " + &
//"   ctx_basic_info.custom_date14,   " + &
//"   ctx_basic_info.custom_date15,   " + &
//"   ctx_basic_info.custom_n1,   " + &
//"   ctx_basic_info.custom_n2,   " + &
//"   ctx_basic_info.custom_n3,   " + &
//"   ctx_basic_info.custom_n4,   " + &
//"   ctx_basic_info.custom_n5,   " + &
//"   ctx_basic_info.custom_n6,   " + &
//"   ctx_basic_info.custom_n7,   " + &
//"   ctx_basic_info.custom_n8,   " + &
//"   ctx_basic_info.custom_n9,   " + &
//"   ctx_basic_info.custom_n10,   " + &
//"   ctx_basic_info.version_number,   " + &
//"   ctx_basic_info.version_date,   " + &
//"   ctx_basic_info.master_contract_name    " + &
//"    FROM  ctx_basic_info   " + &
//"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id   " + &
//"LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code  " + &
//"LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code,  " + &
//"ctx_basic_info ctx_basic_info1 LEFT OUTER JOIN app_facility ON ctx_basic_info1.app_facility = app_facility.facility_id, " + &
//"( " + &
//" SELECT Distinct ctx_contract_contacts.ctx_id " + &
//"   FROM ctx_contract_contacts,    " + &
//"         ctx_contacts   " + &
//"  WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) and   " + &
//"        ( ( ctx_contract_contacts.access in ('F','R') ) OR   " + &
//"        ( ctx_contract_contacts.owner = 'Y' ) ) AND   " + &
//"        ( ctx_contacts.user_d = @user_d ) and ctx_contract_contacts.ic_area = 'I' " + &
//" UNION " + &
//"   SELECT DISTINCT ctx_basic_info.ctx_id " + &
//"     FROM ctx_acp_contract_management_right,security_users,ctx_basic_info " + &
//"    WHERE ctx_acp_contract_management_right.types = 1 " + &
//" 		 AND ctx_acp_contract_management_right.role_id = security_users.role_id " + &
//" 		 AND ctx_acp_contract_management_right.category = ctx_basic_info.category " + &
//" 		 AND ctx_acp_contract_management_right.rights In ('11','12') " + &
//" 		 AND security_users.user_id = @user_d " + &
//"      AND ctx_basic_info.ctx_id NOT IN  " + &
//"        (SELECT Distinct ctx_contract_contacts.ctx_id " + &
//"				FROM ctx_contract_contacts, ctx_contacts  " + &  
//"			  WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) AND " + &
//"			        ( ( ctx_contract_contacts.access ='N') AND " + &
//"	      		  ( ctx_contract_contacts.owner <> 'Y' ) ) AND " + &   
//"			        ( ctx_contacts.user_d = @user_d ) AND " + &
//"					  ( ctx_contract_contacts.ic_area = 'I' ) ) " + &
//") AA " + &
//"WHERE ctx_basic_info.ctx_id = ctx_basic_info1.ctx_id and ctx_basic_info.ctx_id = AA.ctx_id " + &
//"ORDER BY ctx_basic_info.ctx_id  " + &
//"  " + &
//"END "
//
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select top 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='domain_name' and t.name='security_users' and t.type = 'U') " + &
"	Alter table security_users add domain_name varchar(30) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='signature' " + &
"     and t.name='security_user_mailsetting' " + &
"     and t.type = 'U') " + &
"ALTER table security_user_mailsetting add signature Image null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"  " + &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='EMail_Message' " + &
"     and t.name='wf_email' " + &
"     and t.type = 'U') " + &
"ALTER table wf_email add EMail_Message image null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='ctx_acp_template_clause_rules' " + &
"            and   type = 'U') " + &
"create table ctx_acp_template_clause_rules( " + &
"       ctx_acp_template_id numeric(6,0) not null, " + &
"       ctx_acp_clause_id numeric(6,0) not null,      " + &
"       rule_row_id integer not null, " + &
"       rule_name varchar(255) null,  " + &
"       screen_id integer null, " + &
"       left_bracket varchar(5) null, " + &
"       field_name varchar(50) null, " + &
"       field_label varchar(255) null,  " + &
"       operator varchar(20) null,             " + &
"       value varchar(255) null,               " + &
"       right_bracket varchar(5) null, " + &
"       logical varchar(5) null,          " + &
"       field_type varchar(2) null,     " + &
"       table_name varchar(150) null, " + &
"       value_display varchar(75) null,             " + &
"       lookup_code varchar(40) null,             " + &
"       lookup_flag varchar(1) null, " + &
"       constraint PK_ctx_acp_template_clause_rules PRIMARY KEY (ctx_acp_template_id, ctx_acp_clause_id, rule_row_id )) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='import_table_name' and t.name='sys_tables' and t.type = 'U') " + &
"	Alter table sys_tables add import_table_name varchar(30) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete From sys_fields where table_id = 54 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete From sys_fields where table_id = 56 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete from sys_tables where table_id = 54 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete from sys_tables where table_id = 56 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='sql_query_list' " + &
"            and   type = 'U') " + &
"CREATE table sql_query_list (list_id numeric(8,0) not null, query_name varchar(50) null,user_id varchar(30) null,create_date datetime  null, query_sql text null, primary key(list_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='import_tables'  and   type = 'U') " + &
"create table import_tables " + &
"( " + &
"table_id integer not null, " + &
"table_name varchar(50) null, " + &
"table_name_allias varchar(100) null, " + &
"isoft_module integer null, " + &
"constraint pk_import_table_id primary key (table_id) " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='import_fields' and   type = 'U') " + &
"create table import_fields " + &
"( " + &
"field_id integer not null, " + &
"table_id integer not null, " + &
"field_name varchar(50) null, " + &
"field_type varchar(2) null, " + &
"field_len integer null, " + &
"field_name_allias varchar(100) null, " + &
"allow_null char(1) null, " + &
"constraint pk_import_field_id primary key (field_id) " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table import_lu_map_fields alter column import_value varchar(200) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Alter table import_project alter column def_affil_stat varchar(30) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctx_status' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctx_status numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctx_category' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctx_category numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctx_app_facility' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctx_app_facility numeric(6) null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctx_contract_type' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctx_contract_type numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctx_dvision' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctx_dvision numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='cta_contact_type' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add cta_contact_type numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='cta_first_name' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add cta_first_name varchar(30) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='cta_last_name' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add cta_last_name varchar(30) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='cta_facility_id' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add cta_facility_id numeric(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='cta_user_id' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add cta_user_id varchar(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxcta_ctx_id' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxcta_ctx_id numeric(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxcta_contact_id' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxcta_contact_id numeric(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxcta_ic_area' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxcta_ic_area char(1) null default 'E' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxcta_default_email' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxcta_default_email char(1) null default 'N' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxprd_ctx_id' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxprd_ctx_id numeric(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxprd_product_id' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxprd_product_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select TOP 1 1 from syscolumns c, sysobjects t    " + &
"		where c.id=t.id  and c.name='ctxprd_product_type' and t.name='import_project' and t.type = 'U') " + &
"	Alter table import_project add ctxprd_product_type numeric(6) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists (select TOP 1 1 from  sysobjects  where  name='import_auto' and   type = 'U')" + &
	"CREATE TABLE import_auto ( " + &
	"	ia_id integer null, " + &
	"	project_id integer null," + &
	"	import_id decimal(16, 0) null," + &
	"	interval decimal(16, 0) null," + &
	"	frequency float null," + &
	"	run_time datetime null," + &
	"	last_run datetime null," + &
	"	active_status integer null," + &
	"	error_code integer null," + &
	"	import_name char(25) null" + &
	"	                  )" 


of_execute_sqls("of_ver80_release_table1")

Return 1
end function

public function integer of_ver80_release_table2 ();
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='comp_def' " + &
"     and t.name='import_file_fields' " + &
"     and t.type = 'U') " + &
"alter table import_file_fields alter column comp_def varchar(500) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='attested_date' and t.name='pd_affil_stat' and t.type = 'U') " + &
"   ALTER table pd_affil_stat add attested_date datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Money_1' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Money_1 Decimal(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Money_2' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Money_2 Decimal(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_1' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_1 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_2' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_2 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_3' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_3 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_4' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_4 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_5' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_5 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_6' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_6 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_7' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_7 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_8' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add Integer_8 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='datetime_1' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add datetime_1 DateTime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='datetime_2' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table code_lookup add datetime_2 DateTime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"     from  sysobjects " + &
"    where  name='Lookup_ColTitle' and type = 'U') " + &
"create table Lookup_ColTitle(Lookup_Type varchar(1) not null,Lookup_Name varchar(35) not null,ColTitleName varchar(30) not null,ColTitleText varchar(50) null,primary key (Lookup_Type,Lookup_Name,ColTitleName)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Money_1' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Money_1 Decimal(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Money_2' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Money_2 Decimal(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_1' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_1 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_2' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_2 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_3' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_3 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_4' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_4 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_5' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_5 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_6' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_6 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_7' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_7 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='Integer_8' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add Integer_8 Integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='datetime_1' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add datetime_1 DateTime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='datetime_2' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"ALTER table address_lookup add datetime_2 DateTime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Declare @@li_facility_id Integer " + &
"Declare @@li_Screen_id Integer " + &
"Declare facility_cursor Cursor For Select Distinct facility_id From facility_ver_rules " + &
"Open facility_cursor " + &
"Fetch  facility_cursor Into @@li_facility_id " + &
"While @@Fetch_Status = 0  " + &
"Begin " + &
"    Declare screen_cursor Cursor For Select screen_id From data_view_screen where data_view_id = 1 and screen_id > 0 and multi_record <> 'H' and (detail_2 = 0 or detail_2 is null) " + &
"    Open screen_cursor " + &
"    Fetch screen_cursor Into @@li_Screen_id " + &
"    While @@Fetch_Status = 0  " + &
"    Begin " + &
"        If Not Exists(select TOP 1 1 From facility_ver_rules Where screen_id = @@li_Screen_id and facility_id = @@li_facility_id )  " + &
"            Insert Into facility_ver_rules(facility_id,screen_id,verify_data,required,exp_reminder_doc,ver_ltr_doc,reverify_after_exp, " + &
"                    verif_letter_style,exp_cred_que_letters_days,ver_letter_resend_days,ver_letter_max_sends,check_back_years) " + &
"            Values(           @@li_facility_id,@@li_Screen_id,'N',      'N',    'N',        'N',    0,           " + &
"                    'I',        0,              30,         3,      0) " + &
"        Fetch screen_cursor Into @@li_Screen_id " + &
"    End " + &
"    Close screen_cursor " + &
"    Deallocate screen_cursor " + &
"    Fetch  facility_cursor Into @@li_facility_id " + &
"End " + &
"Close facility_cursor " + &
"Deallocate facility_cursor "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='field_1' " + &
"     and t.name='import_table_gen' " + &
"     and t.type = 'U') " + &
"alter table import_table_gen alter column field_1 varchar(1000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1 from  sysobjects where  name = 'view_alias' and type = 'U') " + &
"	create table view_alias  " + &
"	( " + &
"		v_name     VARCHAR(100) NOT NULL, " + &
"		v_alias    VARCHAR(255) NULL, " + &
"	 	module     int NULL, " + &
"		screen     VARCHAR(255) null, " + &
"		sflag      CHAR(1) NULL, " + &
"		p_name     VARCHAR(100) NULL, " + &
"		v_image    image NULL,   " + &
"		constraint PK_view_alias PRIMARY KEY (v_name) " + &
"	) "

is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1 from  sysobjects where  name = 'view_fields_alias' and type = 'U') " + &
"	create table view_fields_alias  " + &
"	( " + &
"		v_name     VARCHAR(100) NOT NULL, " + &
"		data_view_id  int NOT NULL, " + &
"		c_name        VARCHAR(50) NOT NULL, " + &
"		c_alias       VARCHAR(50) NULL, " + &
"		constraint PK_view_fields_alias PRIMARY KEY (v_name,data_view_id,c_name) " + &
"	) "

is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   	c.name='data_view_id' and t.name = 'conv_view' and t.type = 'U') " + &
"alter table conv_view add data_view_id int null "

is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   	c.name='module' and t.name = 'conv_view' and t.type = 'U') " + &
"alter table conv_view add module int null "

//-------Begin Added by Alfee on 02.20.2008 -----------------------
//for clause rules base on a specified view
is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists(  " + &
"   select TOP 1 1 from syscolumns c, sysobjects t  " + &
"   where c.id=t.id  " + &
"     and c.name='data_view_id'  " + &
"     and t.name='ctx_acp_template_clause_rules'  " + &
"     and t.type = 'U')  " + &
"  ALTER table ctx_acp_template_clause_rules ADD data_view_id int not null CONSTRAINT AddDataViewId DEFAULT 1001 WITH VALUES "

is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from sysobjects where name='FK_ctx_acp_template_clause_rules_ctx_screen' and type = 'F') " + &
"  ALTER table ctx_acp_template_clause_rules ALTER COLUMN screen_id int not null "

is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from sysobjects where name='FK_ctx_acp_template_clause_rules_ctx_screen' and type = 'F') " + &
"  ALTER table ctx_acp_template_clause_rules ADD CONSTRAINT FK_ctx_acp_template_clause_rules_ctx_screen FOREIGN KEY (data_view_id, screen_id) REFERENCES ctx_screen(data_view_id, screen_id) "
//--------End Added -----------------------------------------------

//Add auto snooze unit for contract alarm - Alfee 02.22.2008
is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id " + &
"     and c.name='alm_auto_increment_unit' " + &
"     and t.name='ctx_notification' " + &
"     and t.type = 'U') " + &
"  ALTER table ctx_notification ADD alm_auto_increment_unit char(1) null "

// added by nova 2.21.2008
is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"         c.name='lu_field_name' and t.name = 'conv_view_fields' and t.type = 'U') " + &
"alter table conv_view_fields add lu_field_name VARCHAR(50) null" 

// added by nova 2.22.2008
is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists(  " + &
"  select 1 from syscolumns c, sysobjects t  " + &
"  where c.id=t.id  " + &
"     and c.name='set_addresser'  " + &
"     and t.name='icred_settings'  " + &
"     and t.type = 'U') " + &
" ALTER table icred_settings add set_addresser varchar(20) null "

//-------------Begin Added by Alfee 02.26.2008------------------------------
//for date alarm to contract action item
is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1 from sysobjects where name='ctx_ai_notification' and type = 'U') " + &
"  create table ctx_ai_notification( " + &
"	ctx_id int not null , " + &
"	ctx_action_item_id int not null, " + &
"	alm_table varchar(40) not null , " + &
"	alm_column varchar(40) not null , " + &
"	alm_message varchar(255) null , " + &
"	alm_enabled char(1) null , " + &
"	alm_notification_days int null , " + &
"	alm_last_notification_sent datetime null , " + &
"	alm_post_notification_days int null , " + &
"	alm_total_tries int null , " + &
"	alm_action_item_posted int null , " + &
"	alm_total_tries_counter int null , " + &
"	alm_frequency int null , " + &
"	create_action_item char(1) null , " + &
"	record_id numeric(10, 0) not null , " + &
"	alm_auto_increment_years int null , " + &
"	alm_action_title varchar(40) null , " + &
"	wf_id int null , " + &
"	alm_auto_increment_unit char(1) null,  " + &
" 	primary key(ctx_id, ctx_action_item_id, alm_table, alm_column )) "

is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	
"if not exists( select TOP 1 1 from sysobjects where name='FK_ctx_ai_notification_to_ctx_action_items' and type = 'F') " + &
"  alter table ctx_ai_notification add constraint FK_ctx_ai_notification_to_ctx_action_items foreign key (ctx_action_item_id,ctx_id) references ctx_action_items (ctx_action_item_id,ctx_id) "
  
is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	  
"if not exists (select TOP 1 1 from sysobjects where name='ctx_ai_notification_users' and type = 'U') " + &
"  create table ctx_ai_notification_users ( " + &
"	ctx_id int not null , " + &
"	ctx_action_item_id int not null, " + &
"	alm_table varchar (40) not null , " + &
"	alm_column varchar (40) not null , " + &
"	user_id varchar (10) not null , " + &
"	primary key(ctx_id, ctx_action_item_id, alm_table, alm_column, user_id )) "

is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	
"if not exists( select TOP 1 1 from sysobjects where name='FK_ctx_ai_noti_users_to_ctx_ai_noti' and type = 'F')  " + &
"  alter table ctx_ai_notification_users add constraint FK_ctx_ai_noti_users_to_ctx_ai_noti foreign key (ctx_id, ctx_action_item_id, alm_table, alm_column ) references ctx_ai_notification (ctx_id, ctx_action_item_id, alm_table, alm_column ) "

//for date alarm to document manager action item
is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	
"if not exists (select TOP 1 1 from sysobjects where name='ctx_am_ai_notification' and type = 'U')  " + &
"  create table ctx_am_ai_notification( " + &
"	doc_id int not null , " + &
"	seq_id int not null , " + &
"	alm_table varchar(40) not null , " + &
"	alm_column varchar(40) not null , " + &
"	alm_message varchar(255) null , " + &
"	alm_enabled char(1) null , " + &
"	alm_notification_days int null , " + &
"	alm_last_notification_sent datetime null , " + &
"	alm_post_notification_days int null , " + &
"	alm_total_tries int null , " + &
"	alm_action_item_posted int null , " + &
"	alm_total_tries_counter int null , " + &
"	alm_frequency int null , " + &
"	create_action_item char(1) null , " + &
"	record_id numeric(10, 0) not null , " + &
"	alm_auto_increment_years int null , " + &
"	alm_action_title varchar(40) null , " + &
"	wf_id int null , " + &
"	alm_auto_increment_unit char(1) null, " + &
" 	primary key(doc_id, seq_id, alm_table, alm_column )) "

is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	
"if not exists( select TOP 1 1 from sysobjects where name='FK_ctx_am_ai_noti_to_ctx_am_ai' and type = 'F')  " + &
"  alter table ctx_am_ai_notification add constraint FK_ctx_am_ai_noti_to_ctx_am_ai foreign key (doc_id,seq_id) references ctx_am_action_item (doc_id,seq_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	
"if not exists (select TOP 1 1 from sysobjects where name='ctx_am_ai_notification_users' and type = 'U')  " + &
"  create table ctx_am_ai_notification_users ( " + &
"	doc_id int not null , " + &
"	seq_id int not null , " + &
"	alm_table varchar (40) not null , " + &
"	alm_column varchar (40) not null , " + &
"	user_id varchar (10) not null , " + &
"	primary key(doc_id, seq_id, alm_table, alm_column, user_id ))  "

is_sql_statements[upperbound(is_sql_statements) + 1] =  & 	
"if not exists( select TOP 1 1 from sysobjects where name='FK_ctx_amai_notiusers_to_ctx_amai_noti' and type = 'F')  " + &
"  alter table ctx_am_ai_notification_users add constraint FK_ctx_amai_notiusers_to_ctx_amai_noti foreign key (doc_id, seq_id, alm_table, alm_column ) references ctx_am_ai_notification (doc_id, seq_id, alm_table, alm_column ) "
//-------------End Added by Alfee 02.26.2008------------------------------

//-------Begin Added by Evan on 03.03.2008 -----------------------
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='sort_no' " + &
"     and t.name='import_table_records' " + &
"     and t.type = 'U') " + &
"alter table import_table_records add sort_no integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='sort_no' " + &
"     and t.name='import_mapping_fields' " + &
"     and t.type = 'U') " + &
"alter table import_mapping_fields add sort_no integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='process_tables_id' " + &
"     and t.name='import_process_errors' " + &
"     and t.type = 'U') " + &
"alter table import_process_errors add process_tables_id numeric(16,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='err_value' " + &
"     and t.name='import_process' " + &
"     and t.type = 'U') " + &
"alter table import_process add err_value varchar(300) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='import_process_tables' " + &
"            and   type = 'U') " + &
"create table import_process_tables " + &
"( " + &
"process_tables_id numeric(16,0) identity, " + &
"process_id numeric(16,0) null, " + &
"table_records_id integer null, " + &
"error_count integer null, " + &
"mod_count integer null, " + &
"add_count integer null, " + &
"primary key (process_tables_id) " + &
") "
//--------End Added by Evan on 03.03.2008 ------------------------
//-------Begin Added by nova on 03.03.2008 -----------------------
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1  " + &
"                from syscolumns c, sysobjects t  " + &
"					 where c.id=t.id and c.name='lookup_type' " + &
"					 and t.name = 'conv_view_fields'  " + &
"					 and t.type = 'U') " + &
"alter table conv_view_fields add lookup_type CHAR(1) null " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table view_fields_alias alter column c_alias VARCHAR(255) null"
//-------End Added by nova on 03.03.2008 -----------------------

//-------Begin Added by nova on 03.17.2008 -----------------------
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF  EXISTS (SELECT TOP 1 1 FROM sysindexes  WHERE name = 'idx_pd_images_rec_id')  " + &
"    DROP INDEX pd_images.idx_pd_images_rec_id"
//-------End Added by nova on 03.17.2008 -----------------------

//-------Begin Added by nova on 03.24.2008 -----------------------
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1 from sysobjects where name='em_sent_items' and type = 'U')  " + &
" create table em_sent_items  " + &
" (  " + &
" id integer identity not null,  " + &
" user_id varchar(10) null,  " + &
" subject varchar(200) null,  " + &
" mail_from varchar(50) null,  " + &
" mail_to varchar(50) null,  " + &
" mail_cc varchar(50) null,  " + &
" mail_bcc varchar(50) null,  " + &
" sent_time datetime null,  " + &
" mail_content image null,  " + &
" attach_name varchar(500) null,  " + &
" constraint pk_em_sent_items_id primary key (id)  " + &
" )  " 


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and  " + &
"         c.name='advanced_linking' and t.name = 'conv_view' and t.type = 'U')  " + &
" alter table conv_view add advanced_linking int null  " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and  " + &
"         c.name='visible' and t.name = 'view_fields_alias' and t.type = 'U')  " + &
" alter table view_fields_alias add visible int null  " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and  " + &
"         c.name='Filter_by_field' and t.name = 'conv_view_fields' and t.type = 'U')  " + &
" alter table conv_view_fields add Filter_by_field int null  " 
//-------End Added by nova on 03.24.2008 -----------------------

//-------Begin Added by nova on 04.01.2008 -----------------------
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(   select 1 from syscolumns c, sysobjects t   " + &  
"    where c.id=t.id  and c.name='field_font_italic' and t.name='data_view_fields'   and t.type = 'U')  " + &
"Alter table data_view_fields add field_font_italic integer null  " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(   select 1 from syscolumns c, sysobjects t     " + &
"   where c.id=t.id  and c.name='label_font_italic' and t.name='data_view_fields'   and t.type = 'U')  " + &
"    Alter table data_view_fields add label_font_italic integer null  " 

 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
"  where c.id=t.id  and c.name='label_font_weight' and t.name='data_view_fields'   and t.type = 'U')   " + &
"Alter table data_view_fields add label_font_weight integer null "
//-------End Added by nova on 04.01.2008 -----------------------


of_execute_sqls("of_ver80_release_table2")

Return 1
end function

public function integer of_ver80_release_view1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_address_lookup' and type = 'V')  " + &
"  drop view v_address_lookup "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_address_lookup " + &
"	as select distinct  top 100 percent  " + &
"	address_lookup.lookup_code, " + &
"	address_lookup.lookup_name, " + &
"	address_lookup.code, " + &
"	address_lookup.entity_name, " + &
"	address_lookup.street1, " + &
"	address_lookup.street2, " + &
"	address_lookup.city, " + &
"	address_lookup.state, " + &
"	address_lookup.zip, " + &
"	address_lookup.country, " + &
"	address_lookup.phone, " + &
"	address_lookup.fax, " + &
"	address_lookup.email_address, " + &
"	address_lookup.web_address, " + &
"	address_lookup.custom_1, " + &
"	address_lookup.custom_2, " + &
"	address_lookup.custom_3, " + &
"	address_lookup.custom_4, " + &
"	address_lookup.custom_5, " + &
"	address_lookup.custom_6, " + &
"	address_lookup.contact_name, " + &
"	address_lookup.contact_salutation, " + &
"	address_lookup.fee, " + &
"	address_lookup.web_title, " + &
"	address_lookup.audit_flag, " + &
"	address_lookup.CAQH_CODE, " + &
"	address_lookup.ic_n, " + &
"	address_lookup.ic_c, " + &
"	address_lookup.Large_Description_1, " + &
"	address_lookup.Large_Description_2, " + &
"	address_lookup.Money_1, " + &
"	address_lookup.Money_2, " + &
"	address_lookup.Integer_1, " + &
"	address_lookup.Integer_2, " + &
"	address_lookup.Integer_3, " + &
"	address_lookup.Integer_4, " + &
"	address_lookup.Integer_5, " + &
"	address_lookup.Integer_6, " + &
"	address_lookup.Integer_7, " + &
"	address_lookup.Integer_8, " + &
"	address_lookup.datetime_1, " + &
"	address_lookup.datetime_2 " + &
"from address_lookup " + &
"order by address_lookup.lookup_code "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_code_lookup' and type = 'V')  " + &
"  drop view v_code_lookup "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_code_lookup " + &
"	as select  top 100 percent   " + &
"	lookup_code, " + &
"	lookup_name as table_name, " + &
"	code, " + &
"	description, " + &
"	type, " + &
"	custom_1, " + &
"	custom_2, " + &
"	custom_3, " + &
"	custom_4, " + &
"	custom_5, " + &
"	custom_6, " + &
"	caqh_code, " + &
"	ic_n, " + &
"	ic_c, " + &
"	modify_date, " + &
"	Large_Description_1, " + &
"	Large_Description_2, " + &
"	Money_1, " + &
"	Money_2, " + &
"	Integer_1, " + &
"	Integer_2, " + &
"	Integer_3, " + &
"	Integer_4, " + &
"	Integer_5, " + &
"	Integer_6, " + &
"	Integer_7, " + &
"	Integer_8, " + &
"	datetime_1, " + &
"	datetime_2 " + &
"from code_lookup " + &
"order by lookup_code "

//move from of_ver70_release_view2 by nova 2008-03-27
//reason:fixed bug BugN032701(WEB&PB  P2)
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='view_group_practice' and type = 'V')  " + &
"  drop view view_group_practice "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  view_group_practice " + &
"  as select  top 100 percent  locat_id=group_practice.rec_id, " + &
"    group_practice.prac_id, " + &
"    prac_type_code=code_lookup_d.code, " + &
"    prac_type=code_lookup_d.description, " + &
"    group_practice.street, " + &
"    group_practice.city, " + &
"    state_code=code_lookup_e.code, " + &
"    state_name=code_lookup_e.description, " + &
"    country_code=code_lookup_f.code, " + &
"    country_name=code_lookup_f.description, " + &
"    group_practice.pager_number, " + &
"    group_practice.phone, " + &
"    group_practice.ext, " + &
"    group_practice.fax, " + &
"    group_practice.zip, " + &
"    county_code=code_lookup_g.code, " + &
"    county_name=code_lookup_g.description, " + &
"    group_practice.contact_person, " + &
"    group_practice.tax_id, " + &
"    group_practice.tax_id_other_1, " + &
"    group_practice.tax_id_other_2, " + &
"    group_practice.business_mgr, " + &
"    group_practice.office_mgr, " + &
"    group_practice.e_mail_address, " + &
"    group_practice.web_address, " + &
"    group_practice.mon_from, " + &
"    group_practice.mon_to, " + &
"    group_practice.tue_from, " + &
"    group_practice.tue_to, " + &
"    group_practice.wed_from, " + &
"    group_practice.thu_from, " + &
"    group_practice.thu_to, " + &
"    group_practice.fri_from, " + &
"    group_practice.fri_to, " + &
"    group_practice.sat_from, " + &
"    group_practice.sat_to, " + &
"    group_practice.sun_from, " + &
"    group_practice.sun_to, " + &
"    group_practice.mon_from2, " + &
"    group_practice.mon_to2, " + &
"    group_practice.tue_from2, " + &
"    group_practice.tue_to2, " + &
"    group_practice.wed_from2, " + &
"    group_practice.wed_to2, " + &
"    group_practice.thu_from2, " + &
"    group_practice.thu_to2, " + &
"    group_practice.fri_from2, " + &
"    group_practice.fri_to2, " + &
"    group_practice.sat_from2, " + &
"    group_practice.sat_to2, " + &
"    group_practice.sun_from2, " + &
"    group_practice.sun_to2, " + &
"    group_practice.wed_to, " + &
"    group_practice.routine_visit_appt, " + &
"    group_practice.urgent_visit_appt, " + &
"    group_practice.emergency_visit_appt, " + &
"    group_practice.non_emergency_appt, " + &
"    young_child_code=code_lookup_h.code, " + &
"    child_code=code_lookup_i.code, " + &
"    adolescent_code=code_lookup_j.code, " + &
"    adult_code=code_lookup_k.code, " + &
"    senior_code=code_lookup_l.code, " + &
"    handicap_acc=code_lookup_m.description, " + &
"    on_public_trans=code_lookup_n.description, " + &
"    group_practice.cust_1, " + &
"    group_practice.cust_2, " + &
"    group_practice.cust_3, " + &
"    group_practice.cust_4, " + &
"    group_practice.cust_5, " + &
"    group_practice.cust_6, " + &
"    group_practice.street_2, " + &
"    group_practice.gp_id, " + &
"    accepting_new_patient=code_lookup_p.description " + &
"from(((((((((((( " + &
"    group_practice left outer join code_lookup as code_lookup_d on group_practice.practice_type = code_lookup_d.lookup_code) left outer join code_lookup as code_lookup_e on group_practice.state = code_lookup_e.lookup_code) left outer join code_lookup as code_lookup_f on group_practice.country = code_lookup_f.lookup_code) left outer join code_lookup as code_lookup_g on group_practice.county = code_lookup_g.lookup_code) left outer join code_lookup as code_lookup_h on group_practice.young_child = code_lookup_h.lookup_code) left outer join code_lookup as code_lookup_i on group_practice.child = code_lookup_i.lookup_code) left outer join code_lookup as code_lookup_j on group_practice.adolescent = code_lookup_j.lookup_code) left outer join code_lookup as code_lookup_k on group_practice.adult = code_lookup_k.lookup_code) left outer join code_lookup as code_lookup_l on group_practice.senior_adult = code_lookup_l.lookup_code) left outer join code_lookup as code_lookup_m on group_practice.handicapped_access = code_lookup_m.lookup_code) left outer join code_lookup as code_lookup_n on group_practice.public_transportation = code_lookup_n.lookup_code) left outer join code_lookup as code_lookup_p on group_practice.accepting_new_patients = code_lookup_p.lookup_code) " + &
"order by group_practice.rec_id "


//added by nova 2008-04-09
//reason: fixed mail from gunshiguo /// craig db/intellireport
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_columndatatypes' and type = 'V')  " + &
"  drop view v_columndatatypes "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW v_columndatatypes   " + &
"AS   " + &
"SELECT   " + &
" obj.id AS tableid,   " + &
" col.colid AS col_id,   " + &
" CASE WHEN typ.name='sysname' THEN 'nvarchar' ELSE typ.name END AS datatype   " + &
" FROM   " + &
" dbo.systypes typ INNER JOIN   " + &
" dbo.sysobjects obj INNER JOIN   " + &
" dbo.syscolumns col ON obj.id = col.id ON typ.xusertype = col.xusertype INNER JOIN   " + &
" master.dbo.syscharsets a_cha ON ISNULL(CONVERT(tinyint, CollationPropertyFromID(col.collationid, 'sqlcharset')), CONVERT(tinyint, ServerProperty('sqlcharset'))) = a_cha.id   " + &
" WHERE   " + &
" (obj.xtype IN ('U', 'V')) " 

of_execute_sqls("of_ver80_release_view1")

Return 1
end function

public function integer of_ver80_patch_table1 ();is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"ALTER TABLE conv_view ALTER COLUMN view_name varchar(100) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='value_display'    "+&
	"  and t.name='conv_view_where'    "+&
	"  and t.type = 'U')    "+&
	"ALTER table conv_view_where add value_display varchar(255) null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(    "+&
	" select TOP 1 1 from syscolumns c, sysobjects t    "+&
	" where c.id=t.id     "+&
	"   and c.name='lu_field_name'    "+&
	"   and t.name='conv_view_where'    "+&
	"   and t.type = 'U')    "+&
	"ALTER table conv_view_where add lu_field_name varchar(50) null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(    "+&
	"  select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"  where c.id=t.id     "+&
	"    and c.name='lookup_type'    "+&
	"    and t.name='conv_view_where'    "+&
	"    and t.type = 'U')    "+&
	"ALTER table conv_view_where add lookup_type char(1) null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(    "+&
	"  select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"  where c.id=t.id     "+&
	"    and c.name='field_type'    "+&
	"    and t.name='conv_view_where'    "+&
	"    and t.type = 'U')    "+&
	"ALTER table conv_view_where add field_type varchar(2) null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(       "+&
	"select TOP 1 1 from syscolumns c, sysobjects t       "+&
	"where c.id=t.id        "+&
	"  and c.name='lookup_name'     "+&
	"  and t.name='conv_view_where'       "+&
	"  and t.type = 'U')        "+&
	"ALTER table conv_view_where add lookup_name varchar(50) null "
//moved to n_cst_update_date by nova 2008-08-20 
//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//	"UPDATE conv_view_where SET    "+&
//	"field_type = CASE b.coltype    "+&
//	"				WHEN 'int'      THEN 'N'    "+&
//	"				WHEN 'float'    THEN 'N'    "+&
//	"				WHEN 'smallint' THEN 'N'    "+&
//	"				WHEN 'money'    THEN 'N'    "+&
//	"				WHEN 'real'     THEN 'N'    "+&
//	"				WHEN 'decimal'  THEN 'N'    "+&
//	"				WHEN 'tinyint'  THEN 'N'    "+&
//	"				WHEN 'numeric'  THEN 'N'    "+&
//	"				WHEN 'bit'      THEN 'N'    "+&
//	"				WHEN 'char'     THEN 'C'    "+&
//	"				WHEN 'nvarchar' THEN 'C'    "+&
//	"				WHEN 'varchar'  THEN 'C'    "+&
//	"				WHEN 'text'     THEN 'C'    "+&
//	"				WHEN 'datetime' THEN 'D'    "+&
//	"				ELSE a.field_type    "+&
//	"			 END     "+&
//	"FROM conv_view_where a    "+&
//	"INNER JOIN v_syscolumns b ON (a.table_field_name = b.tname + '.' + b.cname)    "+&
//	"WHERE a.field_type IS NULL    "
//

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists (select TOP 1 1 from  sysobjects where  name='sys_StatusAudit' and type = 'U')    "+&
	"CREATE TABLE sys_StatusAudit    "+&
	"( ctx_id int not null,    "+&
	" seq_no int not null,    "+&
	" status numeric(6,0) null,    "+&
	" start_time datetime null,    "+&
	" delay_days int null,    "+&
	" user_id varchar(10) null,    "+&
	" CONSTRAINT PK_SYS_STATUSAUDIT PRIMARY KEY (ctx_id,seq_no),    "+&
	" CONSTRAINT FK_STATUSAUDIT_BASICINFO FOREIGN KEY (ctx_id) REFERENCES ctx_basic_info(ctx_id),    "+&
	")    "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"Alter table group_practice Alter COLUMN  cust_1 varchar(150) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"Alter table group_practice Alter COLUMN  cust_2 varchar(150) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"Alter table group_practice Alter COLUMN  cust_3 varchar(150) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"Alter table group_practice Alter COLUMN  cust_4 varchar(150) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"Alter table group_practice Alter COLUMN  cust_5 varchar(150) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"Alter table group_practice Alter COLUMN  cust_6 varchar(150) "

//for contract date alarm	- Alfee 06.06.2008
Long ll_cnt = 1
SELECT count(*) Into :ll_cnt From syscolumns c, sysobjects t Where c.id = t.id  And c.Name = 'alm_last_wf_trigger' And t.Name = 'ctx_notification' And t.Type = 'U';
IF ll_cnt < 1 THEN
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
		"Alter table ctx_notification add alm_last_wf_trigger datetime null "
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
		"Update ctx_notification set alm_last_wf_trigger = alm_last_notification_sent where alm_last_notification_sent is not null and wf_id is not null "
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
		"Alter table ctx_ai_notification add alm_last_wf_trigger datetime null "
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
		"Update ctx_ai_notification set alm_last_wf_trigger = alm_last_notification_sent where alm_last_notification_sent is not null and wf_id is not null  "
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
		"Alter table ctx_am_ai_notification add alm_last_wf_trigger datetime null "
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
		"Update ctx_am_ai_notification set alm_last_wf_trigger = alm_last_notification_sent where alm_last_notification_sent is not null and wf_id is not null  "
END IF

//---------Begin Added by Alfee on 06.11.2008 ---------------------------
//for email template in Contract Date Alarm 
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_email_template_id' and t.name='ctx_notification' and t.type = 'U') " + &
	"alter table ctx_notification add alm_email_template_id int NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_message_blob' and t.name='ctx_notification' and t.type = 'U') " + &
	"alter table ctx_notification add alm_message_blob image NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_attachment_name' and t.name='ctx_notification' and t.type = 'U') " + &
	"alter table ctx_notification add alm_attachment_name varchar(100) NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_attachment' and t.name='ctx_notification' and t.type = 'U') " + &
	"alter table ctx_notification add alm_attachment image NULL "

//for email template in Date Alarm of Action Item
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_email_template_id' and t.name='ctx_ai_notification' and t.type = 'U') " + &
	"alter table ctx_ai_notification add alm_email_template_id int NULL, alm_message_blob image NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_message_blob' and t.name='ctx_ai_notification' and t.type = 'U') " + &
	"alter table ctx_ai_notification add alm_message_blob image NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_attachment_name' and t.name='ctx_ai_notification' and t.type = 'U') " + &
	"alter table ctx_ai_notification add alm_attachment_name varchar(100) NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_attachment' and t.name='ctx_ai_notification' and t.type = 'U') " + &
	"alter table ctx_ai_notification add alm_attachment image NULL "

//for email template in Date Alarm of document manager Action Item
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_email_template_id' and t.name='ctx_am_ai_notification' and t.type = 'U') " + &
	"alter table ctx_am_ai_notification add alm_email_template_id int NULL, alm_message_blob image NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_message_blob' and t.name='ctx_am_ai_notification' and t.type = 'U') " + &
	"alter table ctx_am_ai_notification add alm_message_blob image NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_attachment_name' and t.name='ctx_am_ai_notification' and t.type = 'U') " + &
	"alter table ctx_am_ai_notification add alm_attachment_name varchar(100) NULL "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
	"   c.name='alm_attachment' and t.name='ctx_am_ai_notification' and t.type = 'U') " + &
	"alter table ctx_am_ai_notification add alm_attachment image NULL "
//----------End Added ---------------------------------------------------


//mail from wuzhijun	- nova 06.08.2008
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(    "+&
	" select TOP 1 1 from syscolumns c, sysobjects t     "+&
	" where c.id=t.id     "+&
	"   and c.name='ColName'     "+&
	"   and t.name='lookup_coltitle'    "+&
	"   and t.type = 'U')    "+&
	" ALTER table lookup_coltitle add ColName varchar(30) null    "


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(     "+&
	" select TOP 1 1 from syscolumns c, sysobjects t    "+&
	" where c.id=t.id    "+&
	"   and c.name='ColCoorX'    "+&
	"   and t.name='lookup_coltitle'    "+&
	"   and t.type = 'U')    "+&
	" ALTER table lookup_coltitle add ColCoorX int null    "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(     "+&
	" select TOP 1 1 from syscolumns c, sysobjects t    "+&
	" where c.id=t.id    "+&
	"   and c.name='ColWidth'    "+&
	"   and t.name='lookup_coltitle'    "+&
	"   and t.type = 'U')    "+&
	"   ALTER table lookup_coltitle add ColWidth int null    "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(     "+&
	" select TOP 1 1 from syscolumns c, sysobjects t    "+&
	" where c.id=t.id    "+&
	"   and c.name='preprocess_path'    "+&
	"   and t.name='import_hdr'    "+&
	"   and t.type = 'U')    "+&
	"   Alter table import_hdr add preprocess_path varchar(250) null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(       "+&
	" select TOP 1 1 from syscolumns c, sysobjects t       "+&
	" where c.id=t.id        "+&
	"   and c.name='app_stat_facility_label'       "+&
	"   and t.name='icred_settings'       "+&
	"   and t.type = 'U')       "+&
	" ALTER table icred_settings add app_stat_facility_label varchar(50) null      "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(       "+&
	" select TOP 1 1 from syscolumns c, sysobjects t       "+&
	" where c.id=t.id        "+&
	"   and c.name='app_stat_app_label'       "+&
	"   and t.name='icred_settings'       "+&
	"   and t.type = 'U')       "+&
	" ALTER table icred_settings add app_stat_app_label varchar(50) null     "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(       "+&
	" select 1 from syscolumns c, sysobjects t       "+&
	" where c.id=t.id       "+&
	"  and c.name='set_StAppImgInDB'       "+&
	"  and t.name='icred_settings'       "+&
	"  and t.type = 'U')       "+&
	"  ALTER table icred_settings add set_StAppImgInDB int null default 0"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists (select TOP 1 1 from  sysobjects where  name='net_dev_action_images' and type = 'U')    "+&
	"CREATE TABLE net_dev_action_images       "+&
	"(      rec_id  numeric(10,0) not null,       "+&
	"       prac_id numeric(10,0) not null,       "+&
	"       app_id numeric(6,0) null,       "+&
	"       image_type int null,       "+&
	"       save_date datetime null,       "+&
	"       image_data image        "+&
	"       CONSTRAINT PK_NET_DEV_ACTION_IMAGES PRIMARY KEY (rec_id,prac_id)       "+&
	")       "

//Add a field to indicate if the prompt of Imaging 360 to the user done - Alfee 07.10.2008
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
"  where c.id=t.id  and c.name='image_prompt_flag' and t.name='security_users' and t.type = 'U')   " + &
"Alter table security_users add image_prompt_flag char(1) null "


of_execute_sqls("of_ver80_patch_table1")

RETURN 1

end function

public function integer of_ver70_release_table1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='DB_CONTROL' " + &
"            and   type = 'U') " + &
"create table DB_CONTROL (db_control_db int not null, contract_code_version int null, contract_database_version int null, module2_code_version int null, module2_database_version int null, module3_code_version int null, module3_database_version int null, module4_code_version int null, module4_database_version int null, module5_code_version int null, module5_database_version int null, primary key (db_control_db)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='appt_stat_id' " + &
"     and t.name='pd_priv_list' " + &
"     and t.type = 'U') " + &
"ALTER table pd_priv_list add appt_stat_id numeric(10,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table sys_tables  alter column table_name_allias  VARCHAR( 100) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_action_items alter column notes varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_BASIC_INFO alter column notes varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_BASIC_INFO alter column app_facility numeric(5,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_CPT_CODE_ITEM alter column location_price decimal null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t,systypes p " + &
"   where c.id=t.id  " + &
"     and c.xtype = p.xtype " + &
"     and p.name = 'text' " + &
"     and c.name='cpt_code_description' " + &
"     and t.name='CTX_CPT_CODES' " + &
"     and t.type = 'U') " + &
"alter table CTX_CPT_CODES alter column cpt_code_description text null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_CPT_CODES alter column base_price decimal null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t,systypes p " + &
"   where c.id=t.id  " + &
"     and c.xtype = p.xtype " + &
"     and p.name = 'text' " + &
"     and c.name='clause' " + &
"     and t.name='CTX_ELEMENTS' " + &
"     and t.type = 'U') " + &
"alter table CTX_ELEMENTS alter column clause varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_FEE_SCHED_NM alter column description varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t,systypes p " + &
"   where c.id=t.id  " + &
"     and c.xtype = p.xtype " + &
"     and p.name = 'text' " + &
"     and c.name='notes' " + &
"     and t.name='CTX_FEE_SCHED_NM' " + &
"     and t.type = 'U') " + &
"alter table CTX_FEE_SCHED_NM alter column notes text null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_ORGS alter column drections varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_ORGS alter column notes varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_ORGS_CONTACT alter column notes varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_contacts alter column city varchar(35) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_contacts alter column zip varchar(12) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_contacts alter column street_1 varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table sys_storage_docs alter column doc_type varchar(1) null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table sys_storage_docs alter column user_id  varchar(10) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Declare @ls_name VARCHAR(256),@ls_sql VARCHAR(1000) " + &
"select @ls_name = name from sysobjects where xtype='PK' and parent_obj=object_id('CTX_NOTIFICATION_USERS') " + &
"if Len(@ls_name) > 0 " + &
"begin " + &
"    select @ls_sql = 'ALTER TABLE CTX_NOTIFICATION_USERS DROP CONSTRAINT ' + @ls_name " + &
"    exec (@ls_sql) " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table CTX_NOTIFICATION_USERS alter column user_id varchar(10) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE CTX_NOTIFICATION_USERS Add CONSTRAINT Pk__Ctx_Notification PRIMARY KEY(ctx_id,user_id,alm_table,alm_column) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists(select TOP 1 1 from sysobjects  " + &
"    where name='FK_CTX_ACTI_FK_CTX_AC_CTX_CONT' and type = 'F') " + &
"Alter table CTX_ACTION_ITEMS       drop constraint FK_CTX_ACTI_FK_CTX_AC_CTX_CONT "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists(select TOP 1 1 from sysobjects  " + &
"    where name='FK_CTX_CONT_REFERENCE_CODE_LOO_STATE' and type = 'F') " + &
"alter table CTX_CONTACTS drop FK_CTX_CONT_REFERENCE_CODE_LOO_STATE "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_contacts alter column state numeric(5,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists(select TOP 1 1 from sysobjects  " + &
"   where name='FK_CTX_FEE__REFERENCE_CODE_LOO_location' and type = 'F')  " + &
"alter table CTX_FEE_SCHED_LOCATIONS drop FK_CTX_FEE__REFERENCE_CODE_LOO_location "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(2000) " + &
"declare @ls_sql varchar(2000) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('CTX_NOTIFICATION_USERS') " + &
"if @ls_key_name <> '' " + &
"begin " + &
"  select @ls_sql = 'alter table CTX_NOTIFICATION_USERS drop constraint ' + @ls_key_name  " + &
"  exec (@ls_sql)  " + &
"  select @ls_sql = 'alter table CTX_NOTIFICATION_USERS add constraint ' + @ls_key_name + ' primary key (ctx_id, user_id, alm_table, alm_column)'  " + &
"  exec (@ls_sql)  " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_default_name varchar(2000) " + &
"declare @ls_sql varchar(2000) " + &
"begin " + &
"	select @ls_default_name = name from sysobjects where id=(select id from syscomments where id=(select cdefault from syscolumns where id=object_id('ctx_contacts') and name='middle_name')) " + &
"	IF len(@ls_default_name) > 0 " + &
"	BEGIN " + &
"		select @ls_sql = 'alter table CTX_CONTACTS drop constraint ' + @ls_default_name " + &
"		exec (@ls_sql)  " + &
"	END " + &
"	alter table CTX_CONTACTS add constraint DF__CTX_CONTA__middl__6383C8BA default '' for middle_name  " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(2000) " + &
"declare @ls_sql varchar(2000) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('sys_storage_docs') " + &
"if @ls_key_name is not null " + &
"begin " + &
"  select @ls_sql = 'alter table sys_storage_docs drop constraint ' + @ls_key_name  " + &
"  exec (@ls_sql)  " + &
"  alter table sys_storage_docs alter column doc_name varchar(75) not null   " + &
"  select @ls_sql = 'alter table sys_storage_docs add constraint ' + @ls_key_name + ' primary key(area_id, doc_name)'  " + &
"  exec (@ls_sql)  " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete From sys_fields where table_id = 54 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete From sys_fields where table_id = 56 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete from sys_tables where table_id = 54 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete from sys_tables where table_id = 56 "

of_execute_sqls("of_ver70_release_table1")

Return 1
end function

public function integer of_ver70_release_table2 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='ctx_screen' " + &
"            and   type = 'U') " + &
"Create table ctx_screen (data_view_id integer  not null,screen_id integer not null,tab_name varchar(200) null,screen_name varchar(255) null,dw_name	varchar(200) null,dataobject varchar(200) null,description varchar(255) null,dw_sql text null,create_date datetime null,modify_date datetime null,PRIMARY KEY (data_view_id,screen_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='ctx_version' " + &
"            and   type = 'U') " + &
"Create table ctx_version(ctx_id int not null,version_id int not null,version_number varchar(15) not null,version_date datetime null,user_id varchar(20) null,old_value varchar(100) null,new_value varchar(100) null,PRIMARY KEY ( ctx_id,version_id )) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='sys_lookup' " + &
"            and   type = 'U') " + &
"Create Table sys_lookup (lookup_name varchar(35) NOT NULL ,PRIMARY KEY (lookup_name)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='ctx_globalsearch_term' " + &
"            and   type = 'U') " + &
"Create Table ctx_globalsearch_term( " + &
"	id			smallint 		identity, " + &
"	searchtext		varchar(255)		null, " + &
"	resultsnum		integer			null, " + &
"	searchin_1		char(1)			null, " + &
"	searchin_2		char(1)			null, " + &
"	searchin_3		char(1)			null, " + &
"	searchin_4		char(1)			null, " + &
"	searchin_5		char(1)			null, " + &
"	searchin_6		char(1)			null, " + &
"	searchin_7		char(1)			null, " + &
"	searchin_8		char(1)			null, " + &
"	searchin_9		char(1)			null, " + &
"	searchin_10		char(1)			null, " + &
"	searchin_11		char(1)			null, " + &
"	searchin_12		char(1)			null, " + &
"	criteria_results	char(1)			null, " + &
"	criteria_contract	char(1)			null, " + &
"	primary key (id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='type_c' " + &
"     and t.name='data_view' " + &
"     and t.type = 'U') " + &
"alter table data_view add  type_c varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='contract_default_view' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"alter table security_users add  contract_default_view integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_11' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_11 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_12' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_12 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_13' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_13 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_14' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_14 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_15' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_15 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_16' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_16 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_17' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_17 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_18' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_18 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_19' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_19 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_20' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_20 varchar(255) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date6' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date6 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date7' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date7 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date8' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date8 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date9' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date9 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date10' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date10 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date11' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date11 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date12' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date12 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date13' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date13 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date14' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date14 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_date15' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_date15 datetime  null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n1' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n1 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n2' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n2 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n3' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n3 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n4' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n4 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n5' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n5 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n6' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n6 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n7' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n7 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n8' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n8 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n9' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n9 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n10' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  custom_n10 numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='version_number' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  version_number varchar(15) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='version_date' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add  version_date 	datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='master_contract_id' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add master_contract_id numeric(6,0) null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='master_contract_name' " + &
"     and t.name='ctx_basic_info' " + &
"     and t.type = 'U') " + &
"alter table ctx_basic_info add master_contract_name varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_text4' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_text4 varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_text5' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_text5 varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_text6' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_text6 varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_text7' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_text7 varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_text8' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_text8 varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n1' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_n1 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n2' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_n2 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n3' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_n3 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n4' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_n4 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='custom_n5' " + &
"     and t.name='ctx_fee_sched_nm' " + &
"     and t.type = 'U') " + &
"alter table ctx_fee_sched_nm add  custom_n5 numeric(10,3) null "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='drg_code' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD drg_code VARCHAR(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='rev_code' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD rev_code VARCHAR(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='claim_type' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD claim_type NUMERIC(8,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='flat_fee' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD flat_fee NUMERIC(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='cpt_code_set' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD cpt_code_set NUMERIC(8,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='reimburse_type' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD reimburse_type NUMERIC(8,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='disc_start_perc' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD disc_start_perc NUMERIC(3,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='end_day' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD end_day INTEGER null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='carve_out_day' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD carve_out_day INTEGER null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='sl_threshold' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD sl_threshold NUMERIC(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='sl_reimburse_type' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD sl_reimburse_type NUMERIC(8,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='sl_rate' " + &
"     and t.name='ctx_fee_sched_data' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_fee_sched_data ADD sl_rate NUMERIC(10,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='alm_auto_increment_years' " + &
"     and t.name='ctx_notification' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_notification ADD alm_auto_increment_years INTEGER NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='alm_table' " + &
"     and t.name='ctx_action_items' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_action_items ADD alm_table VARCHAR(40) NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='alm_column' " + &
"     and t.name='ctx_action_items' " + &
"     and t.type = 'U') " + &
"ALTER TABLE ctx_action_items ADD alm_column VARCHAR(40) NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='set_autoresize' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"Alter table icred_settings add set_autoresize int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='ctx_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add ctx_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='ctx_acp_folder_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add ctx_acp_folder_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='ctx_acp_clause_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add ctx_acp_clause_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='ctx_acp_template_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add ctx_acp_template_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='ctx_acp_document_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add ctx_acp_document_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='facility_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add facility_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='contact_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add contact_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='email_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add email_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='user_facility_id ' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add user_facility_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='user_view_id' " + &
"     and t.name='ids' " + &
"     and t.type = 'U') " + &
"Alter table ids add user_view_id numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='Large_Description_1' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"alter table address_lookup add  Large_Description_1 varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='Large_Description_2' " + &
"     and t.name='address_lookup' " + &
"     and t.type = 'U') " + &
"alter table address_lookup add  Large_Description_2 varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='Large_Description_1' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"alter table code_lookup add  Large_Description_1 varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='Large_Description_2' " + &
"     and t.name='code_lookup' " + &
"     and t.type = 'U') " + &
"alter table code_lookup add  Large_Description_2 varchar(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='contact_type2' " + &
"     and t.name='app_facility' " + &
"     and t.type = 'U') " + &
"alter table app_facility add contact_type2 varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='corp_office_flag' " + &
"     and t.name='app_facility' " + &
"     and t.type = 'U') " + &
"alter table app_facility add corp_office_flag int null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='corp_office_link' " + &
"     and t.name='app_facility' " + &
"     and t.type = 'U') " + &
"alter table app_facility add corp_office_link int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='street_3' " + &
"     and t.name='app_facility' " + &
"     and t.type = 'U') " + &
"alter table app_facility add street_3 varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_Sql VARCHAR(1000) " + &
"if exists(select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='street_0' " + &
"     and t.name='app_facility' " + &
"     and t.type = 'U') " + &
"begin " + &
"   SELECT @ls_Sql = 'Update app_facility Set street_3 = street_0  where street_3 is null' " + &
"   EXEC (@ls_Sql) " + &
"   SELECT @ls_Sql = 'alter table app_facility drop COLUMN street_0' " + &
"   EXEC (@ls_Sql) " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='facility_id' " + &
"     and t.name='ctx_contacts' " + &
"     and t.type = 'U') " + &
"alter table ctx_contacts add facility_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n1 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n2 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n3 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n4 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n5 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n6 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n7 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n8 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n9 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_basic_info alter column custom_n10 numeric(12,2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table app_facility alter column facility_name varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table app_facility alter column street varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table app_facility alter column street_2 varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table app_facility alter column street_3 varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_contacts alter column state numeric(6) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table export_header alter column strip_char varchar(8) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table conv_view alter column view_name varchar(30) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table conv_view alter column post_import_sql varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysindexes " + &
"           where  id    = object_id('ctx_basic_info') " + &
"            and   name  = 'indx_master_contract_id' " + &
"            and   indid > 0 " + &
"            and   indid < 255) " + &
"create index indx_master_contract_id on ctx_basic_info (master_contract_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from sysobjects " + &
"   where name='FK_ctx_contacts_facility_id'  " + &
"   and type = 'F')   " + &
"alter table ctx_contacts add constraint FK_ctx_contacts_facility_id foreign key (facility_id) references app_facility (facility_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from sysobjects " + &
"   where name='FK_ctx_products_product_id'  " + &
"   and type = 'F')   " + &
"alter table ctx_products add constraint FK_ctx_products_product_id foreign key (product_id) references code_lookup (lookup_code)  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from sysobjects " + &
"   where name='FK_ctx_products_product_type'  " + &
"   and type = 'F')   " + &
"alter table ctx_products add constraint FK_ctx_products_product_type foreign key (product_type) references  code_lookup (lookup_code) "

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if exists( " + &
//"   select TOP 1 1 from sysobjects " + &
//"   where name='sp_contract_search'  " + &
//"   and type = 'P') " + &
//" drop PROCEDURE sp_contract_search    "
//
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"CREATE PROCEDURE sp_contract_search " + &
//"	 as  " + &
//"	 BEGIN  " + &
//"	   SELECT DISTINCT ctx_basic_info.app_facility,    " + &
//" 			ctx_products.product_id product_code,    " + &
//"			code_lookup.code product_name,    " + &
//"			ctx_basic_info.effective_date,    " + &
//"			ctx_basic_info.expriation_date,    " + &
//"			ctx_basic_info.status,    " + &
//"			ctx_basic_info.group_multi_loc_id,    " + &
//"			ctx_basic_info.ctx_id,    " + &
//"			ctx_basic_info.master_contract_id,   																						  " + &
//"			master_cnt = (select count(ctx_basic_info1.ctx_id) from ctx_basic_info ctx_basic_info1 where ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id), 																						  " + &
//"			ctx_basic_info.category,     " + &
//"			ctx_basic_info.facility_id,    " + &
//"			ctx_basic_info.contract_type,    " + &
//"			code_lookup1.code product_type,    " + &
//"			ctx_basic_info.reimbursment_menth,    " + &
//"			ctx_basic_info.file_location,    " + &
//"			ctx_basic_info.review_date,    " + &
//"			ctx_basic_info.review_by,    " + &
//"			ctx_basic_info.term_date,    " + &
//"			ctx_basic_info.term_reason,    " + &
//"			ctx_basic_info.last_revis_date,    " + &
//"			ctx_basic_info.other_date_1,    " + &
//"			ctx_basic_info.other_date_2,    " + &
//"			ctx_basic_info.oc_signed_by,    " + &
//"			ctx_basic_info.oc_title,    " + &
//"			ctx_basic_info.oc_department,    " + &
//"			ctx_basic_info.oc_legal_rep,    " + &
//"			ctx_basic_info.cc_signed_by,    " + &
//"			ctx_basic_info.cc_title,    " + &
//"			ctx_basic_info.cc_department,    " + &
//"			ctx_basic_info.cc_legal_rep,    " + &
//"			ctx_basic_info.notes,    " + &
//"			ctx_basic_info.keyword,    " + &
//"			ctx_basic_info.dvision,    " + &
//"			ctx_basic_info.custom_1,    " + &
//"			ctx_basic_info.custom_2,    " + &
//"			ctx_basic_info.custom_3,    " + &
//"			ctx_basic_info.custom_4,    " + &
//"			ctx_basic_info.custom_5,    " + &
//"			ctx_basic_info.custom_6,    " + &
//"			ctx_basic_info.custom_7,    " + &
//"			ctx_basic_info.custom_8,    " + &
//"			ctx_basic_info.custom_9,    " + &
//"			ctx_basic_info.custom_10,    " + &
//"			ctx_basic_info.group_id,    " + &
//"			ctx_basic_info.revision_reason,    " + &
//"			ctx_basic_info.record_id , " + &
//"			owner = upper((SELECT top 1 ctx_contacts.user_d  " + &
//"							FROM ctx_contacts,ctx_contract_contacts " + &
//"							WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) and   " + &
//"									(ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) AND   " + &
//"									( ctx_contract_contacts.owner = 'Y' ) )), " + &
//"			contracted_entity = (SELECT top 1 group_multi_loc.rec_id   " + &
//"										   FROM ctx_loc,    " + &
//"												  group_multi_loc   " + &
//"											WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) and   " + &
//"													( ctx_loc.ctx_id = ctx_basic_info.ctx_id) AND   " + &
//"													  ctx_loc.loc_id = 0), " + &
//"			app_facility.facility_name facility_name    " + &
//"    FROM   " + &
//"       	ctx_basic_info  LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id  LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code,  " + &
//"		   ctx_basic_info ctx_basic_info1 LEFT OUTER JOIN app_facility ON ctx_basic_info1.app_facility = app_facility.facility_id  " + &
//"	 WHERE ctx_basic_info.ctx_id = ctx_basic_info1.ctx_id    " + &
//"	 ORDER BY ctx_basic_info.ctx_id   " + &
//" END "
//
of_execute_sqls("of_ver70_release_table2")

Return 1
end function

public function integer of_ver70_release_table3 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_contract_management_right' and   type = 'U') " + &
"  create table ctx_acp_contract_management_right (role_id integer not null,category numeric(6,0) not null,types  int not null,rights varchar(2) not null,primary key (role_id, category, types))	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_folder' and   type = 'U') " + &
"  create table ctx_acp_folder (ctx_acp_folder_id  integer not null,folder_name varchar(50) not null,parent_folder_id integer null,grade integer null,category numeric(6,0) not null,primary key  (ctx_acp_folder_id))	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_clause' and   type = 'U') " + &
"  create table ctx_acp_clause (ctx_acp_clause_id numeric(6,0) not null,ctx_acp_folder_id integer not null,category numeric(6,0) not null,clause_name varchar(255) null,description varchar(255) null,information_message  varchar(255) null,approved_by varchar(20) null,date_approved datetime null,approval_status numeric(6,0) not null,image_file image null,create_date datetime null,modify_date datetime null,primary key  (ctx_acp_clause_id))			 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_clause_rely' and   type = 'U') " + &
"  create table ctx_acp_clause_rely (ctx_acp_clause_id numeric(6,0) not null,ctx_acp_clause_rely_id numeric(6,0) not null,primary key  (ctx_acp_clause_id, ctx_acp_clause_rely_id))	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_template' and   type = 'U') " + &
"  create table ctx_acp_template (ctx_acp_template_id  numeric(6,0) not null,Category numeric(6,0) not null,Template_Name varchar(255) not null,export_id integer not null,wf_id integer null,Description varchar(255) null,Reviewed_By varchar(20) null,Date_Reviewed datetime null,Reviewed_Status numeric(6,0) not null,image_file image null,create_date datetime null,modify_date datetime null,primary key (ctx_acp_template_id))		 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_template_clause' and   type = 'U') " + &
"  create table ctx_acp_template_clause (ctx_acp_template_id  numeric(6,0) not null,ctx_acp_clause_id  numeric(6,0) not null,orders integer not null,primary key (ctx_acp_template_id, ctx_acp_clause_id))	  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_acp_document' and   type = 'U') " + &
"  create table ctx_acp_document (ctx_acp_document_id  numeric(6,0) not null,Category numeric(6,0) not null,Document_Name varchar(255) not null,Document_Type varchar(5) null,wf_id integer null,Files varchar(255) null,Description varchar(255) null,Reviewed_By varchar(20) null,Date_Reviewed datetime null,Reviewed_Status numeric(6,0) not null,image_file image null,create_date datetime null,modify_date datetime null,primary key (ctx_acp_document_id))	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_workflow' and   type = 'U') " + &
"  create table wf_workflow  " + &
"(  " + &
"wf_id   Integer  Not Null,  " + &
"wf_name   varchar(255)  Not Null,    " + &
"wf_status  varchar(1)  Not Null  Default 'A',  " + &
"wf_module  varchar(2)  Not Null,    " + &
"wf_prompt_falg   varchar(1)  Not Null  Default 'N',  " + &
"wf_prompt_message  varchar(255) Null,      " + &
"wf_triggered_by  varchar(3) Not Null,    " + &
"wf_description  varchar(255) Null,  " + &
"agreement_flag   varchar(1)  Not Null  Default 'N',  " + &
"practitioner_falg  varchar(1)  Not Null  Default 'Y',    " + &
"comparison_type  varchar(1)  Not Null  Default 'Y',  " + &
"wf_create_date  DateTime Not Null,  " + &
"wf_update_date  DateTime Not Null,  " + &
"CONSTRAINT pk_wf_workflow PRIMARY Key (wf_id)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_trigger_param_action_status' and   type = 'U') " + &
"  create table wf_trigger_param_action_status  " + &
"(  " + &
"wf_id    Integer   Not Null,  " + &
"action_type_id   numeric(6,0)   Not Null,  " + &
"action_status_id   numeric(6,0)   Not Null,  " + &
"CONSTRAINT pk_wf_parm_action_items PRIMARY Key (wf_id,action_type_id)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_trigger_param_agreement_creation' and   type = 'U') " + &
"  create table wf_trigger_param_agreement_creation  " + &
"(  " + &
"wf_id     Integer   Not Null,  " + &
"doc_id     numeric(6,0)   Not Null,  " + &
"doc_categorie     numeric(6,0)   Not Null,  " + &
"CONSTRAINT pk_agreement_creation PRIMARY Key (wf_id,doc_id)  " + &
")  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_trigger_param_data_comparison' and   type = 'U') " + &
"  create table wf_trigger_param_data_comparison  " + &
"(  " + &
"wf_id   Integer  Not Null,  " + &
"key_id   Integer  Not Null,  " + &
"Type    varchar(1)  Not Null Default 'P',    " + &
"screen_id  Int   Not Null,  " + &
"field_name  varchar(50) Null,  " + &
"field_label  varchar(255) Null,  " + &
"operator   varchar(20) Null  Default '=',     " + &
"Value    varchar(255) Null,  " + &
"logical   varchar(5) Null Default 'and',  " + &
"sql_statement  Text Null,  " + &
"module  varchar(2) Null,  " + &
"CONSTRAINT pk_practitioner_data PRIMARY Key (wf_id,key_id)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_action_types' and   type = 'U') " + &
"  create table wf_action_types  " + &
"(  " + &
"wf_id     Integer  Not Null,  " + &
"step_id    Integer  Not Null,  " + &
"step_name   varchar(30) Null,  " + &
"action_type_id   numeric(6)  Not Null,  " + &
"action_desc   varchar(255) Null,  " + &
"step_order   Integer  Not Null  Default 0,   " + &
"create_flag   varchar(1)  Not Null  Default 'N',  " + &
"due_days   Integer   Not Null Default 0,  " + &
"weekend_flag   varchar(1) Null  Default 'Y',   " + &
"to_user    varchar(50) Null,   " + &
"dept_chair_flag   varchar(1)  Not Null  Default 'N',   " + &
"by_user    varchar(50) Null,  " + &
"create_user_flag   varchar(1)  Not Null  Default 'Y',  " + &
"mail_notify   Integer Null,  " + &
"send_to_user	varchar(50) Null,  " + &
"cc_user    varchar(50) Null,  " + &
"CONSTRAINT pk_action_type PRIMARY Key (wf_id,step_id)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_action_status' and   type = 'U') " + &
"  create table wf_action_status  " + &
"(  " + &
"wf_id     Integer   Not Null,  " + &
"step_id    Integer   Not Null,  " + &
"status_id   Integer   Not Null,  " + &
"status_name   varchar(30) Null,  " + &
"action_status_id  numeric(6,0)   Null,  " + &
"action_status_desc  varchar(255) Null,  " + &
"initial_flag   varchar(1)   Not Null  Default 'N',  " + &
"complete_flag   varchar(1)   Not Null  Default 'N',  " + &
"update_header_flag  varchar(1)   Not Null  Default 'N',  " + &
"update_status_id  numeric(6,0) Null,  " + &
"to_step    Integer Null,  " + &
"trigger_flow   Integer Null,  " + &
"create_step   Integer Null,  " + &
"mail_notify   Integer Null,  " + &
"to_notify_user	varchar(50) Null,  " + &
"cc_notify_user    varchar(50) Null,  " + &
"mail_reminder    Integer Null,  " + &
"to_reminder_user	varchar(50) Null,  " + &
"cc_reminder_user  varchar(50) Null,  " + &
"days_reminder   Integer Null,  " + &
"days_every   Integer Null,  " + &
"send_count    Integer Null ,  " + &
"mail_message    Integer Null,  " + &
"to_message_user   varchar(10) Null,  " + &
"cc_message_user   varchar(10) Null,  " + &
"letter_id   integer Null,  " + &
"return_days   Integer Null,  " + &
"resend_times   Integer Null,  " + &
"day_interval   Integer Null,  " + &
"popup_flag   varchar(1)   Not Null  Default 'N',  " + &
"include_note_flag  varchar(1)   Not Null  Default 'N',  " + &
"process_flag  integer  Not Null  Default 0,  " + &
"CONSTRAINT pk_action_status PRIMARY Key (wf_id,step_id,status_id)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wf_email' and   type = 'U') " + &
"  create table wf_email (  " + &
"email_id  Integer  Not Null ,  " + &
"email_name  varchar(100)  Not Null,  " + &
"module   varchar(50)  Not Null,  " + &
"Subject  varchar(255) Null ,  " + &
"attach_name varchar(100) Null ,  " + &
"attachment  image Null ,  " + &
"email_msg  Text Null ,  " + &
"PRIMARY Key (email_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wv_esign_log' and   type = 'U') " + &
"  create table wv_esign_log (  " + &
"	rec_id int NOT NULL,   " + &
"	facility_id int NOT NULL,   " + &
"	tab_type varchar(30) NOT NULL,   " + &
"	user_id char(15) NOT NULL,   " + &
"	prac_id int NULL,   " + &
"	user_date datetime NULL,   " + &
"	notes varchar(255)   " + &
"	NULL ,   " + &
"	CONSTRAINT PK__wv_esign_log PRIMARY KEY NONCLUSTERED (rec_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='TDL_Basic_info' and   type = 'U') " + &
"  create table TDL_Basic_info(  " + &
"TDL_ID 		Integer Not Null,  " + &
"TDL_Name 	Varchar(100) Not Null,  " + &
"Module 		VarChar(2) Not Null,	 " + &
"Notes 		Varchar(250) Null,	 " + &
"CONSTRAINT pk_TDL_Basic_info PRIMARY KEY (TDL_ID)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='TDL_Detail' and   type = 'U') " + &
"  create table TDL_Detail(  " + &
"TDL_ID 			Integer	Not Null,  " + &
"TDLI_ID 		Integer	Not Null,  " + &
"TDLI_Name 		Varchar(100)	Null,  " + &
"TDL_Sort		Integer	Not Null,	  " + &
"Verbiage 		Varchar(255)	Not Null,  " + &
"Notes 			Text	Null,  " + &
"Allow_Drill_Down 	VarChar(1)	Default '1',  " + &
"Include_In_Graph 	VarChar(1)	Default '0',  " + &
"Action_Type 		Numeric(6,0) Null,	  " + &
"Action_Status 		Numeric(6,0) Null,	  " + &
"Print_Flag		Integer	Null,		  " + &
"Due_Date		Integer	Null,		  " + &
"Max_Sends_Flag		VarChar(1)	Default '0',  " + &
"Display01		VarChar(50)	Null,  " + &
"Updateable01		VarChar(1)	Null,	  " + &
"Display02		VarChar(50)	Null,  " + &
"Updateable02		VarChar(1)	Null,  " + &
"Display03		VarChar(50)	Null,  " + &
"Updateable03		VarChar(1)	Null,  " + &
"Display04		VarChar(50)	Null,  " + &
"Updateable04		VarChar(1)	Null,  " + &
"Display05		VarChar(50)	Null,  " + &
"Updateable05		VarChar(1)	Null,  " + &
"Display06		VarChar(50)	Null,  " + &
"Updateable06		VarChar(1)	Null,  " + &
"Display07		VarChar(50)	Null,  " + &
"Updateable07		VarChar(1)	Null,  " + &
"Display08		VarChar(50)	Null,  " + &
"Updateable08		VarChar(1)	Null,  " + &
"Display09		VarChar(50)	Null,  " + &
"Updateable09		VarChar(1)	Null,  " + &
"Display10		VarChar(50)	Null,  " + &
"Updateable10		VarChar(1)	Null,  " + &
"Display11		VarChar(50)	Null,  " + &
"Updateable11		VarChar(1)	Null,  " + &
"Display12		VarChar(50)	Null,  " + &
"Updateable12		VarChar(1)	Null,  " + &
"MoveTo			VarChar(2)	Null,	  " + &
"Perform			VarChar(2)	Null,	  " + &
"CONSTRAINT pk_TDL_Detail PRIMARY KEY(TDL_ID, TDLI_ID)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='TDL_Security_Roles_Rights' and   type = 'U') " + &
"  create table TDL_Security_Roles_Rights( " + &
"ROLE_ID   	Integer Not Null, " + &
"TDL_ID	 	Integer Not Null, " + &
"Access_Rights  	Integer Not Null Default 0, " + &
"CONSTRAINT pk_TDL_Security_Roles_Rights PRIMARY KEY(ROLE_ID, TDL_ID) " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wv_question_documents' and   type = 'U') " + &
"  create table	wv_question_documents  " + &
"(	rec_id				integer not null , " + &
"prac_id            integer not null , " + &
"file_type					varchar(10) not null default 'pdf' , " + &
"file_data					image  null , " + &
"description                varchar(255) null , " + &
"create_by 					varchar(10) null , " + &
"create_date				datetime  null , " + &
"last_updated_by 			varchar(10) null , " + &
"last_updated_date			datetime  null , primary key (rec_id)  " + &
")			  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wv_required_template' and   type = 'U') " + &
"  create table wv_required_template( " + &
"	template_id  int identity not null, " + &
"	template_name varchar(50) not null, " + &
"	CONSTRAINT PK_wv_required_template PRIMARY KEY (template_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='wv_required_template_image' and   type = 'U') " + &
"  create table wv_required_template_image( " + &
"	template_id  int not null, " + &
"	image_type_id int not null, " + &
"	is_image_linked  int not null default 1, " + &
"	CONSTRAINT PK_wv_required_template_image PRIMARY KEY (template_id,image_type_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='security_user_mailsetting' and   type = 'U') " + &
"  create table security_user_mailsetting (user_id varchar (10) NOT NULL, mail_signature text NULL, flag bit NULL, constraint PK_security_user_mailsetting primary key (user_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='Ctx_am_document' and   type = 'U') " + &
"  create table Ctx_am_document (	 " + &
"Doc_id               int         not null,	 " + &
"ctx_id               int         not null,	 " + &
"doc_name             Varchar(200)         not null,	 " + &
"Revision             Numeric(5,1)         not null default 0,	 " + &
"doc_type             char(1)           not null,	 " + &
"doc_ext              varchar(10)           not null default 'doc',	 " + &
"category             numeric(6,0)         not null,	 " + &
"Base_type            char(1)           null,	 " + &
"From_templete_id        numeric(6,0)         null,	 " + &
"export_id 				int 					null,  " + &
"Wf_id                int         null,	 " + &
"Create_by            char(10)          null,	 " + &
"Create_date          datetime             null default getdate(),	 " + &
"Status               numeric(6,0)         null,	 " + &
"Status_by            char(10)          null,	 " + &
"Status_date          datetime             null,	 " + &
"filename     	     Varchar(250)         null,	 " + &
"Doc_from_type        char(1)           null,	 " + &
"Doc_from_name        Varchar(20)          null,	 " + &
"Notes                Varchar(255)         null,	 " + &
"checkout_by	     varchar(10)          null,	 " + &
"checkout_date	     datetime             null,	 " + &
"checkout_status	     char(1)           not null default '0',	 " + &
"Revision_control     char(1)           not null default '0',	 " + &
"constraint PK_CTX_AM_DOCUMENT primary key  (Doc_id)  " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='Ctx_am_doc_audit' and   type = 'U') " + &
"  create table Ctx_am_doc_audit (	 " + &
"Doc_id               int         not null,	 " + &
"audit_id             int         not null,	 " + &
"Revision             Numeric(5,1)         not null,	 " + &
"doc_ext              varchar(10)           not null default 'doc',	 " + &
"action               varchar(200)         not null,	 " + &
"action_by            varchar(10)          null,	 " + &
"action_date          datetime             null default getdate(),	 " + &
"filename     	     Varchar(250)         null,	 " + &
"Doc_from_type        char(1)           null,	 " + &
"Doc_from_name        Varchar(20)          null,	 " + &
"Notes                Varchar(255)         null,	 " + &
"id_forcatalog        int identity,	 " + &
"constraint PK_CTX_AM_DOC_AUDIT primary key  (Doc_id,audit_id)	 " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='Ctx_am_doc_image' and   type = 'U') " + &
"  create table Ctx_am_doc_image (	 " + &
"Doc_id               int         not null,	 " + &
"Revision             Numeric(5,1)         not null,	 " + &
"image_file           Image                null,	 " + &
"pdftext           	text                 null,	 " + &
"modify_date          datetime             null default getdate(),	 " + &
"id_forcatalog        int identity,	 " + &
"doc_ext             varchar(10)           null default 'doc',	 " + &
"constraint PK_CTX_AM_DOC_IMAGE primary key  (Doc_id,Revision)	 " + &
")  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='ctx_am_action_item' and   type = 'U') " + &
"  create table ctx_am_action_item(	 " + &
"Doc_ID integer NOT NULL, 	 " + &
"Seq_ID integer identity NOT NULL,	 " + &
"action_order integer not null default 0,  " + &
"Action_Type decimal(6,0) NOT NULL, 	 " + &
"Action_User varchar(50) Null,  " + &
"Action_Status decimal(6,0) Null, 	 " + &
"Status_Date datetime Null,  " + &
"Due_Date datetime Null,  " + &
"Attempt_Times integer Null,  " + &
"First_Attempt datetime Null,  " + &
"Last_Attempt datetime Null,  " + &
"Print_flag integer Null,  " + &
"Create_date datetime Null DEFAULT getdate(),  " + &
"Letter_id integer Null,  " + &
"Wf_step integer Null,  " + &
"Wf_id integer Null,  " + &
"Wf_action_type_id integer Null,  " + &
"wf_assigned_by varchar(50) Null,  " + &
"active_status integer Null,  " + &
"wf_complete_flag char(1) Null DEFAULT ('N'),  " + &
"Notes varchar(255)  Null,  " + &
"CONSTRAINT PK_CTX_AM_ACTION_ITEMS PRIMARY KEY (doc_id,seq_id) " + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='Ctx_am_document_clause' and   type = 'U') " + &
"  create table Ctx_am_document_clause (	 " + &
"Doc_id int NOT NULL ,	 " + &
"Revision numeric(5, 1) NOT NULL ,	 " + &
"Ctx_acp_clause_id numeric(6, 0) NOT NULL , " + &
"Orders int NULL,	 " + &
"CONSTRAINT PK_Ctx_am_document_clause PRIMARY KEY (Doc_id,Revision,Ctx_acp_clause_id	)  " + &
")  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_hdr' and   type = 'U') " + &
"  create table import_hdr   " + &
"(  " + &
"import_id integer identity,  " + &
"import_name varchar(50) null,  " + &
"imp_file varchar(100) null,  " + &
"imp_format char(1) null,  " + &
"record_delimiter varchar(5) null,  " + &
"field_delimiter varchar(5) null,  " + &
"odbc_name varchar (50) null,  " + &
"odbc_login varchar(25) null,  " + &
"odbc_password varchar(25) null,  " + &
"ignore_header_row integer null,  " + &
"flat_multi integer null,  " + &
"lock_file integer null,  " + &
"project_id integer null,  " + &
"isoft_module integer null,  " + &
"create_date datetime null,  " + &
"mod_date datetime null,  " + &
"mod_user varchar(25) null,  " + &
"audit_type char(1) null,  " + &
"add_protocol integer null,   " + &
"err_notify integer null,  " + &
"err_process integer null,  " + &
"err_file integer null,  " + &
"notify_addr1 varchar(100)  null,  " + &
"notify_addr2 varchar(100) null,  " + &
"update_verifications integer null,  " + &
"import_notes varchar(255) null,  " + &
"import_sql varchar(1000) null,  " + &
"doc_updated datetime null,  " + &
"doc_name varchar(50) null,  " + &
"import_doc image null,  " + &
"primary key (import_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_project' and   type = 'U') " + &
"  create table import_project   " + &
"(  " + &
"project_id integer identity,  " + &
"project_name varchar(30) null,  " + &
"def_parent_id integer null,  " + &
"def_audit_id integer null,  " + &
"def_verif_id integer null,  " + &
"def_affil_stat char(1) null,  " + &
"def_appt_type char(1) null,  " + &
"def_status integer null,  " + &
"def_user char(10) null,  " + &
"primary key (project_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_table_records' and   type = 'U') " + &
"  create table import_table_records  " + &
"(  " + &
"table_records_id integer identity,  " + &
"import_id integer not null,  " + &
"isoft_table_id integer null,  " + &
"primary key (table_records_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_mapping_fields' and   type = 'U') " + &
"  create table import_mapping_fields  " + &
"(  " + &
"rec_id decimal(10, 0) identity,  " + &
"table_records_id integer not null,  " + &
"case_type char(1) null,  " + &
"strip_type char(1) null,  " + &
"field_format varchar(40) null,  " + &
"isoft_field_id integer null,  " + &
"key_field integer null,  " + &
"id_field integer null,  " + &
"null_type integer null,    " + &
"null_value varchar(50) null,  " + &
"link_value decimal(10, 0) null,  " + &
"facility_id integer null,  " + &
"no_match_procd decimal(10, 0) null,  " + &
"lu_template decimal(10,0) null,  " + &
"lu_type char(1) null,  " + &
"lu_table varchar(50) null,  " + &
"lu_field_name varchar(50) null,  " + &
"import_field_id decimal(10,0) null,  " + &
"primary key (rec_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_file_fields' and   type = 'U') " + &
"  create table import_file_fields  " + &
"(  " + &
"rec_id decimal(10, 0) identity,  " + &
"import_id integer not null,  " + &
"field_order integer not null,  " + &
"imp_field_name varchar(40) not null,  " + &
"field_length integer not null,  " + &
"field_format varchar(40) null,  " + &
"case_type char(1) null,  " + &
"strip_type char(1) null,  " + &
"comp_def varchar(50) null,  " + &
"default_value varchar(100) null,  " + &
"primary key (rec_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_process' and   type = 'U') " + &
"  create table import_process  " + &
"(  " + &
"process_id numeric(16,0) identity,  " + &
"import_id integer  null,  " + &
"pro_date datetime  null,  " + &
"rec_count numeric(10,0)  null,  " + &
"error_count numeric(10,0)  null,  " + &
"mod_count numeric(10,0)  null,  " + &
"add_count numeric(10,0) null,  " + &
"process_file  image  null,  " + &
"primary key (process_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_process_errors' and   type = 'U') " + &
"  create table import_process_errors  " + &
"(  " + &
"error_id numeric(16,0) identity,  " + &
"process_id numeric(16,0)  null,  " + &
"error_record numeric(10,0)  null,  " + &
"error_field varchar(40)  null,  " + &
"err_type integer  null,  " + &
"err_value varchar(300)  null,  " + &
"err_isoft_table varchar(50)  null,  " + &
"primary key (error_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_lookup_mapping' and   type = 'U') " + &
"  create table import_lookup_mapping  " + &
"(  " + &
"ilm_id decimal(10,0) identity,  " + &
"map_type char(1)  null,  " + &
"lookup_table varchar(50)  null,  " + &
"template_name varchar(40)  null,  " + &
"primary key (ilm_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_lu_map_fields' and   type = 'U') " + &
"  create table import_lu_map_fields  " + &
"(  " + &
"map_id decimal(10,0) identity,  " + &
"ilm_id  decimal(10,0) null,  " + &
"is_lu_code decimal(10,0) null,  " + &
"import_value varchar(50) null,  " + &
"primary key (map_id))  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1  from  sysobjects " + &
"    where  name='import_table_gen' and   type = 'U') " + &
"  create table import_table_gen  " + &
"(   " + &
"field_1 varchar(100) null,  " + &
"field_2 varchar(100) null,  " + &
"field_3 varchar(100) null,  " + &
"field_4 varchar(100) null,  " + &
"field_5 varchar(100) null,  " + &
"field_6 varchar(100) null,  " + &
"field_7 varchar(100) null,  " + &
"field_8 varchar(100) null,  " + &
"field_9 varchar(100) null,  " + &
"field_10 varchar(100) null,  " + &
"field_11 varchar(100) null,  " + &
"field_12 varchar(100) null,  " + &
"field_13 varchar(100) null,  " + &
"field_14 varchar(100) null,  " + &
"field_15 varchar(100) null,  " + &
"field_16 varchar(100) null,  " + &
"field_17 varchar(100) null,  " + &
"field_18 varchar(100) null,  " + &
"field_19 varchar(100) null,  " + &
"field_20 varchar(100) null,  " + &
"field_21 varchar(100) null,  " + &
"field_22 varchar(100) null,  " + &
"field_23 varchar(100) null,  " + &
"field_24 varchar(100) null,  " + &
"field_25 varchar(100) null,  " + &
"field_26 varchar(100) null,  " + &
"field_27 varchar(100) null,  " + &
"field_28 varchar(100) null,  " + &
"field_29 varchar(100) null,  " + &
"field_30 varchar(100) null,  " + &
"field_31 varchar(100) null,  " + &
"field_32 varchar(100) null,  " + &
"field_33 varchar(100) null,  " + &
"field_34 varchar(100) null,  " + &
"field_35 varchar(100) null,  " + &
"field_36 varchar(100) null,  " + &
"field_37 varchar(100) null,  " + &
"field_38 varchar(100) null,  " + &
"field_39 varchar(100) null,  " + &
"field_40 varchar(100) null,  " + &
"field_41 varchar(100) null,  " + &
"field_42 varchar(100) null,  " + &
"field_43 varchar(100) null,  " + &
"field_44 varchar(100) null,  " + &
"field_45 varchar(100) null,  " + &
"field_46 varchar(100) null,  " + &
"field_47 varchar(100) null,  " + &
"field_48 varchar(100) null,  " + &
"field_49 varchar(100) null,  " + &
"field_50 varchar(100) null,  " + &
"field_51 varchar(100) null,  " + &
"field_52 varchar(100) null,  " + &
"field_53 varchar(100)   null,  " + &
"field_54 varchar(100)   null,  " + &
"field_55 varchar(100)   null,  " + &
"field_56 varchar(100)   null,  " + &
"field_57 varchar(100)   null,  " + &
"field_58 varchar(100)   null,  " + &
"field_59 varchar(100)   null,  " + &
"field_60 varchar(100)   null,  " + &
"field_61 varchar(100)   null,  " + &
"field_62 varchar(100)   null,  " + &
"field_63 varchar(100)   null,  " + &
"field_64 varchar(100)   null,  " + &
"field_65 varchar(100)   null,  " + &
"field_66 varchar(100)   null,  " + &
"field_67 varchar(100)   null,  " + &
"field_68 varchar(100)   null,  " + &
"field_69 varchar(100)   null,  " + &
"field_70 varchar(100)   null,  " + &
"field_71 varchar(100)   null,  " + &
"field_72 varchar(100)   null,  " + &
"field_73 varchar(100)   null,  " + &
"field_74 varchar(100)   null,  " + &
"field_75 varchar(100)   null,  " + &
"field_76 varchar(100)   null,  " + &
"field_77 varchar(100)   null,  " + &
"field_78 varchar(100)   null,  " + &
"field_79 varchar(100)   null,  " + &
"field_80 varchar(100)   null,  " + &
"field_81 varchar(100)   null,  " + &
"field_82 varchar(100)   null,  " + &
"field_83 varchar(100)   null,  " + &
"field_84 varchar(100)   null,  " + &
"field_85 varchar(100)   null,  " + &
"field_86 varchar(100)   null,  " + &
"field_87 varchar(100)   null,  " + &
"field_88 varchar(100)   null,  " + &
"field_89 varchar(100)   null,  " + &
"field_90 varchar(100)   null,  " + &
"field_91 varchar(100)   null,  " + &
"field_92 varchar(100)   null,  " + &
"field_93 varchar(100)   null,  " + &
"field_94 varchar(100)   null,  " + &
"field_95 varchar(100)   null,  " + &
"field_96 varchar(100)   null,  " + &
"field_97 varchar(100)   null,  " + &
"field_98 varchar(100)   null,  " + &
"field_99 varchar(100)   null,  " + &
"field_100 varchar(100)   null,  " + &
"field_101 varchar(100)   null,  " + &
"field_102 varchar(100)   null,  " + &
"field_103 varchar(100)   null,  " + &
"field_104 varchar(100)   null,  " + &
"field_105 varchar(100)   null,  " + &
"field_106 varchar(100)   null,  " + &
"field_107 varchar(100)   null,  " + &
"field_108 varchar(100)   null,  " + &
"field_109 varchar(100)   null,  " + &
"field_110 varchar(100)   null,  " + &
"field_111 varchar(100)   null,  " + &
"field_112 varchar(100)   null,  " + &
"field_113 varchar(100)   null,  " + &
"field_114 varchar(100)   null,  " + &
"field_115 varchar(100)   null,  " + &
"field_116 varchar(100)   null,  " + &
"field_117 varchar(100)   null,  " + &
"field_118 varchar(100)   null,  " + &
"field_119 varchar(100)   null,  " + &
"field_120 varchar(100)   null,  " + &
"field_121 varchar(100)   null,  " + &
"field_122 varchar(100)   null,  " + &
"field_123 varchar(100)   null,  " + &
"field_124 varchar(100)   null,  " + &
"field_125 varchar(100)   null,  " + &
"field_126 varchar(100)   null,  " + &
"field_127 varchar(100)   null,  " + &
"field_128 varchar(100)   null,  " + &
"field_129 varchar(100)   null,  " + &
"field_130 varchar(100)   null,  " + &
"field_131 varchar(100)   null,  " + &
"field_132 varchar(100)   null,  " + &
"field_133 varchar(100)   null,  " + &
"field_134 varchar(100)   null,  " + &
"field_135 varchar(100)   null,  " + &
"field_136 varchar(100)   null,  " + &
"field_137 varchar(100)   null,  " + &
"field_138 varchar(100)   null,  " + &
"field_139 varchar(100)   null,  " + &
"field_140 varchar(100)   null,  " + &
"field_141 varchar(100)   null,  " + &
"field_142 varchar(100)   null,  " + &
"field_143 varchar(100)   null,  " + &
"field_144 varchar(100)   null,  " + &
"field_145 varchar(100)   null,  " + &
"field_146 varchar(100)   null,  " + &
"field_147 varchar(100)   null,  " + &
"field_148 varchar(100)   null,  " + &
"field_149 varchar(100)   null,  " + &
"field_150 varchar(100)   null,  " + &
"field_151 varchar(100)   null,  " + &
"field_152 varchar(100)   null,  " + &
"field_153 varchar(100)   null,  " + &
"field_154 varchar(100)   null,  " + &
"field_155 varchar(100)   null,  " + &
"field_156 varchar(100)   null,  " + &
"field_157 varchar(100)   null,  " + &
"field_158 varchar(100)   null,  " + &
"field_159 varchar(100)   null,  " + &
"field_160 varchar(100)   null,  " + &
"field_161 varchar(100)   null,  " + &
"field_162 varchar(100)   null,  " + &
"field_163 varchar(100)   null,  " + &
"field_164 varchar(100)   null,  " + &
"field_165 varchar(100)   null,  " + &
"field_166 varchar(100)   null,  " + &
"field_167 varchar(100)   null,  " + &
"field_168 varchar(100)   null,  " + &
"field_169 varchar(100)   null,  " + &
"field_170 varchar(100)   null,  " + &
"field_171 varchar(100)   null,  " + &
"field_172 varchar(100)   null,  " + &
"field_173 varchar(100)   null,  " + &
"field_174 varchar(100)   null,  " + &
"field_175 varchar(100)   null,  " + &
"field_176 varchar(100)   null,  " + &
"field_177 varchar(100)   null,  " + &
"field_178 varchar(100)   null,  " + &
"field_179 varchar(100)   null,  " + &
"field_180 varchar(100)   null,  " + &
"field_181 varchar(100)   null,  " + &
"field_182 varchar(100)   null,  " + &
"field_183 varchar(100)   null,  " + &
"field_184 varchar(100)   null,  " + &
"field_185 varchar(100)   null,  " + &
"field_186 varchar(100)   null,  " + &
"field_187 varchar(100)   null,  " + &
"field_188 varchar(100)   null,  " + &
"field_189 varchar(100)   null,  " + &
"field_190 varchar(100)   null,  " + &
"field_191 varchar(100)   null,  " + &
"field_192 varchar(100)   null,  " + &
"field_193 varchar(100)   null,  " + &
"field_194 varchar(100)   null,  " + &
"field_195 varchar(100)   null,  " + &
"field_196 varchar(100)   null,  " + &
"field_197 varchar(100)   null,  " + &
"field_198 varchar(100)   null,  " + &
"field_199 varchar(100)   null,  " + &
"field_200 varchar(100)   null)  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table import_hdr alter column record_delimiter varchar(5) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table import_hdr alter column field_delimiter varchar(5) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='default_value' and t.name='import_file_fields' and t.type = 'U') " + &
"alter table import_file_fields add default_value varchar(100) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='information_disp' and t.name='ctx_acp_clause' and t.type = 'U') " + &
"alter table ctx_acp_clause add information_disp bit null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='export_id' and t.name='ctx_acp_clause' and t.type = 'U') " + &
"alter table ctx_acp_clause add export_id int NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='page_break' and t.name='ctx_acp_clause' and t.type = 'U') " + &
"alter table ctx_acp_clause add page_break bit null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='doctype' and t.name='ctx_acp_clause' and t.type = 'U') " + &
"alter table ctx_acp_clause add doctype varchar(10) null default 'doc' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='doctype' and t.name='ctx_acp_template' and t.type = 'U') " + &
"alter table ctx_acp_template add doctype varchar(10) null default 'doc' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_acp_clause alter column information_message varchar(2000) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"update ctx_acp_clause set information_disp = 0 where information_disp is null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"update ctx_acp_clause set page_break = 0 where page_break is null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Update ctx_acp_clause set doctype = 'doc' where doctype is null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Update ctx_acp_template set doctype = 'doc' where doctype is null	 "

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if exists(select TOP 1 1 from sysobjects where name='sp_fulltext_column'  and type = 'P') " + &
//"begin " + &
//" exec sp_fulltext_column 'ctx_acp_clause','information_message','drop'  " + &
//" exec sp_fulltext_column 'ctx_acp_clause','information_message','add' " + &
//"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_id' and t.name='ids' and t.type = 'U') " + &
"alter table ids add wf_id numeric(10,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='doc_id' and t.name='ids' and t.type = 'U') " + &
"alter table ids add doc_id int not null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='modify_date' and t.name='code_lookup' and t.type = 'U') " + &
"alter table code_lookup add modify_date datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='set_51' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add set_51 int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wv_db_version' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add wv_db_version varchar(20) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='set_52' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add set_52 int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='last_db_update_wv' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add last_db_update_wv datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='user_id' and t.name='dept_chair' and t.type = 'U') " + &
"alter table dept_chair add user_id char(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='billing_address_flag' and t.name='group_practice' and t.type = 'U') " + &
"alter table group_practice ADD billing_address_flag integer NULL  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='TDL_Rights' and t.name='Security_users' and t.type = 'U') " + &
"alter table Security_users Add TDL_Rights Integer Default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='TDL_Other_user' and t.name='Security_users' and t.type = 'U') " + &
"alter table Security_users Add TDL_Other_user Varchar(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wv_ldap_user' and t.name='Security_users' and t.type = 'U') " + &
"alter table security_users add wv_ldap_user varchar(30) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='create_action_item' and t.name='ctx_notification' and t.type = 'U') " + &
"alter table ctx_notification add create_action_item char(1) default 'N'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='rate' and t.name='ctx_fee_sched_locations' and t.type = 'U') " + &
"alter table ctx_fee_sched_locations add rate numeric(8,2) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wv_begin_cred' and t.name='pd_affil_stat' and t.type = 'U') " + &
"alter table pd_affil_stat	add wv_begin_cred numeric(1,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='app_status_id' and t.name='wv_esign_log' and t.type = 'U') " + &
"alter table wv_esign_log add app_status_id numeric(10,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='fax_type' and t.name='sys_fax_template' and t.type = 'U') " + &
"alter table sys_fax_template add fax_type int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='cover_file' and t.name='sys_fax_template' and t.type = 'U') " + &
"alter table sys_fax_template add cover_file Image null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='active_status' and t.name='wc_hdr' and t.type = 'U') " + &
"alter table wc_hdr add active_status integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='pw_rqd' and t.name='wc_hdr' and t.type = 'U') " + &
"alter table wc_hdr add pw_rqd integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wait_val' and t.name='wc_steps' and t.type = 'U') " + &
"alter table wc_steps add wait_val integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='input_type' and t.name='wc_steps' and t.type = 'U') " + &
"alter table wc_steps add input_type varchar(25) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='form_type' and t.name='wc_steps' and t.type = 'U') " + &
"alter table wc_steps add form_type varchar(25) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='test_break' and t.name='wc_steps' and t.type = 'U') " + &
"alter table wc_steps add test_break integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='format_type' and t.name='wc_steps' and t.type = 'U') " + &
"alter table wc_steps add format_type integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='attr_type' and t.name='wc_steps' and t.type = 'U') " + &
"alter table wc_steps add attr_type varchar(25) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='fax' and t.name='pd_references' and t.type = 'U') " + &
"alter table pd_references add fax varchar(25) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='e_mail_address' and t.name='pd_references' and t.type = 'U') " + &
"alter table pd_references add e_mail_address varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='suite_apart' and t.name='pd_references' and t.type = 'U') " + &
"alter table pd_references add suite_apart varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='fax' and t.name='pd_prof_experience' and t.type = 'U') " + &
"alter table pd_prof_experience add fax varchar(25) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='e_mail_address' and t.name='pd_prof_experience' and t.type = 'U') " + &
"alter table pd_prof_experience add e_mail_address varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='suite_apart' and t.name='pd_prof_experience' and t.type = 'U') " + &
"alter table pd_prof_experience add suite_apart varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_scrn_id' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_scrn_id int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_scrn_dataobject' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_scrn_dataobject varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_column_name' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_column_name varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_lookup_type' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_lookup_type varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='module_type' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD module_type int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_uselink' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_uselink int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_linkfromcolumn' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_linkfromcolumn varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_linktoscrnid' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_linktoscrnid int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_linktocolumn' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_linktocolumn varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_linktoscrndw' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields ADD ctx_linktoscrndw varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='ctx_column_datatype' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields add ctx_column_datatype CHAR(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='export_fields_expression' and t.name='export_fields' and t.type = 'U') " + &
"alter table export_fields add export_fields_expression VARCHAR(2000) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_expiring_appointment' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_expiring_appointment integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_reappointment_initiated' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_reappointment_initiated integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_data_entry_complete' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_data_entry_complete integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_practitioner_status_change' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_practitioner_status_change integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_new_practitioner' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_new_practitioner integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_data_value_comparison' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_data_value_comparison integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_webview_application_complete' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_webview_application_complete integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_exp_appt' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_exp_appt varchar(1) null default 'N' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_webview_application_initiated' and t.name='facility' and t.type = 'U') " + &
"alter table facility add wf_webview_application_initiated integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='default_question_init' and t.name='facility' and t.type = 'U') " + &
"alter table facility add default_question_init numeric(10,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='default_question_reapp' and t.name='facility' and t.type = 'U') " + &
"alter table facility add default_question_reapp numeric(10,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='default_wv_init_template' and t.name='facility' and t.type = 'U') " + &
"alter table facility add default_wv_init_template   int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='default_wv_reapp_template' and t.name='facility' and t.type = 'U') " + &
"alter table facility add default_wv_reapp_template  int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_step' and t.name='verif_info' and t.type = 'U') " + &
"alter table verif_info add wf_step integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='due_date' and t.name='verif_info' and t.type = 'U') " + &
"alter table verif_info add due_date datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='letter_id' and t.name='verif_info' and t.type = 'U') " + &
"alter table verif_info add letter_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_id' and t.name='verif_info' and t.type = 'U') " + &
"alter table verif_info add wf_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='Wf_action_type_id' and t.name='verif_info' and t.type = 'U') " + &
"alter table verif_info add Wf_action_type_id numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='Wf_complete_flag' and t.name='verif_info' and t.type = 'U') " + &
"alter table verif_info add Wf_complete_flag varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_step' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add wf_step integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='letter_id' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add letter_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_id' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add wf_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='Wf_action_type_id' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add Wf_action_type_id numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_assigned_by' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add wf_assigned_by varchar(20) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_complete_flag' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add wf_complete_flag varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='print_flag' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add print_flag int null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='first_sent' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add first_sent datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='last_sent' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add last_sent datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='number_sent' and t.name='net_dev_action_items' and t.type = 'U') " + &
"alter table net_dev_action_items add number_sent int null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_step' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add wf_step integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='letter_id' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add letter_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_id' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add wf_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='Wf_action_type_id' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add Wf_action_type_id numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_assigned_by' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add wf_assigned_by varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='active_status' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add active_status integer null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='wf_complete_flag' and t.name='ctx_action_items' and t.type = 'U') " + &
"alter table ctx_action_items add wf_complete_flag varchar(1) null default 'N' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='module' and t.name='wf_trigger_param_data_comparison' and t.type = 'U') " + &
"alter table wf_trigger_param_data_comparison add module varchar(2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='field_type' and t.name='wf_trigger_param_data_comparison' and t.type = 'U') " + &
"alter table wf_trigger_param_data_comparison add field_type varchar(2) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='table_name' and t.name='wf_trigger_param_data_comparison' and t.type = 'U') " + &
"alter table wf_trigger_param_data_comparison add table_name varchar(150) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='set_step' and t.name='wf_action_status' and t.type = 'U') " + &
"alter table wf_action_status add set_step integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='set_status' and t.name='wf_action_status' and t.type = 'U') " + &
"alter table wf_action_status add set_status numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='set_wf_id' and t.name='wf_action_status' and t.type = 'U') " + &
"alter table wf_action_status add set_wf_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='value_display' and t.name='wf_trigger_param_data_comparison' and t.type = 'U') " + &
"alter table wf_trigger_param_data_comparison add value_display varchar(75) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='lookup_code' and t.name='wf_trigger_param_data_comparison' and t.type = 'U') " + &
"alter table wf_trigger_param_data_comparison add lookup_code varchar(40) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='lookup_flag' and t.name='wf_trigger_param_data_comparison' and t.type = 'U') " + &
"alter table wf_trigger_param_data_comparison add lookup_flag char(1) null default 'N' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='export_id' and t.name='wf_email' and t.type = 'U') " + &
"alter table wf_email add export_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='alm_action_title' and t.name='ctx_notification' and t.type = 'U') " + &
"ALTER TABLE ctx_notification ADD alm_action_title VARCHAR(40) NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table code_lookup alter column code varchar(30) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_types alter column to_user varchar(50) null	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_types alter column by_user varchar(50) null	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_status alter column  to_message_user varchar(50) null	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_status alter column  cc_message_user varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_status alter column action_status_id numeric(6,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table security_modules alter column module_name varchar(100) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wc_steps alter column form_handler varchar(250) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wc_steps alter column object_name varchar(250) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wc_steps alter column content_or_value varchar(250) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_types alter column cc_user varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_status alter column cc_notify_user varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_status alter column cc_reminder_user varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table wf_action_status alter column cc_message_user varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_fee_sched_nm alter column custom_n1 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_fee_sched_nm alter column custom_n2 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_fee_sched_nm alter column custom_n3 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_fee_sched_nm alter column custom_n4 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_fee_sched_nm alter column custom_n5 numeric(10,3) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysobjects where xtype='PK' and parent_obj=object_id('pd_peer_review')) " + &
"  ALTER TABLE pd_peer_review DROP CONSTRAINT PK_PD_PEER_REVIEW "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_review alter column case_number numeric(14,0) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_review Add CONSTRAINT PK_PD_PEER_REVIEW PRIMARY KEY(case_number) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysobjects where xtype='PK' and parent_obj=object_id('pd_peer_review_action_items')) " + &
"  ALTER TABLE pd_peer_review_action_items DROP CONSTRAINT PK_PD_PEER_REVIEW_ACTION_ITEMS "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_review_action_items alter column case_number numeric(14,0) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_review_action_items Add CONSTRAINT PK_PD_PEER_REVIEW_ACTION_ITEMS PRIMARY KEY(rec_id,case_number) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysobjects where xtype='PK' and parent_obj=object_id('pd_peer_review_pracs')) " + &
"  ALTER TABLE pd_peer_review_pracs DROP CONSTRAINT PK_PD_PEER_REVIEW_PRACS "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_review_pracs alter column case_number numeric(14,0) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_review_pracs Add CONSTRAINT PK_PD_PEER_REVIEW_PRACS PRIMARY KEY(rec_id,prac_id,case_number) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysobjects where xtype='PK' and parent_obj=object_id('pd_peer_committee_review')) " + &
"  ALTER TABLE pd_peer_committee_review DROP CONSTRAINT PK_PD_PEER_COMMITTEE_REVIEW "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_committee_review ALTER COLUMN case_number numeric(14,0) not null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_peer_committee_review ADD CONSTRAINT PK_PD_PEER_COMMITTEE_REVIEW PRIMARY KEY(rec_id,case_number,committee_name) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('wf_action_types') and   name  = 'idx_step_order' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX idx_step_order ON wf_action_types (wf_id , step_order )  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('wf_action_types') and   name  = 'idx_step_id' and   indid > 0 and   indid < 255) " + &
"CREATE INDEX idx_step_id ON wf_action_types (wf_id , step_id ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('wf_action_status') and   name  = 'idx_status_id' and   indid > 0 and   indid < 255) " + &
"CREATE INDEX idx_status_id ON wf_action_status (wf_id , step_id , status_id )  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('wf_email') and   name  = 'wf_email_id_x' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX wf_email_id_x ON wf_email (email_id )  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('Ctx_am_doc_audit') and   name  = 'index_ctx_am_doc_audit_id_forcatalog' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_am_doc_audit_id_forcatalog ON Ctx_am_doc_audit (id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('Ctx_am_doc_image') and   name  = 'index_ctx_am_doc_image_id_forcatalog' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_am_doc_image_id_forcatalog ON Ctx_am_doc_image (id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('export_fields') and   name  = 'idx_export_field_name' and   indid > 0 and   indid < 255) " + &
"CREATE unique index idx_export_field_name on export_fields (export_id,export_field_name) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('TDL_Basic_info') and   name  = 'todolist_id_x' and   indid > 0 and   indid < 255) " + &
"CREATE Unique Index todolist_id_x on TDL_Basic_info(TDL_ID) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('TDL_Detail') and   name  = 'TDL_Detail_x' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX TDL_Detail_x on TDL_Detail(TDL_ID, TDLI_ID) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('TDL_Security_Roles_Rights') and   name  = 'TDL_Security_Roles_Rights_x' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX TDL_Security_Roles_Rights_x on TDL_Security_Roles_Rights(ROLE_ID, TDL_ID) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('security_users') and   name  = 'idx_unique_ldapuser' and   indid > 0 and   indid < 255) " + &
"DROP INDEX security_users.idx_unique_ldapuser "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_SECURITY' and type = 'F') " + &
"  alter table ctx_acp_contract_management_right add constraint FK_CTX_ACP__REFERENCE_SECURITY foreign key (role_id)	references security_roles (role_id)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_FOLDER_CODE_LOOKUP' and type = 'F') " + &
"  alter table ctx_acp_folder add constraint FK_CTX_ACP_FOLDER_CODE_LOOKUP foreign key (category) references code_lookup (lookup_code) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_CTX_ACP_' and type = 'F') " + &
"  alter table ctx_acp_clause	add constraint FK_CTX_ACP__REFERENCE_CTX_ACP_ foreign key (ctx_acp_folder_id)	references ctx_acp_folder (ctx_acp_folder_id)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_CODE_LO1' and type = 'F') " + &
"  alter table ctx_acp_clause	add constraint FK_CTX_ACP__REFERENCE_CODE_LO1 foreign key (category)	references code_lookup (lookup_code)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_CODE_LO2' and type = 'F') " + &
"  alter table ctx_acp_clause	add constraint FK_CTX_ACP__REFERENCE_CODE_LO2 foreign key (approval_status) references code_lookup (lookup_code) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_CLAUSE_REFERENCE_EXPORT_H' and type = 'F') " + &
"  alter table ctx_acp_clause      add CONSTRAINT FK_CTX_ACP_CLAUSE_REFERENCE_EXPORT_H FOREIGN KEY (export_id) REFERENCES export_header (export_id)  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_CTX_ACP1' and type = 'F') " + &
"  alter table ctx_acp_clause_rely add constraint FK_CTX_ACP__REFERENCE_CTX_ACP1 foreign key (ctx_acp_clause_id) references ctx_acp_clause (ctx_acp_clause_id)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_CTX_ACP2' and type = 'F') " + &
"  alter table ctx_acp_clause_rely add constraint FK_CTX_ACP__REFERENCE_CTX_ACP2 foreign key (ctx_acp_clause_rely_id) references ctx_acp_clause (ctx_acp_clause_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_TEMPLATE_CODE_LO1' and type = 'F') " + &
"  alter table ctx_acp_template add constraint FK_CTX_ACP_TEMPLATE_CODE_LO1 foreign key (Category)	references code_lookup (lookup_code)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP__REFERENCE_EXPORT_H' and type = 'F') " + &
"  alter table ctx_acp_template add constraint FK_CTX_ACP__REFERENCE_EXPORT_H foreign key (export_id)	references export_header (export_id)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_TEMPLATE_CODE_LO2' and type = 'F') " + &
"  alter table ctx_acp_template add constraint FK_CTX_ACP_TEMPLATE_CODE_LO2 foreign key (Reviewed_Status) references code_lookup (lookup_code)	 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_TEMPLATE_CLASUE_1' and type = 'F') " + &
"  alter table ctx_acp_template_clause add constraint FK_CTX_ACP_TEMPLATE_CLASUE_1 foreign key (ctx_acp_template_id) references ctx_acp_template (ctx_acp_template_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_TEMPLATE_CLASUE_2' and type = 'F') " + &
"  alter table ctx_acp_template_clause add constraint FK_CTX_ACP_TEMPLATE_CLASUE_2 foreign key (ctx_acp_clause_id) references ctx_acp_clause (ctx_acp_clause_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_DOCUMENT_CODE_LOO1' and type = 'F') " + &
"  alter table ctx_acp_document add constraint FK_CTX_ACP_DOCUMENT_CODE_LOO1 foreign key (Category) references code_lookup (lookup_code) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_DOCUMENT_CODE_LOO2' and type = 'F') " + &
"  alter table ctx_acp_document add constraint FK_CTX_ACP_DOCUMENT_CODE_LOO2 foreign key (Reviewed_Status) references code_lookup (lookup_code) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_DOCUMENT_CTX_BASI' and type = 'F') " + &
"  alter table Ctx_am_document add constraint FK_CTX_AM_DOCUMENT_CTX_BASI foreign key (ctx_id) references CTX_BASIC_INFO (ctx_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_DOCUMENT_CODE_LOO1' and type = 'F') " + &
"  alter table Ctx_am_document  add constraint FK_CTX_AM_DOCUMENT_CODE_LOO1 foreign key (category)  references code_lookup (lookup_code) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_DOCUMENT_CODE_LOO2' and type = 'F') " + &
"  alter table Ctx_am_document  add constraint FK_CTX_AM_DOCUMENT_CODE_LOO2 foreign key (Status) references code_lookup (lookup_code) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_DOC_AUDIT_Doc_id' and type = 'F') " + &
"  alter table Ctx_am_doc_audit add constraint FK_CTX_AM_DOC_AUDIT_Doc_id foreign key (Doc_id) references Ctx_am_document (Doc_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_DOC_IMAGE_Doc_id' and type = 'F') " + &
"  alter table Ctx_am_doc_image add constraint FK_CTX_AM_DOC_IMAGE_Doc_id foreign key (Doc_id) references Ctx_am_document (Doc_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_ACTION_ITEM_Doc_id' and type = 'F') " + &
"  alter table ctx_am_action_item add constraint FK_CTX_AM_ACTION_ITEM_Doc_id foreign key (Doc_id) references Ctx_am_document (Doc_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_ACTION_ITEM_wf_id' and type = 'F') " + &
"  alter table ctx_am_action_item add constraint FK_CTX_AM_ACTION_ITEM_wf_id foreign key (wf_id) references wf_workflow (wf_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_AM_ACTION_ITEM_letter_id' and type = 'F') " + &
"  alter table ctx_am_action_item add constraint FK_CTX_AM_ACTION_ITEM_letter_id foreign key (letter_id) references sys_letters (letter_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_Ctx_am_document_clause_ctx_acp_clause' and type = 'F') " + &
"  alter table Ctx_am_document_clause ADD CONSTRAINT FK_Ctx_am_document_clause_ctx_acp_clause FOREIGN KEY (Ctx_acp_clause_id) REFERENCES ctx_acp_clause (	ctx_acp_clause_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_Ctx_am_document_clause_Ctx_am_document' and type = 'F') " + &
"  alter table Ctx_am_document_clause ADD CONSTRAINT FK_Ctx_am_document_clause_Ctx_am_document FOREIGN KEY (Doc_id) REFERENCES Ctx_am_document (Doc_id	) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_TEMPLATE_WF_WORKFLOW' and type = 'F') " + &
"  alter table CTX_ACP_TEMPLATE ADD CONSTRAINT FK_CTX_ACP_TEMPLATE_WF_WORKFLOW FOREIGN KEY (wf_id) REFERENCES wf_workflow "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_CTX_ACP_document_WF_WORKFLOW' and type = 'F') " + &
"  alter table ctx_acp_document ADD CONSTRAINT FK_CTX_ACP_document_WF_WORKFLOW FOREIGN KEY (wf_id) REFERENCES wf_workflow "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_ACTION_TYPE_ID_CODE_LOOKUP_WF_ACTION_TYPES' and type = 'F') " + &
"  alter table wf_action_types ADD CONSTRAINT FK_ACTION_TYPE_ID_CODE_LOOKUP_WF_ACTION_TYPES FOREIGN KEY (action_type_id) REFERENCES code_lookup "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_MAIL_NOTIFY_WF_EMAIL_WF_ACTION_TYPES' and type = 'F') " + &
"  alter table wf_action_types ADD CONSTRAINT FK_MAIL_NOTIFY_WF_EMAIL_WF_ACTION_TYPES FOREIGN KEY (mail_notify) REFERENCES wf_email "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_ACTION_STATUS_ID_CODE_LOOKUP_WF_ACTION_STATUS' and type = 'F') " + &
"  alter table wf_action_status ADD CONSTRAINT FK_ACTION_STATUS_ID_CODE_LOOKUP_WF_ACTION_STATUS FOREIGN KEY (action_status_id) REFERENCES code_lookup "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_MAIL_NOTIFY_WF_EMAIL_WF_ACTION_STATUS' and type = 'F') " + &
"  alter table wf_action_status ADD CONSTRAINT FK_MAIL_NOTIFY_WF_EMAIL_WF_ACTION_STATUS FOREIGN KEY (mail_notify) REFERENCES wf_email "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_MAIL_REMINDER_WF_EMAIL_WF_ACTION_STATUS' and type = 'F') " + &
"  alter table wf_action_status ADD CONSTRAINT FK_MAIL_REMINDER_WF_EMAIL_WF_ACTION_STATUS FOREIGN KEY (mail_reminder) REFERENCES wf_email "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_MAIL_MESSAGE_WF_EMAIL_WF_ACTION_STATUS' and type = 'F') " + &
"  alter table wf_action_status ADD CONSTRAINT FK_MAIL_MESSAGE_WF_EMAIL_WF_ACTION_STATUS FOREIGN KEY (mail_message) REFERENCES wf_email "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_LETTER_ID_SYS_LETTERS_WF_ACTION_STATUS' and type = 'F') " + &
"  alter table wf_action_status ADD CONSTRAINT FK_LETTER_ID_SYS_LETTERS_WF_ACTION_STATUS FOREIGN KEY (letter_id) REFERENCES sys_letters "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_Tdl_detail_tdl_id' and type = 'F') " + &
"  alter table TDL_detail ADD CONSTRAINT FK_Tdl_detail_tdl_id FOREIGN KEY (tdl_id) REFERENCES tdl_basic_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_TDL_Security_Roles_Rights_tdl_id' and type = 'F') " + &
"  alter table TDL_Security_Roles_Rights ADD CONSTRAINT FK_TDL_Security_Roles_Rights_tdl_id FOREIGN KEY (tdl_id) REFERENCES tdl_basic_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_WV_REQ_IMAGE_ID' and type = 'F') " + &
"  alter table wv_required_template_image 	add constraint FK_WV_REQ_IMAGE_ID foreign key (image_type_id) references image_type (image_type_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_WV_REQ_TEMP_ID' and type = 'F') " + &
"  alter table wv_required_template_image 	add constraint FK_WV_REQ_TEMP_ID foreign key (template_id) references wv_required_template (template_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_FAC_WV_REQ_INIT_ID' and type = 'F') " + &
"  alter table facility add constraint FK_FAC_WV_REQ_INIT_ID foreign key (default_wv_init_template) references wv_required_template (template_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_FAC_REQ_REAPP_ID' and type = 'F') " + &
"  alter table facility add constraint FK_FAC_REQ_REAPP_ID foreign key (default_wv_reapp_template) references wv_required_template (template_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from sysobjects where name='FK_Ctx_am_document_clause_Ctx_am_doc_image' and type = 'F') " + &
"  alter table ctx_am_document_clause add constraint FK_Ctx_am_document_clause_Ctx_am_doc_image foreign key (Doc_id, Revision) references Ctx_am_doc_image (Doc_id, Revision)  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( select TOP 1 1 from sysobjects where name='FK_Ctx_am_document_clause_Ctx_am_document' and type = 'F') " + &
"  alter table ctx_am_document_clause drop constraint FK_Ctx_am_document_clause_Ctx_am_document   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  exists( " + &
"select TOP 1 1 from sysobjects " + &
"where name='DF_CTX_ACTION_ITEMS_inserted_at_date_time1'  " + &
"and type='D') " + &
"ALTER TABLE CTX_ACTION_ITEMS drop CONSTRAINT DF_CTX_ACTION_ITEMS_inserted_at_date_time1  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE CTX_ACTION_ITEMS ADD CONSTRAINT DF_CTX_ACTION_ITEMS_inserted_at_date_time1 DEFAULT (getdate()) FOR inserted_at_date_time "

of_execute_sqls("of_ver70_release_table3")

Return 1
end function

public function integer of_ver70_patch_table1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='lock_until' and t.name='security_users' and t.type = 'U') " + &
"alter table security_users add lock_until datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='npdb_user_id' and t.name='facility' and t.type = 'U') " + &
"alter table facility add npdb_user_id varchar(35) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_primary_office') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_primary_office DEFAULT 0 FOR primary_office "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_exp_letters') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_exp_letters DEFAULT 0 FOR exp_letters "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_include_in_directory') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_include_in_directory DEFAULT 0 FOR include_in_directory "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_prac_correspondence') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_prac_correspondence DEFAULT 0 FOR prac_correspondence "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_home_address') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_home_address DEFAULT 0 FOR home_address "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_additional_office') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_additional_office DEFAULT 0 FOR additional_office "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_mailing') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_mailing DEFAULT 0 FOR mailing "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_billing') " + &
"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_billing DEFAULT 0 FOR billing "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE ctx_contacts_numbers ALTER COLUMN phone varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE ctx_org_contact ALTER COLUMN phone varchar(25) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='isdisabled' " + &
"     and t.name='wv_esign_log' " + &
"     and t.type = 'U') " + &
"alter table wv_esign_log add isdisabled int null default 0 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='force_update' " + &
"     and t.name='ctx_screen' " + &
"     and t.type = 'U') " + &
"alter table ctx_screen add force_update text null "

of_execute_sqls("of_ver70_patch_table1")

Return 1
end function

public function integer of_ver70_release_view1 ();//<add> 03/10/2008 by: nova
//reason:fixed bug: IntelliReports Are Broken.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"UPDATE conv_view_table SET table_name = (Select distinct sysobjects.name from sysobjects where sysobjects.id = conv_view_table.cust_table_name) where isnull(table_name,'') = '' "
//end of add


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_acedemic_appointments' and type = 'V')  " + &
"  drop view v_acedemic_appointments "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_acedemic_appointments " + &
"as select  top 100 percent   " + &
"pd_acedemic_appointments.rec_id, " + &
"pd_acedemic_appointments.prac_id, " + &
"school_code=address_lookup.code, " + &
"school_name=address_lookup.entity_name, " + &
"pd_acedemic_appointments.month_from, " + &
"pd_acedemic_appointments.year_from, " + &
"pd_acedemic_appointments.month_thru, " + &
"pd_acedemic_appointments.year_thru, " + &
"pd_acedemic_appointments.cust_6, " + &
"pd_acedemic_appointments.cust_7, " + &
"pd_acedemic_appointments.cust_8, " + &
"pd_acedemic_appointments.cust_9, " + &
"pd_acedemic_appointments.cust_10, " + &
"pd_acedemic_appointments.cust_d1, " + &
"pd_acedemic_appointments.cust_d2, " + &
"pd_acedemic_appointments.start_date, " + &
"pd_acedemic_appointments.end_date, " + &
"achdmc_dept_code=code_lookup_a.code, " + &
"a_dept_description=code_lookup_a.description, " + &
"faculty_rank=code_lookup_b.code,faculty_rank_code=code_lookup_b.description  " + &
"from(((pd_acedemic_appointments left outer join address_lookup on pd_acedemic_appointments.school_code = address_lookup.lookup_code)  " + &
"left outer join code_lookup as code_lookup_a on pd_acedemic_appointments.department_code = code_lookup_a.lookup_code)  " + &
"left outer join code_lookup as code_lookup_b on pd_acedemic_appointments.faculty_rank_code = code_lookup_b.lookup_code) " + &
"order by pd_acedemic_appointments.rec_id,pd_acedemic_appointments.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_action_items' and type = 'V')  " + &
"  drop view v_action_items "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_action_items " + &
"as select distinct  top 100 percent  " + &
"verif_info.prac_id, " + &
"verif_info.facility_id, " + &
"facility.facility_name, " + &
"data_view_screen.screen_name, " + &
"verif_info.reference_value, " + &
"verification_method=code_lookup_b.code, " + &
"verif_info.first_sent, " + &
"verif_info.last_sent, " + &
"verif_info.number_sent, " + &
"verif_info.date_recieved, " + &
"verif_info.user_name, " + &
"response_code=code_lookup_a.code, " + &
"verif_info.active_status, " + &
"verif_info.print_flag, " + &
"verif_info.doc_id, " + &
"verif_info.notes  " + &
"from((verif_info left outer join code_lookup as code_lookup_a on verif_info.response_code = code_lookup_a.lookup_code)  " + &
"left outer join code_lookup as code_lookup_b on verif_info.verification_method = code_lookup_b.lookup_code),facility,data_view_screen  " + &
"where(verif_info.screen_id = data_view_screen.screen_id)  " + &
"and(verif_info.facility_id = facility.facility_id)  " + &
"and((data_view_screen.data_view_id = 1)) " + &
"order by verif_info.prac_id,verif_info.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_address' and type = 'V')  " + &
"  drop view v_address "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_address " + &
"  as select  top 100 percent  pd_address.rec_id, " + &
"    pd_address.prac_id, " + &
"    practitioner=pd_basic.first_name+pd_basic.last_name, " + &
"    office_in_home=code_lookup_b.code, " + &
"    prac_type_code=code_lookup_d.code, " + &
"    prac_type=code_lookup_d.description, " + &
"    pd_address.street, " + &
"    pd_address.city, " + &
"    state_code=code_lookup_e.code, " + &
"    state_name=code_lookup_e.description, " + &
"    country_code=code_lookup_f.code, " + &
"    country_name=code_lookup_f.description, " + &
"    pd_address.pager_number, " + &
"    pd_address.phone, " + &
"    pd_address.ext, " + &
"    pd_address.fax, " + &
"    pd_address.zip, " + &
"    county_code=code_lookup_g.code, " + &
"    county_name=code_lookup_g.description, " + &
"    pd_address.contact_person, " + &
"    pd_address.tax_id, " + &
"    pd_address.tax_id_other_1, " + &
"    pd_address.tax_id_other_2, " + &
"    pd_address.business_mgr, " + &
"    pd_address.office_mgr, " + &
"    pd_address.e_mail_address, " + &
"    pd_address.web_address, " + &
"    pd_address.mon_from, " + &
"    pd_address.mon_to, " + &
"    pd_address.tue_from, " + &
"    pd_address.tue_to, " + &
"    pd_address.wed_from, " + &
"    pd_address.thu_from, " + &
"    pd_address.thu_to, " + &
"    pd_address.fri_from, " + &
"    pd_address.fri_to, " + &
"    pd_address.sat_from, " + &
"    pd_address.sat_to, " + &
"    pd_address.sun_from, " + &
"    pd_address.sun_to, " + &
"    pd_address.mon_from2, " + &
"    pd_address.mon_to2, " + &
"    pd_address.tue_from2, " + &
"    pd_address.tue_to2, " + &
"    pd_address.wed_from2, " + &
"    pd_address.wed_to2, " + &
"    pd_address.thu_from2, " + &
"    pd_address.thu_to2, " + &
"    pd_address.fri_from2, " + &
"    pd_address.fri_to2, " + &
"    pd_address.sat_from2, " + &
"    pd_address.sat_to2, " + &
"    pd_address.sun_from2, " + &
"    pd_address.sun_to2, " + &
"    pd_address.wed_to, " + &
"    pd_address.routine_visit_appt, " + &
"    pd_address.urgent_visit_appt, " + &
"    pd_address.emergency_visit_appt, " + &
"    pd_address.non_emergency_appt, " + &
"    young_child_code=code_lookup_h.code, " + &
"    child_code=code_lookup_i.code, " + &
"    adolescent_code=code_lookup_j.code, " + &
"    adult_code=code_lookup_k.code, " + &
"    senior_code=code_lookup_l.code, " + &
"    handicap_acc=code_lookup_m.description, " + &
"    on_public_trans=code_lookup_n.description, " + &
"    pd_address.cust_1, " + &
"    pd_address.cust_2, " + &
"    pd_address.cust_3, " + &
"    pd_address.cust_4, " + &
"    pd_address.cust_5, " + &
"    pd_address.cust_6, " + &
" 	  pd_address.cust_7, " + &
" 	  pd_address.cust_8, " + &
" 	  pd_address.cust_9, " + &
" 	  pd_address.cust_10, " + &
" 	  pd_address.cust_d1, " + &
" 	  pd_address.cust_d2, " + &
" 	  pd_address.suite_apart, " + &
"    pd_address.street_2, " + &
"    pd_address.active_status, " + &
"    pd_address.accepting_new_patients, " + &
"    pd_address.gp_id,   "+ &
"    accepting_new_patient=code_lookup_p.description from " + &
"    pd_address left outer join code_lookup as code_lookup_b on pd_address.office_in_home = code_lookup_b.lookup_code left outer join code_lookup as code_lookup_d on pd_address.practice_type = code_lookup_d.lookup_code left outer join code_lookup as code_lookup_e on pd_address.state = code_lookup_e.lookup_code left outer join code_lookup as code_lookup_f on pd_address.country = code_lookup_f.lookup_code left outer join code_lookup as code_lookup_g on pd_address.county = code_lookup_g.lookup_code left outer join code_lookup as code_lookup_h on pd_address.young_child = code_lookup_h.lookup_code left outer join code_lookup as code_lookup_i on pd_address.child = code_lookup_i.lookup_code left outer join code_lookup as code_lookup_j on pd_address.adolescent = code_lookup_j.lookup_code left outer join code_lookup as code_lookup_k on pd_address.adult = code_lookup_k.lookup_code left outer join code_lookup as code_lookup_l on pd_address.senior_adult = code_lookup_l.lookup_code left outer join code_lookup as code_lookup_m on pd_address.handicapped_access = code_lookup_m.lookup_code left outer join code_lookup as code_lookup_n on pd_address.public_transportation = code_lookup_n.lookup_code left outer join code_lookup as code_lookup_p on pd_address.accepting_new_patients = code_lookup_p.lookup_code, " + &
"    pd_basic where " + &
"    (pd_address.prac_id = pd_basic.prac_id) " + &
"order by pd_address.rec_id,pd_address.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_address_link' and type = 'V')  " + &
"  drop view v_address_link "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_address_link " + &
"  as select  top 100 percent  pd_address_link.address_id, " + &
"    pd_address_link.prac_id, " + &
"    pd_address_link.facility_id, " + &
"    pd_address_link.mailing, " + &
"    pd_address_link.billing, " + &
"    pd_address_link.contact_person, " + &
"    pd_address_link.include_in_directory, " + &
"    pd_address_link.exp_letters, " + &
"    pd_address_link.home_address, " + &
"    pd_address_link.additional_office, " + &
"    pd_address_link.primary_office from " + &
"    pd_address_link " + &
"order by pd_address_link.address_id,pd_address_link.prac_id,pd_address_link.facility_id "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_affil_staff_cat' and type = 'V')  " + &
"  drop view v_affil_staff_cat "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_affil_staff_cat " + &
"  as select  top 100 percent  pd_affil_staff_cat.rec_id, " + &
"    pd_affil_staff_cat.prac_id, " + &
"    pd_affil_staff_cat.facility_id, " + &
"    facility.facility_name, " + &
"    pd_affil_staff_cat.seq_no, " + &
"    code_lookup.code, " + &
"    code_lookup.description, " + &
"    pd_affil_staff_cat.from_date, " + &
"    pd_affil_staff_cat.to_date, " + &
"    pd_affil_staff_cat.active_status, " + &
"    pd_affil_staff_cat.requested from( " + &
"    pd_affil_staff_cat left outer join code_lookup on pd_affil_staff_cat.staff_category = code_lookup.lookup_code), " + &
"    facility where " + &
"    (pd_affil_staff_cat.facility_id = facility.facility_id) " + &
"order by pd_affil_staff_cat.rec_id,pd_affil_staff_cat.prac_id,pd_affil_staff_cat.facility_id,pd_affil_staff_cat.seq_no "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_affil_staff_cat_active' and type = 'V')  " + &
"  drop view v_affil_staff_cat_active "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_affil_staff_cat_active " + &
"as select  top 100 percent  pd_affil_staff_cat.rec_id, " + &
"pd_affil_staff_cat.prac_id, " + &
"pd_affil_staff_cat.facility_id, " + &
"facility.facility_name, " + &
"pd_affil_staff_cat.seq_no, " + &
"code_lookup.code as staff_cat_code, " + &
"code_lookup.description as staff_cat, " + &
"pd_affil_staff_cat.from_date, " + &
"pd_affil_staff_cat.to_date, " + &
"pd_affil_staff_cat.active_status, " + &
"pd_affil_staff_cat.requested  " + &
"from pd_affil_staff_cat, " + &
"code_lookup,facility  " + &
"where(pd_affil_staff_cat.facility_id = facility.facility_id) and(pd_affil_staff_cat.staff_category = code_lookup.lookup_code)  " + &
"and(pd_affil_staff_cat.requested = 1) and(pd_affil_staff_cat.active_status in(1,4)) " + &
"order by pd_affil_staff_cat.rec_id,pd_affil_staff_cat.prac_id,pd_affil_staff_cat.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_affil_stat' and type = 'V')  " + &
"  drop view v_affil_stat "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_affil_stat " + &
"  as select  top 100 percent  pd_affil_stat.rec_id, " + &
"    pd_affil_stat.prac_id, " + &
"    pd_affil_stat.parent_facility_id, " + &
"    pd_affil_stat.verifying_facility as verifying_facility_id, " + &
"    facility_a.facility_name as parent_facility_name, " + &
"    facility_b.facility_name as verifying_facility_name, " + &
"    facility_c.facility_name as app_audit_facility_name, " + &
"    pd_affil_stat.apptmnt_type, " + &
"    pd_affil_stat.affiliation_status, " + &
"    pd_affil_stat.apptmnt_start_date, " + &
"    pd_affil_stat.apptmnt_end_date, " + &
"    pd_affil_stat.date_rqst_rcvd, " + &
"    pd_affil_stat.date_app_sent, " + &
"    pd_affil_stat.date_app_signed, " + &
"    pd_affil_stat.date_app_rcvd, " + &
"    pd_affil_stat.date_rls_form_exp, " + &
"    pd_affil_stat.date_app_audit_completed, " + &
"    pd_affil_stat.date_data_entry_completed, " + &
"    pd_affil_stat.date_verif_completed, " + &
"    pd_affil_stat.date_comm_review_completed as date_completed, " + &
"    pd_affil_stat.affil_ended, " + &
"    code_lookup.code as affil_ended_code, " + &
"    code_lookup.description as affil_ended_desc, " + &
"    pd_affil_stat.init_prov_period_from, " + &
"    pd_affil_stat.init_prov_period_to,pd_affil_stat.staff_category, " + &
"    pd_affil_stat.active_status,pd_affil_stat.fee, " + &
"    pd_affil_stat.date_invoiced,pd_affil_stat.date_paid, " + &
"    pd_affil_stat.priority,pd_affil_stat.priority_user, " + &
"    pd_affil_stat.custom_1, " + &
"    pd_affil_stat.custom_2, " + &
"    pd_affil_stat.custom_3, " + &
"    pd_affil_stat.custom_4, " + &
"    pd_affil_stat.custom_5, " + &
"    pd_affil_stat.prov_status, " + &
"    pd_affil_stat.prior_appt_start, " + &
"    pd_affil_stat.prior_appt_end, " + &
"    pd_affil_stat.appt_note, " + &
"    code_lookup_a.description as affiliation_status_desc, " + &
"    pd_affil_stat.inital_appmnt_date from " + &
"    pd_affil_stat left outer join code_lookup on pd_affil_stat.affil_ended_reason = code_lookup.lookup_code " + &
"                  left outer join code_lookup as code_lookup_a ON pd_affil_stat.affiliation_status = code_lookup_a.code,"+ &
"    facility as facility_a, " + &
"    facility as facility_b, " + &
"    facility as facility_c " + &
"where " + &
"    (facility_a.facility_id = pd_affil_stat.parent_facility_id) and " + &
"    (facility_b.facility_id = pd_affil_stat.verifying_facility) and " + &
"    (facility_c.facility_id = pd_affil_stat.application_audit_facility) " + &
" and (code_lookup_a.lookup_name ='affiliation status')  " + &
"order by pd_affil_stat.rec_id,pd_affil_stat.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_app_audit' and type = 'V')  " + &
"  drop view v_app_audit "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_app_audit " + &
"AS " + &
"SELECT  top 100 percent  pd_app_audit.record_id, pd_app_audit.prac_id, pd_app_audit.facility_id, pd_app_audit.seq_no, pd_app_audit.app_audit_id,  " + &
"                      pd_app_audit.completed, pd_app_audit.date_completed, pd_app_audit.active_status, pd_app_audit.data_status,  " + &
"                      pd_app_audit.identifying_number, pd_app_audit.appt_stat_id, code_lookup.description AS status, " + &
"							  pd_app_audit.fax_message AS item_description, pd_app_audit.notes " + &
"FROM         pd_app_audit LEFT OUTER JOIN " + &
"                      code_lookup ON pd_app_audit.data_status = code_lookup.lookup_code " + &
"ORDER BY pd_app_audit.record_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_app_audit_attempts' and type = 'V')  " + &
"  drop view v_app_audit_attempts "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_app_audit_attempts " + &
"AS " + &
"SELECT  top 100 percent  record_id, prac_id, facility_id, seq_no, date_attempted, user_name, method, notes, active_status " + &
"FROM         pd_app_audit_attempts " + &
"ORDER BY record_id, prac_id, facility_id, seq_no "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_attest_questions' and type = 'V')  " + &
"  drop view v_attest_questions "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_attest_questions " + &
"AS " + &
"SELECT  top 100 percent      pd_attest_questions.rec_id, pd_attest_questions.prac_id, pd_attest_questions.question_id, cl_quest_type.code AS question_type_code,  " + &
"                      cl_quest_type.description AS question_type_description, question_lookup.short_quest, question_lookup.full_quest,  " + &
"                      pd_attest_questions.answer_code AS answer_lookup_code, cl_answer.code AS answer_code, cl_answer.description AS answer_description,  " + &
"                      pd_attest_questions.active_status, CASE WHEN pd_attest_questions.active_status = 1 THEN 'Yes' ELSE 'No' END AS active_status_description,  " + &
"                      pd_attest_questions.facility_id, facility.facility_name, pd_attest_questions.explain_yes " + &
"FROM  pd_attest_questions INNER JOIN question_lookup ON pd_attest_questions.question_id = question_lookup.quest_id  " + &
"INNER JOIN   facility ON facility.facility_id = pd_attest_questions.facility_id  " + &
"INNER JOIN code_lookup cl_answer ON cl_answer.lookup_code = pd_attest_questions.answer_code  " + &
"inner join code_lookup cl_quest_type ON  cl_quest_type.lookup_code = question_lookup.quest_type " + &
"ORDER BY pd_attest_questions.rec_id "

//move to befor v_audit_trail 2008-03-27
//reason :  BugN032702(WEB&PB  P2)
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_full_name' and type = 'V')  " + &
"  drop view v_full_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_full_name " + &
"AS " + &
"SELECT   top 100 percent  title = code_lookup_1.code, " + &
"title_description = code_lookup_1.description, " + &
"first_name, middle_name, last_name, " + &
"prof_suffix = code_lookup_2.code, " + &
"prof_suffix_descp = code_lookup_2.description, " + &
"gemder = code_lookup_3.description, " + &
"SUBSTRING(ISNULL(ssn, ''), 1, 3)  " + &
"                      + '-' + SUBSTRING(ISNULL(ssn, ''), 4, 2) + '-' + SUBSTRING(ISNULL(ssn, ''), 6, 4) AS ssn, LTRIM(RTRIM(ISNULL(last_name, '')))  " + &
"                      + ', ' + ISNULL(first_name, '') + ' ' + SUBSTRING(ISNULL(middle_name, ''), 1, 1) + CASE WHEN isnull(pd_basic.middle_name, '')  " + &
"                      = '' THEN '' ELSE '.,' END + LTRIM(RTRIM(ISNULL(code_lookup_4.code,''))) + CASE WHEN isnull " + &
"                          (code_lookup_4.code,'') = '' THEN '' ELSE ', ' END + LTRIM(RTRIM(ISNULL " + &
"                          (code_lookup_2.code,''))) AS full_name, " + &
"prac_id, " + &
"date_of_birth, " + &
"rec_id, " + &
"cust_1, " + &
"cust_2, " + &
"cust_3, " + &
"cust_4, " + &
"cust_5, " + &
"cust_11, " + &
"cust_12, " + &
"cust_13, " + &
"cust_14, " + &
"cust_15, " + &
"cust_d1, " + &
"cust_d2, " + &
"npi_number, " + &
"provider_id " + &
"FROM    pd_basic  " + &
"                   left outer join code_lookup code_lookup_1 on (pd_basic.title = code_lookup_1.lookup_code) " + &
"                   left outer join code_lookup code_lookup_2 on (pd_basic.prof_suffix = code_lookup_2.lookup_code) " + &
"                   left outer join code_lookup code_lookup_3 on (pd_basic.sex = code_lookup_3.lookup_code) " + &
"                   left outer join code_lookup code_lookup_4 on (pd_basic.name_suffix = code_lookup_4.lookup_code) " + &
"order by rec_id,prac_id "




is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_audit_trail' and type = 'V')  " + &
"  drop view v_audit_trail "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_audit_trail " + &
"  as(select  top 100 percent  sys_audit.rec_id, " + &
"    sys_audit.field_id, " + &
"    sys_audit.seq_no, " + &
"    sys_audit.table_id, " + &
"    sys_audit.prac_id, " + &
"    sys_audit.old_value, " + &
"    sys_audit.new_value, " + &
"    sys_audit.user_id, " + &
"    sys_audit.date_time_modified, " + &
"    sys_fields.field_name, " + &
"    sys_fields.field_name_allias, " + &
"    sys_tables.table_name_allias, " + &
"    v_full_name.full_name, " + &
"    sys_audit.exported, " + &
"    sys_audit.export_date, " + &
"    sys_audit.facility_id, " + &
"    sys_audit.audit_type from " + &
"    sys_audit left outer join sys_fields on sys_audit.field_id = sys_fields.field_id, " + &
"    sys_tables, " + &
"    v_full_name  " + &
"where (sys_audit.prac_id = v_full_name.prac_id) and " + &
"    (sys_audit.table_id = sys_tables.table_id) " + &
"order by sys_audit.rec_id,sys_audit.field_id,sys_audit.seq_no) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_basic' and type = 'V')  " + &
"  drop view v_basic "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_basic " + &
"  as select  top 100 percent  pd_basic.rec_id, " + &
"    pd_basic.prac_id, " + &
"    pd_basic.first_name, " + &
"    pd_basic.last_name, " + &
"    pd_basic.middle_name, " + &
"    pd_basic.title, " + &
"    code_lookup_a.code as title_code, " + &
"    code_lookup_a.description as title_description, " + &
"    pd_basic.name_suffix, " + &
"    code_lookup_b.code as name_suffix_code, " + &
"    code_lookup_b.description as name_suffix_description, " + &
"    pd_basic.prof_suffix, " + &
"    code_lookup_c.code as prof_suffix_code, " + &
"    code_lookup_c.description as prof_suffix_description, " + &
"    pd_basic.date_of_birth, " + &
"    pd_basic.ssn, " + &
"    pd_basic.sex, " + &
"    code_lookup_d.code as sex_code, " + &
"    code_lookup_d.description as sex_description, " + &
"    pd_basic.prac_category, " + &
"    code_lookup_e.code as prac_category_code, " + &
"    code_lookup_e.description as prac_category_description, " + &
"    pd_basic.maiden_other_name, " + &
"    pd_basic.pob_city, " + &
"    pd_basic.pob_state, " + &
"    code_lookup_f.code as state_code, " + &
"    code_lookup_f.description as state_description, " + &
"    pd_basic.pob_country, " + &
"    code_lookup_g.code as pob_country_code, " + &
"    code_lookup_g.description as pob_country_description, " + &
"    pd_basic.citizenship, " + &
"    code_lookup_h.code as citizenship_code, " + &
"    pd_basic.married, " + &
"    code_lookup_i.code as married_code, " + &
"    pd_basic.spouse_name, " + &
"    pd_basic.phone, " + &
"    pd_basic.answering_service, " + &
"    pd_basic.beeper_1, " + &
"    pd_basic.beeper_2, " + &
"    pd_basic.personal_pager, " + &
"    pd_basic.hospital_pager, " + &
"    pd_basic.car_phone_1, " + &
"    pd_basic.car_phone_2, " + &
"    pd_basic.civilian_fed_employee, " + &
"    code_lookup_j.code as civilian_fed_employee_code, " + &
"    pd_basic.active_military, " + &
"    code_lookup_k.code as active_military_code, " + &
"    pd_basic.reservist, " + &
"    code_lookup_l.code as reservist_code, " + &
"    pd_basic.branch, " + &
"    pd_basic.rank, " + &
"    pd_basic.service_number, " + &
"    pd_basic.service_date_from, " + &
"    pd_basic.service_date_to, " + &
"    pd_basic.cust_1, " + &
"    pd_basic.cust_2, " + &
"    pd_basic.cust_3, " + &
"    pd_basic.cust_5, " + &
"    pd_basic.cust_6, " + &
"    pd_basic.cust_7, " + &
"    pd_basic.cust_8, " + &
"    pd_basic.cust_9, " + &
"    pd_basic.cust_10, " + &
"    pd_basic.npi_number, " + &
"    pd_basic.cust_11, " + &
"    pd_basic.cust_12, " + &
"    pd_basic.cust_13, " + &
"    pd_basic.cust_14, " + &
"    pd_basic.cust_15, " + &
"    pd_basic.cust_d1, " + &
"    pd_basic.cust_d2, " + &
"    pd_basic.full_name, " + &
"    pd_basic.npdb_query, " + &
"    pd_basic.provider_id, " + &
"    pd_basic.provider_type, " + &
"    code_lookup_m.code as provider_type_code, " + &
"    code_lookup_m.description as provider_type_description, " + &
"    pd_basic.cust_4, " + &
"    pd_basic.oig_query " + &
"from " + &
"    pd_basic LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_a ON pd_basic.title = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_b ON pd_basic.name_suffix = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_c ON pd_basic.prof_suffix = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_d ON pd_basic.sex = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_e ON pd_basic.prac_category = code_lookup_e.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_f ON pd_basic.pob_state = code_lookup_f.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_g ON pd_basic.pob_country = code_lookup_g.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_h ON pd_basic.citizenship = code_lookup_h.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_i ON pd_basic.married = code_lookup_i.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_j ON pd_basic.civilian_fed_employee = code_lookup_j.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_k ON pd_basic.active_military = code_lookup_k.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_l ON pd_basic.reservist = code_lookup_l.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_m ON pd_basic.provider_type = code_lookup_m.lookup_code " + &
"order by pd_basic.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_basic_info' and type = 'V')  " + &
"  drop view v_basic_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_basic_info " + &
"  as select  top 100 percent  pd_basic.rec_id, " + &
"    pd_basic.prac_id, " + &
"    pd_basic.first_name, " + &
"    pd_basic.middle_name, " + &
"    pd_basic.last_name, " + &
"    code_lookup_a.code as title_code, " + &
"    code_lookup_a.description as title_description, " + &
"    code_lookup_b.code as name_suffix_code, " + &
"    code_lookup_b.description as name_suffix_description, " + &
"    code_lookup_c.code as prof_suffix_code, " + &
"    code_lookup_c.description as prof_suffix_description, " + &
"    pd_basic.date_of_birth, " + &
"    pd_basic.ssn, " + &
"    code_lookup_d.code as gender_code, " + &
"    code_lookup_d.description as gender_description, " + &
"    code_lookup_e.code as prac_category_code, " + &
"    code_lookup_e.description as prac_category_description, " + &
"    pd_basic.provider_id, " + &
"    code_lookup_f.code as provider_type_code, " + &
"    code_lookup_f.description as provider_type_description, " + &
"    pd_basic.maiden_other_name, " + &
"    pd_basic.cust_1, " + &
"    pd_basic.cust_2, " + &
"    pd_basic.cust_3, " + &
"    pd_basic.cust_4, " + &
"    pd_basic.cust_5, " + &
"    pd_basic.cust_6, " + &
"    pd_basic.cust_7, " + &
"    pd_basic.cust_8, " + &
"    pd_basic.cust_9, " + &
"    pd_basic.cust_10, " + &
"    pd_basic.cust_11, " + &
"    pd_basic.cust_12, " + &
"    pd_basic.cust_13, " + &
"    pd_basic.cust_14, " + &
"    pd_basic.cust_15, " + &
"    pd_basic.cust_d1, " + &
"    pd_basic.cust_d2, " + &
"    pd_basic.npi_number " + &
"from " + &
"    pd_basic LEFT OUTER JOIN  " + &
"    code_lookup as code_lookup_a ON pd_basic.title = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_b ON pd_basic.name_suffix = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_c ON pd_basic.prof_suffix = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_d ON pd_basic.sex = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_e ON pd_basic.prac_category = code_lookup_e.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_f ON pd_basic.provider_type = code_lookup_f.lookup_code " + &
"order by rec_id,prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_billing_address' and type = 'V')  " + &
"  drop view v_billing_address "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_billing_address " + &
"AS " + &
"SELECT  top 100 percent      pa.rec_id AS practice_address_id, ba.rec_id AS billing_address_id, ba.prac_id, pd_basic.first_name + ' ' + pd_basic.last_name AS practitioner,  " + &
"                      code_lookup_b.code AS office_in_home, code_lookup_d.code AS prac_type_code, code_lookup_d.description AS prac_type, ba.street, ba.street_2,  " + &
"                      ba.city, code_lookup_e.code AS state_code, code_lookup_e.description AS state_name, code_lookup_f.code AS country_code,  " + &
"                      code_lookup_f.description AS country_name, ba.pager_number, ba.phone, ba.ext, ba.fax, ba.zip, code_lookup_g.code AS county_code,  " + &
"                      code_lookup_g.description AS county_name, ba.contact_person, ba.tax_id, ba.tax_id_other_1, ba.tax_id_other_2, ba.business_mgr, ba.office_mgr,  " + &
"                      ba.e_mail_address, ba.web_address, ba.mon_from, ba.mon_to, ba.tue_from, ba.tue_to, ba.wed_from, ba.thu_from, ba.thu_to, ba.fri_from, ba.fri_to,  " + &
"                      ba.sat_from, ba.sat_to, ba.sun_from, ba.sun_to, ba.mon_from2, ba.mon_to2, ba.tue_from2, ba.tue_to2, ba.wed_from2, ba.wed_to2, ba.thu_from2,  " + &
"                      ba.thu_to2, ba.fri_from2, ba.fri_to2, ba.sat_from2, ba.sat_to2, ba.sun_from2, ba.sun_to2, ba.wed_to, ba.routine_visit_appt, ba.urgent_visit_appt,  " + &
"                      ba.emergency_visit_appt, ba.non_emergency_appt, code_lookup_h.code AS young_child_code, code_lookup_i.code AS child_code,  " + &
"                      code_lookup_j.code AS adolescent_code, code_lookup_k.code AS adult_code, code_lookup_l.code AS senior_code,  " + &
"                      code_lookup_m.description AS handicap_acc, code_lookup_n.description AS on_public_trans, ba.cust_1, ba.cust_2, ba.cust_3, ba.cust_4, ba.cust_5,  " + &
"                      ba.cust_6, ba.cust_7, ba.cust_8, ba.cust_9, ba.cust_10, ba.cust_d1, ba.cust_d2, ba.active_status, ba.accepting_new_patients,  " + &
"                      code_lookup_p.description AS accepting_new_patient, ba.gp_id, code_lookup_q.description AS send_corresp_here, ba.suite_apart " + &
"FROM         pd_address pa LEFT OUTER JOIN " + &
"                      pd_basic ON pa.prac_id = pd_basic.prac_id LEFT OUTER JOIN " + &
"                      pd_address ba ON CASE WHEN pa.billing_address_id = 0 THEN pa.rec_id ELSE pa.billing_address_id END = ba.rec_id LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON ba.office_in_home = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_d ON ba.practice_type = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_e ON ba.state = code_lookup_e.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_f ON ba.country = code_lookup_f.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_g ON ba.county = code_lookup_g.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_h ON ba.young_child = code_lookup_h.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_i ON ba.child = code_lookup_i.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_j ON ba.adolescent = code_lookup_j.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_k ON ba.adult = code_lookup_k.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_l ON ba.senior_adult = code_lookup_l.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_m ON ba.handicapped_access = code_lookup_m.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_n ON ba.public_transportation = code_lookup_n.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_p ON ba.accepting_new_patients = code_lookup_p.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_q ON ba.send_corresp_here = code_lookup_q.lookup_code " + &
"WHERE     (pa.billing_address_id <> - 1) " + &
"ORDER BY pa.rec_id,pa.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_board_specialty' and type = 'V')  " + &
"  drop view v_board_specialty "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_board_specialty " + &
"as select  top 100 percent  pd_board_specialty.rec_id, " + &
"    pd_board_specialty.prac_id, " + &
"    pd_board_specialty.specialty, " + &
"    code_lookup_a.code as specialty_code, " + &
"    code_lookup_a.description as specialty_description, " + &
"    address_lookup.code as board_code, " + &
"    address_lookup.entity_name as board_name, " + &
"    pd_board_specialty.eligible_until, " + &
"    pd_board_specialty.initial_certification, " + &
"    pd_board_specialty.last_recertification, " + &
"    pd_board_specialty.certification_expires, " + &
"    pd_board_specialty.certification_number, " + &
"    pd_board_specialty.required_year_completion, " + &
"    pd_board_specialty.cust_1, " + &
"    pd_board_specialty.cust_2, " + &
"    pd_board_specialty.cust_3, " + &
"    pd_board_specialty.cust_4, " + &
"    pd_board_specialty.cust_5, " + &
"    pd_board_specialty.cust_6, " + &
"    pd_board_specialty.cust_7, " + &
"    pd_board_specialty.cust_8, " + &
"    pd_board_specialty.cust_9, " + &
"    pd_board_specialty.cust_10, " + &
"    pd_board_specialty.cust_d1, " + &
"    pd_board_specialty.cust_d2, " + &
"    pd_board_specialty.initial_cert_date, " + &
"    pd_board_specialty.last_cert_date, " + &
"    pd_board_specialty.expiration_date, " + &
"    pd_board_specialty.eligible_until_date, " + &
"    pd_board_specialty.compl_req_date, " + &
"    code_lookup_b.description as exam_taken, " + &
"    code_lookup_c.description as active_process, " + &
"    code_lookup_d.description as ever_failed, " + &
"    code_lookup_f.description as board_certified, " + &
"    code_lookup_e.description as specialty_order from " + &
"    pd_board_specialty left outer join address_lookup on pd_board_specialty.board_code = address_lookup.lookup_code left outer join code_lookup as code_lookup_b on pd_board_specialty.exam_taken = code_lookup_b.lookup_code left outer join code_lookup as code_lookup_c on pd_board_specialty.active_cert_process = code_lookup_c.lookup_code left outer join code_lookup as code_lookup_d on pd_board_specialty.ever_failed_cert = code_lookup_d.lookup_code  left outer join code_lookup AS code_lookup_f ON pd_board_specialty.board_certified = code_lookup_f.lookup_code  left outer join code_lookup as code_lookup_e on pd_board_specialty.specialty_order = code_lookup_e.lookup_code, " + &
"    code_lookup as code_lookup_a where " + &
"    (pd_board_specialty.specialty = code_lookup_a.lookup_code) " + &
"order by pd_board_specialty.rec_id,pd_board_specialty.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_claims' and type = 'V')  " + &
"  drop view v_claims "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_claims " + &
"as select  top 100 percent  pd_claims.rec_id,pd_claims.prac_id,pd_claims.case_number,pd_claims.claimant,status_code=code_lookup.code,status_descripton=code_lookup.description,pd_claims.nature_of_claim,pd_claims.date_closed,pd_claims.date_of_incident,pd_claims.case_role,pd_claims.other_role,pd_claims.amt_attrib_you,pd_claims.adj_set_dis,pd_claims.amount_paid,pd_claims.date_last_contact,pd_claims.date_initiated,pd_claims.practice_role,pd_claims.practice_other,pd_claims.alleged_malpractice,pd_claims.alleged_harm,pd_claims.patient_illness,pd_claims.other_details,pd_claims.date_claimed_filed,pd_claims.carrier,pd_claims.cust_1,pd_claims.cust_2,pd_claims.cust_3,pd_claims.cust_4,pd_claims.cust_5,pd_claims.cust_6,pd_claims.cust_7,pd_claims.cust_8,pd_claims.cust_9,pd_claims.cust_10,pd_claims.cust_d1,pd_claims.cust_d2 from(pd_claims left outer join code_lookup on pd_claims.status_code = code_lookup.lookup_code) order by pd_claims.rec_id,pd_claims.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_clinical_specialties' and type = 'V')  " + &
"  drop view v_clinical_specialties "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_clinical_specialties " + &
"as select  top 100 percent  pd_clinical_specialties.rec_id,pd_clinical_specialties.prac_id,rank_code=code_lookup.code,rank_description=code_lookup.description,pd_clinical_specialties.specialty_expertise,pd_clinical_specialties.cust_1,pd_clinical_specialties.cust_2,pd_clinical_specialties.cust_3,pd_clinical_specialties.cust_4,pd_clinical_specialties.cust_5 from(pd_clinical_specialties left outer join code_lookup on pd_clinical_specialties.rank = code_lookup.lookup_code) order by pd_clinical_specialties.rec_id,pd_clinical_specialties.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_code_lookup_1' and type = 'V')  " + &
"  drop view v_code_lookup_1 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_code_lookup_1 " + &
"AS " + &
"SELECT  top 100 percent      lookup_code, lookup_name AS table_name, code, description, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, caqh_code, ic_n,  " + &
"                      ic_c " + &
"FROM         code_lookup " + &
"ORDER BY lookup_code "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_code_lookup_2' and type = 'V')  " + &
"  drop view v_code_lookup_2 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_code_lookup_2 " + &
"AS " + &
"SELECT  top 100 percent      lookup_code, lookup_name AS table_name, code, description, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, caqh_code, ic_n,  " + &
"                      ic_c " + &
"FROM         code_lookup " + &
"ORDER BY lookup_code "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_committee_lookup' and type = 'V')  " + &
"  drop view v_committee_lookup "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_committee_lookup " + &
"AS " + &
"SELECT  top 100 percent      committee_id, facility_id, committee_name " + &
"FROM         committee_lookup " + &
"ORDER BY committee_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_committee_review' and type = 'V')  " + &
"  drop view v_committee_review "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_committee_review " + &
"as select  top 100 percent  pd_comm_review.rec_id,pd_comm_review.prac_id,pd_comm_review.facility_id,facility_name=facility.facility_name,committee_name=committee_lookup.committee_name,pd_comm_review.date_sent_for_review,pd_comm_review.date_back_from_review,review_result_code=code_lookup_a.code,review_result_name=code_lookup_a.description,pd_comm_review.active_status from(pd_comm_review left outer join code_lookup as code_lookup_a on pd_comm_review.review_results = code_lookup_a.lookup_code),committee_lookup,facility where(pd_comm_review.facility_id = facility.facility_id) and(pd_comm_review.committee_id = committee_lookup.committee_id) order by pd_comm_review.rec_id,pd_comm_review.facility_id,pd_comm_review.committee_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_continue_education' and type = 'V')  " + &
"  drop view v_continue_education "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_continue_education " + &
"AS " + &
"SELECT  top 100 percent      pd_postgrad_train.prac_id, pd_postgrad_train.subject, pd_postgrad_train.date_from, pd_postgrad_train.date_thru,  " + &
"                      pd_postgrad_train.loc_city, code_lookup_a.code AS loc_state_code, code_lookup_a.description AS loc_state_description,  " + &
"                      pd_postgrad_train.loc_zip, pd_postgrad_train.loc_country, pd_postgrad_train.hours, code_lookup_b.code AS category_code,  " + &
"                      code_lookup_b.description AS category_description, pd_postgrad_train.sponsor, pd_postgrad_train.street, pd_postgrad_train.city,  " + &
"                      code_lookup_c.code AS state_code, code_lookup_c.description AS state_description, pd_postgrad_train.zip, code_lookup_d.code AS country_code, " + &
"                       code_lookup_d.description AS country_description, pd_postgrad_train.program_director, pd_postgrad_train.cust_1,  " + &
"                      pd_postgrad_train.cust_2, pd_postgrad_train.cust_3, pd_postgrad_train.cust_4, pd_postgrad_train.cust_5,  " + &
"                      pd_postgrad_train.cust_6, pd_postgrad_train.cust_7, pd_postgrad_train.cust_8, pd_postgrad_train.cust_9,  " + &
"                      pd_postgrad_train.cust_10, pd_postgrad_train.cust_d1, pd_postgrad_train.cust_d2 " + &
"FROM         pd_postgrad_train LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_d ON pd_postgrad_train.country = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON pd_postgrad_train.category = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_c ON pd_postgrad_train.state = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_a ON pd_postgrad_train.loc_state = code_lookup_a.lookup_code " + &
"ORDER BY pd_postgrad_train.rec_id,pd_postgrad_train.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_contract' and type = 'V')  " + &
"  drop view v_contract "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_contract " + &
"as select  top 100 percent  pd_contract.rec_id,pd_contract.prac_id,group_plan_code=address_lookup.code,group_plan_description=address_lookup.entity_name,sub_group_code=code_lookup_a.code,sub_group_description=code_lookup_a.description,catagory_code=code_lookup_b.code,catagory_description=code_lookup_b.description,pd_contract.start_date,pd_contract.end_date,reason_code=code_lookup_c.code,reason_description=code_lookup_c.description,pd_contract.mco_provider_id,pd_contract.cust_1,pd_contract.cust_2,pd_contract.cust_3,pd_contract.cust_4,pd_contract.cust_5 from((((pd_contract left outer join address_lookup on pd_contract.group_plan = address_lookup.lookup_code) left outer join code_lookup as code_lookup_a on pd_contract.sub_group_plan = code_lookup_a.lookup_code) left outer join code_lookup as code_lookup_b on pd_contract.category = code_lookup_b.lookup_code) left outer join code_lookup as code_lookup_c on pd_contract.reason = code_lookup_c.lookup_code) order by pd_contract.rec_id,pd_contract.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_cpr_certification' and type = 'V')  " + &
"  drop view v_cpr_certification "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_cpr_certification " + &
"AS " + &
"SELECT  top 100 percent      pd_cpr_certifiation.rec_id, pd_cpr_certifiation.prac_id, pd_cpr_certifiation.bls_expires, pd_cpr_certifiation.acls_expires,  " + &
"                      pd_cpr_certifiation.atls_expires, pd_cpr_certifiation.cust_1, pd_cpr_certifiation.cust_2, pd_cpr_certifiation.cust_3,  " + &
"                      pd_cpr_certifiation.cust_4, pd_cpr_certifiation.cust_5, pd_cpr_certifiation.cust_6, pd_cpr_certifiation.cust_7,  " + &
"                      pd_cpr_certifiation.cust_8, pd_cpr_certifiation.cust_9, pd_cpr_certifiation.cust_10, pd_cpr_certifiation.cust_d1,  " + &
"                      pd_cpr_certifiation.cust_d2, pd_cpr_certifiation.cert_type AS cert_type_lookup_code, code_lookup.code AS cert_type_code,  " + &
"                      code_lookup.description AS cert_type_description, code_lookup_1.description AS certified " + &
"FROM         pd_cpr_certifiation INNER JOIN " + &
"                      code_lookup ON pd_cpr_certifiation.cert_type = code_lookup.lookup_code INNER JOIN " + &
"                      code_lookup code_lookup_1 ON pd_cpr_certifiation.certified = code_lookup_1.lookup_code " + &
"ORDER BY pd_cpr_certifiation.rec_id, pd_cpr_certifiation.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_info' and type = 'V')  " + &
"  drop view v_ctx_basic_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info " + &
"as SELECT  top 100 percent   " + &
"	app_facility.facility_name AS Company_Name,  " + &
"	app_facility.street AS Company_street_1, " + &
"	app_facility.street_2 AS Company_street_2, " + &
"	app_facility.city AS Company_city, " + &
"	app_facility.state AS Company_state, " + &
"	app_facility.zip AS Company_zip, " + &
"	code_lookup_7.code  AS Company_country, " + &
"	app_facility.phone AS Company_phone, " + &
"	app_facility.fax AS Company_fax, " + &
"	app_facility.web_address AS Company_web_address, " + &
"	app_facility.contact_type2 AS Company_contact_type2, " + &
"	app_facility.corp_office_flag AS Company_corp_office_flag, " + &
"	app_facility.corp_office_link AS Company_corp_office_link, " + &
"	code_lookup.code AS Contract_Category_code,  " + &
"	code_lookup.description AS Contract_Category_description,  " + &
"	code_lookup_1.code AS Contract_Status_code,  " + &
"	code_lookup_2.code AS contract_type_code,  " + &
"	code_lookup_2.description AS contract_type_Description,  " + &
"	code_lookup_3.code AS term_reason_code,  " + &
"	code_lookup_3.description AS term_Reason_Desciption,  " + &
"	code_lookup_4.description AS product_type_desc,  " + &
"	code_lookup_4.code AS product_type_code,  " + &
"	code_lookup_5.code AS product_code,  " + &
"	code_lookup_5.description AS product_description,  " + &
"	ctx_basic_info.ctx_id,    " + &
"	ctx_basic_info.category,    " + &
"	ctx_basic_info.status,    " + &
"	ctx_basic_info.facility_id,    " + &
"	ctx_basic_info.contract_type,    " + &
"	ctx_basic_info.product_type,    " + &
"	ctx_basic_info.product_name,    " + &
"	ctx_basic_info.reimbursment_menth,    " + &
"	ctx_basic_info.file_location,    " + &
"	ctx_basic_info.effective_date,    " + &
"	ctx_basic_info.expriation_date,    " + &
"	ctx_basic_info.review_date,    " + &
"	ctx_basic_info.review_by,    " + &
"	ctx_basic_info.term_date,    " + &
"	ctx_basic_info.term_reason,    " + &
"	ctx_basic_info.last_revis_date,    " + &
"	ctx_basic_info.other_date_1,    " + &
"	ctx_basic_info.other_date_2,    " + &
"	ctx_basic_info.oc_signed_by,    " + &
"	ctx_basic_info.oc_title,    " + &
"	ctx_basic_info.oc_department,    " + &
"	ctx_basic_info.oc_legal_rep,    " + &
"	ctx_basic_info.cc_signed_by,    " + &
"	ctx_basic_info.cc_title,    " + &
"	ctx_basic_info.cc_department,    " + &
"	ctx_basic_info.cc_legal_rep,    " + &
"	ctx_basic_info.keyword,    " + &
"	ctx_basic_info.dvision,    " + &
"	ctx_basic_info.custom_1,    " + &
"	ctx_basic_info.custom_2,    " + &
"	ctx_basic_info.custom_3,    " + &
"	ctx_basic_info.custom_4,    " + &
"	ctx_basic_info.custom_5,    " + &
"	ctx_basic_info.custom_6,    " + &
"	ctx_basic_info.custom_7,    " + &
"	ctx_basic_info.custom_8,    " + &
"	ctx_basic_info.custom_9,    " + &
"	ctx_basic_info.custom_10,    " + &
"	ctx_basic_info.group_multi_loc_id,    " + &
"	ctx_basic_info.revision_reason,    " + &
"	ctx_basic_info.group_id,    " + &
"	ctx_basic_info.record_id,    " + &
"	ctx_basic_info.custom_11,    " + &
"	ctx_basic_info.custom_12,    " + &
"	ctx_basic_info.custom_13,    " + &
"	ctx_basic_info.custom_14,    " + &
"	ctx_basic_info.custom_15,    " + &
"	ctx_basic_info.custom_16,    " + &
"	ctx_basic_info.custom_17,    " + &
"	ctx_basic_info.custom_18,    " + &
"	ctx_basic_info.custom_19,    " + &
"	ctx_basic_info.custom_20,    " + &
"	ctx_basic_info.custom_date1,    " + &
"	ctx_basic_info.custom_date2,    " + &
"	ctx_basic_info.custom_date3,    " + &
"	ctx_basic_info.custom_date4,    " + &
"	ctx_basic_info.custom_date5,    " + &
"	ctx_basic_info.custom_date6,    " + &
"	ctx_basic_info.custom_date7,    " + &
"	ctx_basic_info.custom_date8,    " + &
"	ctx_basic_info.custom_date9,    " + &
"	ctx_basic_info.custom_date10,    " + &
"	ctx_basic_info.custom_n1,    " + &
"	ctx_basic_info.custom_n2,    " + &
"	ctx_basic_info.custom_n3,    " + &
"	ctx_basic_info.custom_n4,    " + &
"	ctx_basic_info.custom_n5,    " + &
"	ctx_basic_info.custom_n6,    " + &
"	ctx_basic_info.custom_n7,    " + &
"	ctx_basic_info.custom_n8,    " + &
"	ctx_basic_info.custom_n9,    " + &
"	ctx_basic_info.custom_n10,    " + &
"	ctx_basic_info.version_number,    " + &
"	ctx_basic_info.version_date,    " + &
"	ctx_basic_info.notes,    " + &
"	ctx_basic_info.app_facility,   " + &
"	ctx_basic_info.master_contract_id AS master_ctx_id,  " + &
"	ctx_basic_info.master_contract_name, " + &
"	code_lookup_6.code as dvision_code,  " + &
"	code_lookup_6.description as dvision_description " + &
"FROM (((((((ctx_basic_info  " + &
"LEFT OUTER JOIN code_lookup ON ctx_basic_info.category = code_lookup.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_basic_info.status = code_lookup_1.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_basic_info.contract_type = code_lookup_2.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_basic_info.term_reason = code_lookup_3.lookup_code)  " + &
"INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id)  " + &
"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code " + &
"left outer join code_lookup as code_lookup_6 on ctx_basic_info.dvision = code_lookup_6.lookup_code " + &
"left outer join code_lookup as code_lookup_7 on app_facility.country = code_lookup_7.lookup_code " + &
"order by ctx_basic_info.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_info_alarms' and type = 'V')  " + &
"  drop view v_ctx_basic_info_alarms "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info_alarms " + &
"as SELECT  top 100 percent   " + &
"	ctx_basic_info.ctx_id,  " + &
"	app_facility.facility_name,  " + &
"	ctx_notification_users.user_id,  " + &
"	ctx_notification.alm_message,  " + &
"	ctx_notification.alm_enabled,  " + &
"	ctx_notification.alm_notification_days,  " + &
"	ctx_notification.alm_last_notification_sent,  " + &
"	ctx_notification.alm_post_notification_days,  " + &
"	ctx_notification.alm_total_tries,  " + &
"	ctx_notification.alm_action_item_posted,  " + &
"	ctx_notification.alm_total_tries_counter,  " + &
"	ctx_notification.alm_frequency,  " + &
"	ctx_notification.create_action_item  " + &
"FROM ((ctx_basic_info  " + &
"LEFT OUTER JOIN ctx_notification ON ctx_basic_info.ctx_id = ctx_notification.ctx_id)  " + &
"INNER JOIN ctx_notification_users ON ctx_basic_info.ctx_id = ctx_notification_users.ctx_id)  " + &
"INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id  " + &
"GROUP BY ctx_basic_info.ctx_id,  " + &
"	app_facility.facility_name,  " + &
"	ctx_notification_users.user_id,  " + &
"	ctx_notification.alm_message,  " + &
"	ctx_notification.alm_enabled,  " + &
"	ctx_notification.alm_notification_days,  " + &
"	ctx_notification.alm_last_notification_sent,  " + &
"	ctx_notification.alm_post_notification_days,  " + &
"	ctx_notification.alm_total_tries,  " + &
"	ctx_notification.alm_action_item_posted,  " + &
"	ctx_notification.alm_total_tries_counter,  " + &
"	ctx_notification.alm_frequency,  " + &
"	ctx_notification.create_action_item  " + &
"ORDER BY ctx_basic_info.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_products' and type = 'V')  " + &
"  drop view v_ctx_basic_products "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_products " + &
"as SELECT  top 100 percent  ctx_products.ctx_id,        code_lookup_4.description AS product_type_desc,        code_lookup_4.code AS product_type_code,        code_lookup_5.code AS product_code,        code_lookup_5.description AS product_description FROM (ctx_products LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code)                    LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code ORDER BY ctx_products.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_without_products' and type = 'V')  " + &
"  drop view v_ctx_basic_without_products "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_without_products " + &
"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id,        app_facility.facility_name,         code_lookup.code AS Contract_Category_code,        code_lookup.description AS Contract_Category_description,        code_lookup_1.code AS Contract_Status_code,        code_lookup_2.code AS contract_type_code,        code_lookup_2.description AS contract_type_Description,        CTX_BASIC_INFO.effective_date,        CTX_BASIC_INFO.expriation_date,        CTX_BASIC_INFO.review_date,        CTX_BASIC_INFO.review_by,        CTX_BASIC_INFO.term_date,        code_lookup_3.code AS term_reason_code,        code_lookup_3.description AS term_Reason_Desciption,        CTX_BASIC_INFO.other_date_1,        CTX_BASIC_INFO.other_date_2,        CTX_BASIC_INFO.notes,        CTX_BASIC_INFO.custom_1,        CTX_BASIC_INFO.custom_2,        CTX_BASIC_INFO.custom_3,        CTX_BASIC_INFO.custom_4,        CTX_BASIC_INFO.custom_5,        CTX_BASIC_INFO.custom_6,        CTX_BASIC_INFO.custom_7,        CTX_BASIC_INFO.custom_8,        CTX_BASIC_INFO.custom_9,        CTX_BASIC_INFO.custom_10,        CTX_BASIC_INFO.last_revis_date        FROM ((((CTX_BASIC_INFO                         LEFT OUTER JOIN code_lookup ON CTX_BASIC_INFO.category = code_lookup.lookup_code)                         LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_BASIC_INFO.status = code_lookup_1.lookup_code)                         LEFT OUTER JOIN code_lookup AS code_lookup_2 ON CTX_BASIC_INFO.contract_type = code_lookup_2.lookup_code)                         LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_BASIC_INFO.term_reason = code_lookup_3.lookup_code)                         INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ORDER BY CTX_BASIC_INFO.ctx_id "

//$<Modify> 2008-04-25 By: Nova  begin
//$<Reason> fixed Issues 4 from IntelliReport Issues 4-22-08.doc

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='V_ctx_contract_contacts' and type = 'V')  " + &
"  drop view V_ctx_contract_contacts "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  V_ctx_contract_contacts " + &
"AS SELECT     contact_id,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS contact_phone,  " + &
"          (SELECT     TOP 1 contact_email  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code   " + &
"                                         FROM          code_lookup AS code_lookup_2  " + &
"                                        WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Email')  )) ) AS contact_email,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup AS code_lookup_1  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Fax') )) ) AS contact_Fax,   " + &
"          (SELECT     TOP 1 ext  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"           WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id)  AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS ext,   " + &
"            association, notes, owner, access, ctx_id, ic_area  " + &
"FROM         CTX_CONTRACT_CONTACTS  "

//

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_contacts' and type = 'V')  " + &
"  drop view v_ctx_contacts_contacts "

//--------------------------- APPEON BEGIN ---------------------------
//$<Modify> 2008-04-24 By: Scofield
//$<Reason> Change ctx_contacts's address to app_facility's address.

/*
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_contacts " + &
"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code aS contract_type_code, code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description as contact_title, code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_description, CTX_CONTACTS.street_1, CTX_CONTACTS.street_2, CTX_CONTACTS.street_3, CTX_CONTACTS.city, CTX_CONTACTS.zip, code_lookup_2.code AS state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code AS Phone_Type_code, code_lookup_3.description AS Phone_type_Description, '(' + LEFT( CTX_CONTACTS_NUMBERS.phone,3 ) + ')' + substring( CTX_CONTACTS_NUMBERS.phone, 4, 3) + '-' + RIGHT( CTX_CONTACTS_NUMBERS.phone, 4 ) AS phone, CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email, CTX_CONTRACT_CONTACTS.notes FROM ((((((((CTX_BASIC_INFO INNER JOIN CTX_CONTRACT_CONTACTS ON CTX_BASIC_INFO.ctx_id = CTX_CONTRACT_CONTACTS.ctx_id) LEFT OUTER JOIN CTX_CONTACTS ON CTX_CONTRACT_CONTACTS.contact_id = CTX_CONTACTS.contact_id) LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_2 ON CTX_CONTACTS.state = code_lookup_2.lookup_code) LEFT OUTER JOIN CTX_CONTACTS_NUMBERS ON CTX_CONTACTS.contact_id = CTX_CONTACTS_NUMBERS.contact_id) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_CONTACTS_NUMBERS.via = code_lookup_3.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id GROUP BY CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code, code_lookup.description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, CTX_CONTACTS.contact_title, code_lookup_1.code, code_lookup_1.description, CTX_CONTACTS.street_1, CTX_CONTACTS.street_2, CTX_CONTACTS.street_3, CTX_CONTACTS.city, CTX_CONTACTS.zip, code_lookup_2.code, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code, code_lookup_3.description, code_lookup_4.description, CTX_CONTACTS_NUMBERS.phone, CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email, CTX_CONTRACT_CONTACTS.notes, CTX_CONTRACT_CONTACTS.ic_area HAVING (((CTX_CONTRACT_CONTACTS.ic_area)='c')) ORDER BY CTX_BASIC_INFO.ctx_id "
*/

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"CREATE VIEW  v_ctx_contacts_contacts " + &
//"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code aS contract_type_code, code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description as contact_title, code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_description, app_facility.street, app_facility.street_2, app_facility.street_3, app_facility.city, app_facility.zip, app_facility.state AS state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code AS Phone_Type_code, code_lookup_3.description AS Phone_type_Description, CTX_CONTACTS_NUMBERS.phone AS phone, CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email, CTX_CONTRACT_CONTACTS.notes FROM (((((((CTX_BASIC_INFO INNER JOIN CTX_CONTRACT_CONTACTS ON CTX_BASIC_INFO.ctx_id = CTX_CONTRACT_CONTACTS.ctx_id and CTX_CONTRACT_CONTACTS.ic_area = 'c') LEFT OUTER JOIN CTX_CONTACTS ON CTX_CONTRACT_CONTACTS.contact_id = CTX_CONTACTS.contact_id) LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code)  LEFT OUTER JOIN CTX_CONTACTS_NUMBERS ON CTX_CONTACTS.contact_id = CTX_CONTACTS_NUMBERS.contact_id) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_CONTACTS_NUMBERS.via = code_lookup_3.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id  ORDER BY CTX_BASIC_INFO.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_contacts " + &
"as SELECT     TOP 100 PERCENT CTX_BASIC_INFO.ctx_id, app_facility.facility_name, V_ctx_contract_contacts.contact_id,   " + &
"                      V_ctx_contract_contacts.association, code_lookup.code AS contract_type_code, code_lookup.description AS contract_type_description,   " + &
"                      CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description AS contact_title,   " + &
"                      code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_des, app_facility.street,   " + &
"                      app_facility.street_2, app_facility.street_3, app_facility.city, app_facility.zip, app_facility.state, CTX_CONTACTS.custom_1,   " + &
"                      CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5,   " + &
"                      CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9,   " + &
"                      CTX_CONTACTS.custom_10, V_ctx_contract_contacts.owner, V_ctx_contract_contacts.access, NULL AS Phone_Type_code, NULL   " + &
"                      AS Phone_type_Description, V_ctx_contract_contacts.contact_phone AS phone, V_ctx_contract_contacts.ext,   " + &
"                      V_ctx_contract_contacts.contact_email, V_ctx_contract_contacts.contact_Fax, V_ctx_contract_contacts.notes  " + &
"FROM         CTX_CONTACTS INNER JOIN  " + &
"                      V_ctx_contract_contacts ON CTX_CONTACTS.contact_id = V_ctx_contract_contacts.contact_id INNER JOIN  " + &
"                      CTX_BASIC_INFO INNER JOIN  " + &
"                      app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON   " + &
"                      V_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id LEFT OUTER JOIN  " + &
"                      code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code LEFT OUTER JOIN  " + &
"                      code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code LEFT OUTER JOIN  " + &
"                      code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code  " + &
"where V_ctx_contract_contacts.ic_area='c'  " + &
"ORDER BY CTX_BASIC_INFO.ctx_id  " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_external' and type = 'V')  " + &
"  drop view v_ctx_contacts_external "

/*
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_external " + &
"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code aS contract_type_code, code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description as contact_title, code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_description, CTX_CONTACTS.street_1, CTX_CONTACTS.street_2, CTX_CONTACTS.street_3, CTX_CONTACTS.city, CTX_CONTACTS.zip, code_lookup_2.code AS state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code AS Phone_Type_code, code_lookup_3.description AS Phone_type_Description, '(' + LEFT( CTX_CONTACTS_NUMBERS.phone,3 ) + ')' + substring( CTX_CONTACTS_NUMBERS.phone, 4, 3) + '-' + RIGHT( CTX_CONTACTS_NUMBERS.phone, 4 ) AS phone , CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email FROM ((((((((CTX_BASIC_INFO INNER JOIN CTX_CONTRACT_CONTACTS ON CTX_BASIC_INFO.ctx_id = CTX_CONTRACT_CONTACTS.ctx_id) LEFT OUTER JOIN CTX_CONTACTS ON CTX_CONTRACT_CONTACTS.contact_id = CTX_CONTACTS.contact_id) LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_2 ON CTX_CONTACTS.state = code_lookup_2.lookup_code) LEFT OUTER JOIN CTX_CONTACTS_NUMBERS ON CTX_CONTACTS.contact_id = CTX_CONTACTS_NUMBERS.contact_id) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_CONTACTS_NUMBERS.via = code_lookup_3.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id GROUP BY CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code, code_lookup.description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, CTX_CONTACTS.contact_title, code_lookup_1.code, code_lookup_1.description, CTX_CONTACTS.street_1, CTX_CONTACTS.street_2, CTX_CONTACTS.street_3, CTX_CONTACTS.city, CTX_CONTACTS.zip, code_lookup_2.code, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code, code_lookup_3.description, code_lookup_4.description, CTX_CONTACTS_NUMBERS.phone, CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email, CTX_CONTRACT_CONTACTS.ic_area HAVING (((CTX_CONTRACT_CONTACTS.ic_area)='e')) ORDER BY CTX_BASIC_INFO.ctx_id "
*/

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"CREATE VIEW  v_ctx_contacts_external " + &
//"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code aS contract_type_code, code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description as contact_title, code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_description, app_facility.street, app_facility.street_2, app_facility.street_3, app_facility.city, app_facility.zip, app_facility.state AS state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code AS Phone_Type_code, code_lookup_3.description AS Phone_type_Description, CTX_CONTACTS_NUMBERS.phone AS phone , CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email FROM (((((((CTX_BASIC_INFO INNER JOIN CTX_CONTRACT_CONTACTS ON CTX_BASIC_INFO.ctx_id = CTX_CONTRACT_CONTACTS.ctx_id and CTX_CONTRACT_CONTACTS.ic_area='e') LEFT OUTER JOIN CTX_CONTACTS ON CTX_CONTRACT_CONTACTS.contact_id = CTX_CONTACTS.contact_id) LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code) LEFT OUTER JOIN CTX_CONTACTS_NUMBERS ON CTX_CONTACTS.contact_id = CTX_CONTACTS_NUMBERS.contact_id) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_CONTACTS_NUMBERS.via = code_lookup_3.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id  ORDER BY CTX_BASIC_INFO.ctx_id "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_external " + &
"as SELECT     TOP 100 PERCENT CTX_BASIC_INFO.ctx_id, app_facility.facility_name, code_lookup.code AS contract_type_code,   " + &
"                      code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name,   " + &
"                      CTX_CONTACTS.middle_name, code_lookup_4.description AS contact_title, code_lookup_1.code AS contract_department_code,   " + &
"                      code_lookup_1.description AS contract_department_des, app_facility.street, app_facility.street_2, app_facility.street_3,   " + &
"                      app_facility.city, app_facility.zip, app_facility.state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2,   " + &
"                      CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6,   " + &
"                      CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10,   " + &
"                      V_ctx_contract_contacts.access, V_ctx_contract_contacts.owner, V_ctx_contract_contacts.notes, V_ctx_contract_contacts.association,   " + &
"                      V_ctx_contract_contacts.ext, V_ctx_contract_contacts.contact_Fax, V_ctx_contract_contacts.contact_email,   " + &
"                      V_ctx_contract_contacts.contact_phone AS phone, NULL AS Phone_Type_code, NULL AS Phone_type_Description,   " + &
"                      V_ctx_contract_contacts.contact_id  " + &
"FROM         CTX_CONTACTS INNER JOIN  " + &
"                      V_ctx_contract_contacts ON CTX_CONTACTS.contact_id = V_ctx_contract_contacts.contact_id INNER JOIN  " + &
"                      CTX_BASIC_INFO INNER JOIN  " + &
"                      app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON   " + &
"                      V_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id LEFT OUTER JOIN  " + &
 "                     code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code LEFT OUTER JOIN  " + &
 "                     code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code LEFT OUTER JOIN  " + &
 "                     code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code  " + &
"where V_ctx_contract_contacts.ic_area='e'  " + &
"ORDER BY CTX_BASIC_INFO.ctx_id  " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_internal' and type = 'V')  " + &
"  drop view v_ctx_contacts_internal "

/*
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_internal " + &
"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code aS contract_type_code, code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description as contact_title, code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_description, CTX_CONTACTS.street_1, CTX_CONTACTS.street_2, CTX_CONTACTS.street_3, CTX_CONTACTS.city, CTX_CONTACTS.zip, code_lookup_2.code AS state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code AS Phone_Type_code, code_lookup_3.description AS Phone_type_Description, '(' + LEFT( CTX_CONTACTS_NUMBERS.phone,3 ) + ')' + substring( CTX_CONTACTS_NUMBERS.phone, 4, 3) + '-' + RIGHT( CTX_CONTACTS_NUMBERS.phone, 4 ) AS phone , CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email FROM ((((((((CTX_BASIC_INFO INNER JOIN CTX_CONTRACT_CONTACTS ON CTX_BASIC_INFO.ctx_id = CTX_CONTRACT_CONTACTS.ctx_id) LEFT OUTER JOIN CTX_CONTACTS ON CTX_CONTRACT_CONTACTS.contact_id = CTX_CONTACTS.contact_id) LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_2 ON CTX_CONTACTS.state = code_lookup_2.lookup_code) LEFT OUTER JOIN CTX_CONTACTS_NUMBERS ON CTX_CONTACTS.contact_id = CTX_CONTACTS_NUMBERS.contact_id) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_CONTACTS_NUMBERS.via = code_lookup_3.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id GROUP BY CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code, code_lookup.description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, CTX_CONTACTS.contact_title, code_lookup_1.code, code_lookup_1.description, CTX_CONTACTS.street_1, CTX_CONTACTS.street_2, CTX_CONTACTS.street_3, CTX_CONTACTS.city, CTX_CONTACTS.zip, code_lookup_2.code, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code, code_lookup_3.description, code_lookup_4.description, CTX_CONTACTS_NUMBERS.phone, CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email, CTX_CONTRACT_CONTACTS.ic_area HAVING (((CTX_CONTRACT_CONTACTS.ic_area)='i')) ORDER BY CTX_BASIC_INFO.ctx_id "
*/

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"CREATE VIEW  v_ctx_contacts_internal " + &
//"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name, CTX_CONTRACT_CONTACTS.contact_id, CTX_CONTRACT_CONTACTS.association, code_lookup.code aS contract_type_code, code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name, CTX_CONTACTS.middle_name, code_lookup_4.description as contact_title, code_lookup_1.code AS contract_department_code, code_lookup_1.description AS contract_department_description, app_facility.street, app_facility.street_2, app_facility.street_3, app_facility.city, app_facility.zip, app_facility.state AS state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2, CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6, CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10, CTX_CONTRACT_CONTACTS.owner, CTX_CONTRACT_CONTACTS.access, code_lookup_3.code AS Phone_Type_code, code_lookup_3.description AS Phone_type_Description, CTX_CONTACTS_NUMBERS.phone AS phone , CTX_CONTACTS_NUMBERS.ext, CTX_CONTACTS_NUMBERS.contact_email FROM (((((((CTX_BASIC_INFO INNER JOIN CTX_CONTRACT_CONTACTS ON CTX_BASIC_INFO.ctx_id = CTX_CONTRACT_CONTACTS.ctx_id and CTX_CONTRACT_CONTACTS.ic_area='i') LEFT OUTER JOIN CTX_CONTACTS ON CTX_CONTRACT_CONTACTS.contact_id = CTX_CONTACTS.contact_id) LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code) LEFT OUTER JOIN CTX_CONTACTS_NUMBERS ON CTX_CONTACTS.contact_id = CTX_CONTACTS_NUMBERS.contact_id) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_CONTACTS_NUMBERS.via = code_lookup_3.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ORDER BY CTX_BASIC_INFO.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_internal " + &
"as SELECT     TOP 100 PERCENT CTX_BASIC_INFO.ctx_id, app_facility.facility_name, code_lookup.code AS contract_type_code,  " + &
"                      code_lookup.description AS contract_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name,  " + &
"                      CTX_CONTACTS.middle_name, code_lookup_4.description AS contact_title, code_lookup_1.code AS contract_department_code,  " + &
"                      code_lookup_1.description AS contract_department_des, app_facility.street, app_facility.street_2, app_facility.street_3,  " + &
"                      app_facility.city, app_facility.zip, app_facility.state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2,  " + &
"                      CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6,  " + &
"                      CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10,  " + &
"                      V_ctx_contract_contacts.access, V_ctx_contract_contacts.owner, V_ctx_contract_contacts.notes, V_ctx_contract_contacts.association,  " + &
"                      V_ctx_contract_contacts.ext, V_ctx_contract_contacts.contact_Fax, V_ctx_contract_contacts.contact_email,  " + &
"                      V_ctx_contract_contacts.contact_phone AS phone, NULL AS Phone_Type_code, NULL AS Phone_type_Description,  " + &
"                      V_ctx_contract_contacts.contact_id " + &
"FROM         CTX_CONTACTS INNER JOIN " + &
"                      V_ctx_contract_contacts ON CTX_CONTACTS.contact_id = V_ctx_contract_contacts.contact_id INNER JOIN " + &
"                      CTX_BASIC_INFO INNER JOIN " + &
"                      app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON  " + &
"                      V_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id LEFT OUTER JOIN " + &
"                      code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code " + &
"where V_ctx_contract_contacts.ic_area='i'  " + &
"ORDER BY CTX_BASIC_INFO.ctx_id " 

//$<Modify> 2008-04-25 By: Nova end

//---------------------------- APPEON END ----------------------------

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_custom' and type = 'V')  " + &
"  drop view v_ctx_custom "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_custom " + &
"AS SELECT  top 100 percent  ctx_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6,        custom_7, custom_8, custom_9, custom_10, custom_11, custom_12, custom_13,        custom_14, custom_15, custom_16, custom_17, custom_18, custom_19, custom_20,        custom_date1, custom_date2, custom_date3, custom_date4, custom_date5,        custom_date6, custom_date7, custom_date8, custom_date9, custom_date10,        custom_date11, custom_date12, custom_date13, custom_date14, custom_date15,        custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7,        custom_n8, custom_n9, custom_n10 FROM CTX_BASIC_INFO ORDER BY ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_fee_schedule' and type = 'V')  " + &
"  drop view v_ctx_fee_schedule "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_fee_schedule " + &
"as select  top 100 percent   " + &
"	code_lookup.description as carve_out_type,  " + &
"	code_lookup_1.description as sched_type,  " + &
"	ctx_fee_sched_hdr.fee_sched_id,  " + &
"	ctx_fee_sched_hdr.ctx_id,  " + &
"	ctx_fee_sched_hdr.custom_1,  " + &
"	ctx_fee_sched_hdr.custom_2,  " + &
"	ctx_fee_sched_hdr.custom_3,  " + &
"	ctx_fee_sched_hdr.custom_4,  " + &
"	ctx_fee_sched_hdr.custom_5,  " + &
"	ctx_fee_sched_hdr.notes, " + &
"	ctx_fee_sched_hdr.inserted_by_user, " + &
"	ctx_fee_sched_hdr.inserted_at_date_time, " + &
"	ctx_fee_sched_hdr.updated_by_user, " + &
"	ctx_fee_sched_hdr.updated_at_date_time,  " + &
"	ctx_fee_sched_hdr.record_id " + &
"from(ctx_fee_sched_hdr  " + &
"left outer join code_lookup on ctx_fee_sched_hdr.carve_out_type = code_lookup.lookup_code)  " + &
"left outer join code_lookup as code_lookup_1 on ctx_fee_sched_hdr.sched_type = code_lookup_1.lookup_code  " + &
"order by ctx_fee_sched_hdr.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_fee_schedule_nm' and type = 'V')  " + &
"  drop view v_ctx_fee_schedule_nm "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_fee_schedule_nm " + &
"as " + &
"SELECT  top 100 percent   " + &
"	ctx_fee_sched_nm.ctx_id,  " + &
"	ctx_fee_sched_nm.fee_sched_nm_id,  " + &
"	code_lookup.code AS category_code,  " + &
"	code_lookup.description AS category_description, " + &
" 	code_lookup_1.code AS system_item_code,  " + &
"	code_lookup_1.description AS system_item_Description, " + &
" 	ctx_fee_sched_nm.description,  " + &
"	ctx_fee_sched_nm.fee, " + &
"	code_lookup_2.code AS item_status_code,  " + &
"	ctx_fee_sched_nm.start_date, " + &
" 	ctx_fee_sched_nm.end_date,  " + &
"	ctx_fee_sched_nm.service_name,  " + &
"	ctx_fee_sched_nm.custom_int1, " + &
" 	ctx_fee_sched_nm.custom_int2,  " + &
"	ctx_fee_sched_nm.custom_fee1,  " + &
"	ctx_fee_sched_nm.custom_fee2, " + &
" 	ctx_fee_sched_nm.custom_fee3,  " + &
"	ctx_fee_sched_nm.custom_text1,  " + &
"	ctx_fee_sched_nm.custom_text2, " + &
" 	ctx_fee_sched_nm.custom_text3,  " + &
"	ctx_fee_sched_nm.notes,  " + &
"	ctx_fee_sched_nm.record_id, " + &
"	ctx_fee_sched_nm.custom_text4, " + &
"	ctx_fee_sched_nm.custom_text5, " + &
"	ctx_fee_sched_nm.custom_text6, " + &
"	ctx_fee_sched_nm.custom_text7, " + &
"	ctx_fee_sched_nm.custom_text8, " + &
"	ctx_fee_sched_nm.custom_n1, " + &
"	ctx_fee_sched_nm.custom_n2, " + &
"	ctx_fee_sched_nm.custom_n3, " + &
"	ctx_fee_sched_nm.custom_n4, " + &
"	ctx_fee_sched_nm.custom_n5, " + &
"	code_lookup_3.code AS billing_Cycle,  " + &
"	code_lookup_3.description AS billing_cycle_description " + &
"FROM " + &
"(((ctx_fee_sched_nm LEFT OUTER JOIN " + &
"code_lookup ON ctx_fee_sched_nm.category = code_lookup.lookup_code) LEFT OUTER JOIN " + &
"code_lookup AS code_lookup_1 ON ctx_fee_sched_nm.service_item = code_lookup_1.lookup_code) LEFT OUTER JOIN " + &
"code_lookup AS code_lookup_2 ON ctx_fee_sched_nm.item_status = code_lookup_2.lookup_code) LEFT OUTER JOIN " + &
"code_lookup AS code_lookup_3 ON ctx_fee_sched_nm.billing_cycle = code_lookup_3.lookup_code " + &
"ORDER BY ctx_fee_sched_nm.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_feee_schedule_codes' and type = 'V')  " + &
"  drop view v_ctx_feee_schedule_codes "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_feee_schedule_codes " + &
"as SELECT  top 100 percent   " + &
"	ctx_fee_sched_hdr.ctx_id,  " + &
"	ctx_fee_sched_data.code,  " + &
"	code_lookup.description AS carve_out_type_description,  " + &
"	code_lookup_1.description AS sched_type_description,  " + &
"	code_lookup_2.description AS location_description,  " + &
"	code_lookup_2.code AS location_code,  " + &
"	code_lookup_3.description AS status,  " + &
"	ctx_fee_sched_data.fee,  " + &
"	ctx_fee_sched_data.effective_date,  " + &
"	ctx_fee_sched_data.expiration_date,  " + &
"	ctx_fee_sched_data.office_fee,  " + &
"	ctx_fee_sched_data.facility_fee,  " + &
"	ctx_fee_sched_data.custom_fee,  " + &
"	ctx_fee_sched_data.precert,  " + &
"	ctx_fee_sched_data.preauth,  " + &
"	ctx_fee_sched_data.base_price,  " + &
"	ctx_fee_sched_data.phys_fee,  " + &
"	ctx_fee_sched_data.custom_1,  " + &
"	ctx_fee_sched_data.custom_2,  " + &
"	ctx_fee_sched_data.custom_3,  " + &
"	ctx_fee_sched_data.custom_4,  " + &
"	ctx_fee_sched_data.custom_5,  " + &
"	ctx_fee_sched_data.fee_basis,  " + &
"	ctx_fee_sched_data.inserted_by_user,  " + &
"	ctx_fee_sched_data.inserted_at_date_time,  " + &
"	ctx_fee_sched_data.updated_by_user,  " + &
"	ctx_fee_sched_data.updated_at_date_time  " + &
"FROM (ctx_fee_sched_data  " + &
"INNER JOIN ((((ctx_fee_sched_hdr  " + &
"LEFT OUTER JOIN code_lookup ON ctx_fee_sched_hdr.carve_out_type = code_lookup.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_fee_sched_hdr.sched_type = code_lookup_1.lookup_code)  " + &
"INNER JOIN ctx_fee_sched_locations ON ctx_fee_sched_hdr.fee_sched_id = ctx_fee_sched_locations.fee_sched_id)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_fee_sched_locations.location = code_lookup_2.lookup_code) ON ctx_fee_sched_data.fee_sched_location_id = ctx_fee_sched_locations.fee_sched_location_id)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_fee_sched_data.status = code_lookup_3.lookup_code  " + &
"GROUP BY ctx_fee_sched_hdr.ctx_id,  " + &
"	ctx_fee_sched_data.code,  " + &
"	code_lookup.description,  " + &
"	code_lookup_1.description, code_lookup_2.description,  " + &
"	code_lookup_2.code,  " + &
"	code_lookup_3.description,  " + &
"	ctx_fee_sched_data.fee,  " + &
"	ctx_fee_sched_data.effective_date,  " + &
"	ctx_fee_sched_data.expiration_date,  " + &
"	ctx_fee_sched_data.office_fee,  " + &
"	ctx_fee_sched_data.facility_fee,  " + &
"	ctx_fee_sched_data.custom_fee,  " + &
"	ctx_fee_sched_data.precert,  " + &
"	ctx_fee_sched_data.preauth,  " + &
"	ctx_fee_sched_data.base_price,  " + &
"	ctx_fee_sched_data.phys_fee,  " + &
"	ctx_fee_sched_data.custom_1,  " + &
"	ctx_fee_sched_data.custom_2,  " + &
"	ctx_fee_sched_data.custom_3,  " + &
"	ctx_fee_sched_data.custom_4,  " + &
"	ctx_fee_sched_data.custom_5,  " + &
"	ctx_fee_sched_data.fee_basis,  " + &
"	ctx_fee_sched_data.inserted_by_user,  " + &
"	ctx_fee_sched_data.inserted_at_date_time,  " + &
"	ctx_fee_sched_data.updated_by_user,  " + &
"	ctx_fee_sched_data.updated_at_date_time  " + &
"HAVING (((ctx_fee_sched_data.fee)<>0))  " + &
"ORDER BY ctx_fee_sched_hdr.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_feee_schedule_locations' and type = 'V')  " + &
"  drop view v_ctx_feee_schedule_locations "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_feee_schedule_locations " + &
"as SELECT  top 100 percent   " + &
"	ctx_fee_sched_hdr.fee_sched_id, " + &
"	ctx_fee_sched_hdr.ctx_id,  " + &
"	code_lookup.description AS carve_out_type,  " + &
"	code_lookup_1.description AS sched_type,  " + &
"	code_lookup_2.description AS location_description,  " + &
"	code_lookup_2.code AS location_code,  " + &
"	ctx_fee_sched_hdr.custom_1, " + &
"	ctx_fee_sched_hdr.custom_2, " + &
"	ctx_fee_sched_hdr.custom_3, " + &
"	ctx_fee_sched_hdr.custom_4, " + &
"	ctx_fee_sched_hdr.custom_5, " + &
"	ctx_fee_sched_hdr.notes, " + &
"	ctx_fee_sched_hdr.inserted_by_user, " + &
"	ctx_fee_sched_hdr.inserted_at_date_time, " + &
"	ctx_fee_sched_hdr.updated_by_user, " + &
"	ctx_fee_sched_hdr.updated_at_date_time, " + &
"	ctx_fee_sched_hdr.record_id, " + &
"	ctx_fee_sched_locations.rate,  " + &
"	ctx_fee_sched_locations.fee_bonus,  " + &
"	ctx_item.item_name AS fee_basis  " + &
"FROM ((((ctx_fee_sched_hdr  " + &
"LEFT OUTER JOIN code_lookup ON ctx_fee_sched_hdr.carve_out_type = code_lookup.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_fee_sched_hdr.sched_type = code_lookup_1.lookup_code)  " + &
"INNER JOIN ctx_fee_sched_locations ON ctx_fee_sched_hdr.fee_sched_id = ctx_fee_sched_locations.fee_sched_id)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_fee_sched_locations.location = code_lookup_2.lookup_code)  " + &
"LEFT OUTER JOIN ctx_item ON ctx_fee_sched_locations.fee_bonus = ctx_item.item_id  " + &
"ORDER BY ctx_fee_sched_hdr.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_feee_schedule_practitioners' and type = 'V')  " + &
"  drop view v_ctx_feee_schedule_practitioners "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_feee_schedule_practitioners " + &
"as SELECT  top 100 percent   " + &
"	ctx_fee_sched_hdr.ctx_id,  " + &
"	code_lookup.description AS carve_out_type,  " + &
"	code_lookup_1.description AS sched_type,  " + &
"	pd_basic.last_name,  " + &
"	pd_basic.first_name,  " + &
"	pd_basic.prac_id  " + &
"FROM (((ctx_fee_sched_hdr  " + &
"LEFT OUTER JOIN code_lookup ON ctx_fee_sched_hdr.carve_out_type = code_lookup.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_fee_sched_hdr.sched_type = code_lookup_1.lookup_code)  " + &
"INNER JOIN ctx_fee_sched_pracs ON ctx_fee_sched_hdr.fee_sched_id = ctx_fee_sched_pracs.fee_sched_id)  " + &
"INNER JOIN pd_basic ON ctx_fee_sched_pracs.practitioner_id = pd_basic.prac_id  " + &
"ORDER BY ctx_fee_sched_hdr.fee_sched_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_groups' and type = 'V')  " + &
"  drop view v_ctx_groups "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_groups " + &
"as select  top 100 percent   " + &
"	ctx_loc.ctx_id,  " + &
"	ctx_loc.parent_comp_id,  " + &
"	app_facility.facility_name,  " + &
"	group_multi_loc.rec_id,  " + &
"	group_multi_loc.gp_name,  " + &
"	group_multi_loc.street1,  " + &
"	group_multi_loc.city,  " + &
"	group_multi_loc.state,  " + &
"	group_multi_loc.phone,  " + &
"	group_multi_loc.zip,  " + &
"	group_multi_loc.contact_name " + &
"from((group_multi_loc join ctx_loc on group_multi_loc.rec_id = ctx_loc.parent_comp_id)  " + &
"join CTX_BASIC_INFO on ctx_loc.ctx_id = CTX_BASIC_INFO.ctx_id)  " + &
"join app_facility on CTX_BASIC_INFO.app_facility = app_facility.facility_id  " + &
"group by ctx_loc.ctx_id, " + &
"	ctx_loc.parent_comp_id, " + &
"	app_facility.facility_name, " + &
"	group_multi_loc.rec_id, " + &
"	group_multi_loc.gp_name, " + &
"	group_multi_loc.street1, " + &
"	group_multi_loc.city, " + &
"	group_multi_loc.state, " + &
"	group_multi_loc.phone, " + &
"	group_multi_loc.zip, " + &
"	group_multi_loc.contact_name  " + &
"order by ctx_loc.ctx_id,ctx_loc.parent_comp_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_groups_locations' and type = 'V')  " + &
"  drop view v_ctx_groups_locations "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_groups_locations " + &
"as SELECT  top 100 percent   " + &
"	ctx_loc.ctx_id,  " + &
"	app_facility.facility_name,  " + &
"	group_multi_loc.gp_name,  " + &
"	ctx_loc.parent_comp_id AS grp_id,  " + &
"	ctx_loc.loc_id,  " + &
"	group_practice.practice_type,  " + &
"	group_practice.active_status,  " + &
"	group_practice.street AS location_name,  " + &
"	group_practice.street_2,  " + &
"	group_practice.city,  " + &
"	code_lookup_1.code AS state,  " + &
"	code_lookup.description AS country,  " + &
"	group_practice.pager_number,  " + &
"	group_practice.phone,  " + &
"	group_practice.ext,  " + &
"	group_practice.fax,  " + &
"	group_practice.zip,  " + &
"	group_practice.contact_person,  " + &
"	group_practice.e_mail_address,  " + &
"	group_practice.web_address  " + &
"FROM (((((group_multi_loc  " + &
"INNER JOIN ctx_loc ON group_multi_loc.rec_id = ctx_loc.parent_comp_id)  " + &
"INNER JOIN ctx_basic_info ON ctx_loc.ctx_id = ctx_basic_info.ctx_id)  " + &
"INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id)  " + &
"INNER JOIN group_practice ON ctx_loc.loc_id = group_practice.rec_id)  " + &
"LEFT OUTER JOIN code_lookup ON group_practice.country = code_lookup.lookup_code)  " + &
"LEFT OUTER JOIN code_lookup AS code_lookup_1 ON group_practice.state = code_lookup_1.lookup_code  " + &
"GROUP BY ctx_loc.ctx_id,  " + &
"	app_facility.facility_name,  " + &
"	group_multi_loc.gp_name,  " + &
"	ctx_loc.parent_comp_id,  " + &
"	ctx_loc.loc_id,  " + &
"	group_practice.practice_type,  " + &
"	group_practice.active_status,  " + &
"	group_practice.street,  " + &
"	group_practice.street_2,  " + &
"	group_practice.city,  " + &
"	code_lookup_1.code,  " + &
"	code_lookup.description,  " + &
"	group_practice.pager_number,  " + &
"	group_practice.phone,  " + &
"	group_practice.ext,  " + &
"	group_practice.fax,  " + &
"	group_practice.zip,  " + &
"	group_practice.contact_person,  " + &
"	group_practice.e_mail_address,  " + &
"	group_practice.web_address  " + &
"ORDER BY ctx_loc.ctx_id,ctx_loc.parent_comp_id,ctx_loc.loc_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_image' and type = 'V')  " + &
"  drop view v_ctx_image "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_image " + &
"AS SELECT  top 100 percent   " + &
"	ctx_images.ctx_id,  " + &
"	ctx_images.file_name,  " + &
"	code_lookup.description AS Image_Type,  " + &
"	code_lookup_1.description AS media_type,  " + &
"	ctx_images.page_description,  " + &
"	ctx_image.image_version,  " + &
"	ctx_image.inserted_by_user,  " + &
"	ctx_image.updated_by_user,  " + &
"	ctx_image.inserted_at_date_time,  " + &
"	ctx_image.updated_at_date_time " + &
"FROM ctx_image  " + &
"INNER JOIN ctx_images ON ctx_image.ctx_id = ctx_images.ctx_id AND ctx_image.image_id = ctx_images.image_id  " + &
"LEFT OUTER JOIN code_lookup ON ctx_images.image_type = code_lookup.lookup_code  " + &
"LEFT OUTER JOIN code_lookup code_lookup_1 ON ctx_images.media_type = code_lookup_1.lookup_code " + &
"ORDER BY ctx_images.image_id,ctx_images.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_locations_pracs' and type = 'V')  " + &
"  drop view v_ctx_locations_pracs "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_locations_pracs " + &
"as SELECT  top 100 percent  CTX_LOC.ctx_id, CTX_LOC.parent_comp_id AS grp_id, group_practice.street AS locatioin_name, CTX_LOC.loc_id, pd_basic.last_name, pd_basic.first_name, pd_basic.prac_id FROM ((CTX_LOC INNER JOIN CTX_LOCATION_PRACS ON (CTX_LOC.ctx_id = CTX_LOCATION_PRACS.ctx_id) AND (CTX_LOC.parent_comp_id = CTX_LOCATION_PRACS.parent_comp_id) AND (CTX_LOC.loc_id = CTX_LOCATION_PRACS.loc_id)) INNER JOIN pd_basic ON CTX_LOCATION_PRACS.prac_id = pd_basic.prac_id) INNER JOIN group_practice ON CTX_LOCATION_PRACS.loc_id = group_practice.rec_id GROUP BY CTX_LOC.ctx_id, CTX_LOC.parent_comp_id, group_practice.street, CTX_LOC.loc_id, pd_basic.last_name, pd_basic.first_name, pd_basic.prac_id HAVING (((CTX_LOC.loc_id)<>0)) ORDER BY CTX_LOC.ctx_id, CTX_LOC.parent_comp_id,CTX_LOC.loc_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_locations_speciality' and type = 'V')  " + &
"  drop view v_ctx_locations_speciality "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_locations_speciality " + &
"as SELECT  top 100 percent  CTX_LOC.ctx_id, CTX_LOC.parent_comp_id AS grp_id, group_practice.street AS location_name, CTX_LOC.loc_id, code_lookup.description AS specialty_description, code_lookup.code AS speciality_code FROM ((CTX_LOC INNER JOIN CTX_LOCATION_SPECIALTY ON (CTX_LOC.loc_id = CTX_LOCATION_SPECIALTY.loc_id) AND (CTX_LOC.parent_comp_id = CTX_LOCATION_SPECIALTY.parent_comp_id) AND (CTX_LOC.ctx_id = CTX_LOCATION_SPECIALTY.ctx_id)) INNER JOIN code_lookup ON CTX_LOCATION_SPECIALTY.Prac_specialty = code_lookup.lookup_code) INNER JOIN group_practice ON CTX_LOCATION_SPECIALTY.loc_id = group_practice.rec_id GROUP BY CTX_LOC.ctx_id, CTX_LOC.parent_comp_id, group_practice.street, CTX_LOC.loc_id, code_lookup.description, code_lookup.code HAVING (((CTX_LOC.loc_id)<>0)) ORDER BY CTX_LOC.ctx_id, CTX_LOC.parent_comp_id,CTX_LOC.loc_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_organizations' and type = 'V')  " + &
"  drop view v_ctx_organizations "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_organizations " + &
"as SELECT  top 100 percent  CTX_ORGS_CONTACT.ctx_id, CTX_ORGS.org_name, code_lookup.code AS org_type_code, code_lookup.description AS org_type_description, CTX_ORGS.status, CTX_ORGS.street_1, CTX_ORGS.street_2, CTX_ORGS.street_3, CTX_ORGS.city, code_lookup_1.code AS state, CTX_ORGS.zip, CTX_ORGS_CONTACT.notes, CTX_ORGS.drections, CTX_ORGS.record_id, CTX_ORG_CONTACT.contact_name, CTX_ORG_CONTACT.department, code_lookup_2.code AS phone_type_code, CTX_ORG_CONTACT.phone FROM ((((CTX_ORGS LEFT OUTER JOIN code_lookup ON CTX_ORGS.org_type = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_ORGS.state = code_lookup_1.lookup_code) INNER JOIN CTX_ORGS_CONTACT ON CTX_ORGS.org_id = CTX_ORGS_CONTACT.org_id) LEFT OUTER JOIN CTX_ORG_CONTACT ON CTX_ORGS.org_id = CTX_ORG_CONTACT.org_id) LEFT OUTER JOIN code_lookup AS code_lookup_2 ON CTX_ORG_CONTACT.via = code_lookup_2.lookup_code GROUP BY CTX_ORGS_CONTACT.ctx_id, CTX_ORGS.org_name, code_lookup.code, code_lookup.description, CTX_ORGS.status, CTX_ORGS.street_1, CTX_ORGS.street_2, CTX_ORGS.street_3, CTX_ORGS.city, code_lookup_1.code, CTX_ORGS.zip, CTX_ORGS_CONTACT.notes, CTX_ORGS.drections, CTX_ORGS.record_id, CTX_ORG_CONTACT.contact_name, CTX_ORG_CONTACT.department, code_lookup_2.code, CTX_ORG_CONTACT.phone ORDER BY CTX_ORGS_CONTACT.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_requirement' and type = 'V')  " + &
"  drop view v_ctx_requirement "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_requirement " + &
"AS SELECT  top 100 percent  CTX_REQ_PROFILE_HDR_1.ctx_id,	 " + &
"CTX_RQMNT_CATEGORY.category_name,	 " + &
"CTX_REQ_PROFILE.rqmnt_name,	 " + &
"CTX_REQ_PROFILE.rqmnt_description,	 " + &
"CTX_REQ_TMPLT_ELEMENT.element_name,	 " + &
"DataValue = (	 " + &
"				case ctx_req_tmplt_element.value_type 	 " + &
"				when 1 then convert(varchar,CTX_ELEMENTS.date_value)	 " + & 
"				when 2 then CTX_ELEMENTS.field_value 	 " + &
"				when 3 then CTX_ELEMENTS.char_value 	 " + &
"				when 4 then convert(varchar,CTX_ELEMENTS.integer_value) 	 " + &
"				when 5 then CTX_ELEMENTS.field_value end	 " + &
"				), " + &
"CTX_ELEMENTS.clause  " + &
"FROM (CTX_RQMNT_CATEGORY  " + &
"INNER JOIN ((CTX_REQ_PROFILE INNER JOIN CTX_REQ_PROFILE_HDR AS CTX_REQ_PROFILE_HDR_1 ON CTX_REQ_PROFILE.ctx_req_profile_id = CTX_REQ_PROFILE_HDR_1.ctx_req_profile_id)  " + &
"INNER JOIN CTX_REQ_TMPLT_ELEMENT ON  CTX_REQ_PROFILE.ctx_req_profile_id = CTX_REQ_TMPLT_ELEMENT.ctx_req_profile_id)  " + &
"ON (CTX_RQMNT_CATEGORY.ctx_req_profile_id = CTX_REQ_TMPLT_ELEMENT.ctx_req_profile_id) AND (CTX_RQMNT_CATEGORY.ctx_rqmnt_category_id = CTX_REQ_TMPLT_ELEMENT.ctx_rqmnt_category_id))  " + &
"INNER JOIN CTX_ELEMENTS ON (CTX_ELEMENTS.ctx_req_tmplt_element_id = CTX_REQ_TMPLT_ELEMENT.ctx_req_tmplt_element_id) AND (CTX_REQ_PROFILE_HDR_1.ctx_id = CTX_ELEMENTS.CTX_REQ_PROFILE_HDR_id)  " + &
"ORDER BY CTX_REQ_PROFILE_HDR_1.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_dea' and type = 'V')  " + &
"  drop view v_dea "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_dea " + &
"  as select  top 100 percent  pd_dea_state_csr.rec_id, " + &
"    pd_dea_state_csr.prac_id, " + &
"    pd_dea_state_csr.cat_1, " + &
"    pd_dea_state_csr.cat_2, " + &
"    pd_dea_state_csr.cat_3, " + &
"    pd_dea_state_csr.cat_4, " + &
"    pd_dea_state_csr.cat_5, " + &
"    pd_dea_state_csr.cat_6, " + &
"    pd_dea_state_csr.cat_7, " + &
"    pd_dea_state_csr.cat_8, " + &
"    pd_dea_state_csr.cat_9, " + &
"    pd_dea_state_csr.cat_10, " + &
"    code_lookup.code as state_code, " + &
"    code_lookup.description as state_desc, " + &
"    pd_dea_state_csr.prev_exp_date, " + &
"    pd_dea_state_csr.expiration_date, " + &
"    pd_dea_state_csr.cust_1, " + &
"    pd_dea_state_csr.cust_2, " + &
"    pd_dea_state_csr.cust_3, " + &
"    pd_dea_state_csr.cust_4, " + &
"    pd_dea_state_csr.cust_5, " + &
"    pd_dea_state_csr.cust_6, " + &
"    pd_dea_state_csr.cust_7, " + &
"    pd_dea_state_csr.cust_8, " + &
"    pd_dea_state_csr.cust_9, " + &
"    pd_dea_state_csr.cust_10, " + &
"    pd_dea_state_csr.cust_d1, " + &
"    pd_dea_state_csr.cust_d2, " + &
"    pd_dea_state_csr.license_number, " + &
"    pd_dea_state_csr.active_status from " + &
"    pd_dea_state_csr left outer join " + &
"    code_lookup on " + &
"    pd_dea_state_csr.state = code_lookup.lookup_code " + &
"order by pd_dea_state_csr.rec_id,pd_dea_state_csr.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_dea_state_csr' and type = 'V')  " + &
"  drop view v_dea_state_csr "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_dea_state_csr " + &
"AS " + &
"SELECT  top 100 percent      pd_dea_state_csr.rec_id, pd_dea_state_csr.prac_id, pd_dea_state_csr.cat_1, pd_dea_state_csr.cat_2, pd_dea_state_csr.cat_3,  " + &
"                      pd_dea_state_csr.cat_4, pd_dea_state_csr.cat_5, pd_dea_state_csr.cat_6, pd_dea_state_csr.cat_7, pd_dea_state_csr.cat_8,  " + &
"                      pd_dea_state_csr.cat_9, pd_dea_state_csr.cat_10, code_lookup.code, code_lookup.description,  " + &
"                      pd_dea_state_csr.prev_exp_date, pd_dea_state_csr.expiration_date, pd_dea_state_csr.cust_1, pd_dea_state_csr.cust_2,  " + &
"                      pd_dea_state_csr.cust_3, pd_dea_state_csr.cust_4, pd_dea_state_csr.cust_5, pd_dea_state_csr.license_number,  " + &
"                      pd_dea_state_csr.active_status, pd_dea_state_csr.cust_6, pd_dea_state_csr.cust_7, pd_dea_state_csr.cust_8,  " + &
"                      pd_dea_state_csr.cust_9, pd_dea_state_csr.cust_10, pd_dea_state_csr.cust_d1, pd_dea_state_csr.cust_d2,  " + &
"                      pd_dea_state_csr.issue_date, code_lookup.code AS state_code, code_lookup.description AS state_description " + &
"FROM         pd_dea_state_csr LEFT OUTER JOIN " + &
"                      code_lookup ON pd_dea_state_csr.state = code_lookup.lookup_code " + &
"ORDER BY pd_dea_state_csr.rec_id, pd_dea_state_csr.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_dept' and type = 'V')  " + &
"  drop view v_dept "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_dept " + &
"  as select distinct  top 100 percent  pd_affil_dept.rec_id, " + &
"    pd_affil_dept.prac_id, " + &
"    pd_affil_dept.facility_id, " + &
"    facility.facility_name as facility_name, " + &
"    code_lookup_a.code as dept_code, " + &
"    code_lookup_a.description as dept_name, " + &
"    code_lookup_b.code as section_code, " + &
"    code_lookup_b.description as section_name, " + &
"    code_lookup_d.code as division_code, " + &
"    code_lookup_d.description as division_name, " + &
"    pd_affil_dept.primary_dept, " + &
"    pd_affil_dept.from_date, " + &
"    pd_affil_dept.to_date, " + &
"    pd_affil_dept.record_status, " + &
"    pd_affil_dept.active_status  " + &
"from pd_affil_dept left outer join code_lookup as code_lookup_b on (pd_affil_dept.section = code_lookup_b.lookup_code) left outer join code_lookup as code_lookup_c on (pd_affil_dept.memberships = code_lookup_c.lookup_code) left outer join code_lookup as code_lookup_d on (pd_affil_dept.rank = code_lookup_d.lookup_code) left outer join facility on (pd_affil_dept.facility_id = facility.facility_id) left outer join code_lookup as code_lookup_a on (pd_affil_dept.department = code_lookup_a.lookup_code) " + &
"order by pd_affil_dept.rec_id,pd_affil_dept.prac_id,pd_affil_dept.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ecfmg' and type = 'V')  " + &
"  drop view v_ecfmg "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ecfmg " + &
"AS " + &
"SELECT  top 100 percent      prac_id, date_issued, date_expires, ecfmg_number, cust_1, cust_2, cust_4, cust_3, cust_5, cust_6, cust_7, cust_8, cust_9, cust_10, cust_d1,  " + &
"                      cust_d2 " + &
"FROM         pd_ecfmg " + &
"ORDER BY rec_id,prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_education' and type = 'V')  " + &
"  drop view v_education "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_education " + &
"as select  top 100 percent  pd_education.rec_id,pd_education.prac_id,ed_type_code=code_lookup_a.code,ed_type_description=code_lookup_a.description,degree_code=code_lookup_b.code,degree_description=code_lookup_b.description,pd_education.major,pd_education.month_from,pd_education.year_from,pd_education.month_thru,pd_education.year_thru,school_code=address_lookup.code,school_name=address_lookup.entity_name,pd_education.cust_1,pd_education.cust_2,pd_education.cust_3,pd_education.cust_4,pd_education.cust_5,pd_education.cust_7,pd_education.cust_8,pd_education.cust_9,pd_education.cust_10,pd_education.cust_d1, pd_education.cust_d2, pd_education.start_date,pd_education.end_date, pd_education.caqh_grad_type " + &
" from(((pd_education left outer join code_lookup as code_lookup_a on pd_education.education_type = code_lookup_a.lookup_code) left outer join code_lookup as code_lookup_b on pd_education.degree = code_lookup_b.lookup_code) left outer join address_lookup on pd_education.school_code = address_lookup.lookup_code) order by pd_education.rec_id,pd_education.prac_id "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_fullbasic' and type = 'V')  " + &
"  drop view v_fullbasic "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_fullbasic " + &
"AS " + &
"SELECT DISTINCT  top 100 percent  " + &
"                      pd_basic.prac_id, pd_basic.first_name, pd_basic.last_name, pd_basic.middle_name, pd_basic.date_of_birth, pd_basic.ssn,  " + &
"                      pd_basic.maiden_other_name, pd_basic.pob_city, pd_basic.spouse_name, pd_basic.phone, pd_basic.answering_service,  " + &
"                      pd_basic.beeper_1, pd_basic.beeper_2, pd_basic.personal_pager, pd_basic.hospital_pager, pd_basic.car_phone_1,  " + &
"                      pd_basic.car_phone_2, pd_basic.branch, pd_basic.rank, pd_basic.service_number, pd_basic.service_date_from,  " + &
"                      pd_basic.service_date_to, pd_basic.cust_1, pd_basic.cust_2, pd_basic.cust_3, pd_basic.cust_5, pd_basic.cust_6,  " + &
"                      pd_basic.cust_7, pd_basic.cust_8, pd_basic.cust_9, pd_basic.cust_10, pd_basic.full_name, pd_basic.provider_id,  " + &
"                      pd_basic.cust_4, code_lookup_a.code AS title_a_code, code_lookup_a.description AS title_a_description,  " + &
"                      code_lookup_b.code AS name_suffic_b_code, code_lookup_b.description AS name_suffic_b_description, code_lookup_e.code AS prac_cat_e_code,  " + &
"                      code_lookup_e.description AS prac_Cat_e_description, code_lookup_g.code AS county_g_code, code_lookup_g.description AS county_g_description,  " + &
"                      code_lookup_c.code AS prof_suffix_c_code, code_lookup_c.description AS prof_suffix_c_description, code_lookup_f.code AS state_f_code,  " + &
"                      code_lookup_f.description AS state_f_description, code_lookup_i.code AS married_i_code, code_lookup_h.code AS citizens_h_code,  " + &
"                      code_lookup_d.code AS sex_d_code, code_lookup_d.description AS sex_d_description, code_lookup_k.code AS military_k_code,  " + &
"                      code_lookup_l.code AS reserve_l_code, code_lookup_j.code AS fed_emp_j_code, code_lookup_m.code AS npdb_m_code,  " + &
"                      code_lookup_n.code AS prov_type_n_code, code_lookup_n.description AS prov_type_n_description, code_lookup_o.code AS oig_o_code,  " + &
"                      pd_basic.cust_11, pd_basic.cust_12, pd_basic.cust_13, pd_basic.cust_14, pd_basic.cust_15, pd_basic.cust_d1,  " + &
"                      pd_basic.cust_d2, pd_basic.npi_number, pd_basic.used_another_name, pd_basic.start_another_name,  " + &
"                      pd_basic.end_another_name " + &
"FROM         pd_basic LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_a ON pd_basic.title = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON pd_basic.name_suffix = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_c ON pd_basic.prof_suffix = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_d ON pd_basic.sex = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_e ON pd_basic.prac_category = code_lookup_e.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_f ON pd_basic.pob_state = code_lookup_f.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_g ON pd_basic.pob_country = code_lookup_g.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_h ON pd_basic.citizenship = code_lookup_h.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_i ON pd_basic.married = code_lookup_i.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_j ON pd_basic.civilian_fed_employee = code_lookup_j.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_k ON pd_basic.active_military = code_lookup_k.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_l ON pd_basic.reservist = code_lookup_l.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_m ON pd_basic.npdb_query = code_lookup_m.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_n ON pd_basic.provider_type = code_lookup_n.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_o ON pd_basic.oig_query = code_lookup_o.lookup_code " + &
"ORDER BY pd_basic.prac_id "

of_execute_sqls("of_ver70_release_view1")

Return 1
end function

public function integer of_ver70_release_view2 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_covering_partners' and type = 'V')  " + &
"  drop view v_gp_covering_partners "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_covering_partners " + &
"AS " + &
"SELECT  top 100 percent      gp_partner_covering.rec_id, gp_partner_covering.gp_id, gp_partner_covering.prac_id, cl_title.code AS title_code,  " + &
"                      cl_title.description AS title_description, gp_partner_covering.last_name, gp_partner_covering.first_name,  " + &
"                      cl_provider_type.code AS provider_type_code, cl_provider_type.description AS provider_type_description, cl_specialty.code AS specialty_code,  " + &
"                      cl_specialty.description AS specialty_description, cl_covering.code AS covering_code, cl_covering.description AS covering_description,  " + &
"                      cl_partner.code AS partner_code, cl_partner.description AS partner_description, gp_partner_covering.license_no AS license_number,  " + &
"                      cl_license_state.code AS license_state_code, cl_license_state.description AS license_state_description, gp_partner_covering.cust_1,  " + &
"                      gp_partner_covering.cust_2, gp_partner_covering.cust_3, gp_partner_covering.cust_d4, gp_partner_covering.cust_d5,  " + &
"                      gp_partner_covering.specialty, gp_partner_covering.provider_type, gp_partner_covering.covering, gp_partner_covering.partner,  " + &
"                      gp_partner_covering.title_code AS Expr1, gp_partner_covering.middle_name " + &
"FROM    gp_partner_covering left outer join  code_lookup cl_covering on (cl_covering.lookup_code = gp_partner_covering.covering ) " + &
"left outer join  code_lookup cl_title ON cl_title.lookup_code = gp_partner_covering.title_code  " + &
"LEFT OUTER JOIN code_lookup cl_license_state ON gp_partner_covering.license_state = cl_license_state.lookup_code " + &
"LEFT OUTER JOIN code_lookup cl_partner ON gp_partner_covering.partner = cl_partner.lookup_code  " + &
"LEFT OUTER JOIN code_lookup cl_provider_type ON gp_partner_covering.provider_type = cl_provider_type.lookup_code  " + &
"left outer join code_lookup cl_specialty ON cl_specialty.lookup_code = gp_partner_covering.specialty " + &
"ORDER BY gp_partner_covering.rec_id, gp_partner_covering.gp_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_insurance' and type = 'V')  " + &
"  drop view v_gp_insurance "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_insurance " + &
"AS " + &
"SELECT  top 100 percent      gp_insurance.rec_id, gp_insurance.gp_id, gp_insurance.carrier_code, address_lookup.entity_name AS carrier,  " + &
"                      gp_insurance.policy_number, gp_insurance.coverage_from, gp_insurance.coverage_to, gp_insurance.previous_expiration_date,  " + &
"                      gp_insurance.tail_coverage, cl_tail_coverage.code AS tail_coverage_code, cl_tail_coverage.description AS tail_coverage_description,  " + &
"                      gp_insurance.coverage_limit_from, gp_insurance.coverage_limit_to, gp_insurance.state_funded_pool,  " + &
"                      cl_state_funded.code AS state_funded_pool_code, cl_state_funded.description AS state_funded_pool_description, gp_insurance.state_coverage,  " + &
"                      cl_state_coverage.code AS state_coverage_code, cl_state_coverage.description AS state_coverage_description, gp_insurance.exclusions,  " + &
"                      gp_insurance.cust_1, gp_insurance.cust_2, gp_insurance.cust_3, gp_insurance.cust_d4, gp_insurance.cust_d5,  " + &
"                      gp_insurance.claims_made_occurrence, gp_insurance.denied_explain, gp_insurance.active_status, gp_insurance.prac_id " + &
"FROM         gp_insurance LEFT OUTER JOIN " + &
"                      code_lookup cl_state_coverage ON gp_insurance.state_coverage = cl_state_coverage.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_state_funded ON gp_insurance.state_funded_pool = cl_state_funded.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_tail_coverage ON gp_insurance.tail_coverage = cl_tail_coverage.lookup_code LEFT OUTER JOIN " + &
"                      address_lookup ON gp_insurance.carrier_code = address_lookup.lookup_code " + &
"ORDER BY gp_insurance.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_languages' and type = 'V')  " + &
"  drop view v_gp_languages "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_languages " + &
"AS " + &
"SELECT  top 100 percent      gp_language.rec_id, gp_language.gp_id, gp_language.prac_id, cl_language.code AS language_code,  " + &
"                      cl_language.description AS language_description, cl_speak.code AS speak_code, cl_speak.description AS speak_description,  " + &
"                      cl_reads.code AS reads_code, cl_reads.description AS reads_description, cl_writes.code AS writes_code, cl_writes.description AS writes_description,  " + &
"                      cl_sign.code AS sign_code, cl_sign.description AS sign_description, gp_language.cust_1, gp_language.cust_2, gp_language.cust_3,  " + &
"                      gp_language.cust_d4, gp_language.cust_d5, gp_language.foreign_language AS [language], gp_language.speak,  " + &
"                      gp_language.reads, gp_language.writes, gp_language.sign " + &
"FROM code_lookup cl_sign INNER JOIN gp_language ON cl_sign.lookup_code = gp_language.sign " + &
"INNER JOIN code_lookup cl_speak ON cl_speak.lookup_code = gp_language.speak  " + &
"INNER JOIN code_lookup cl_language ON gp_language.foreign_language = cl_language.lookup_code  " + &
"INNER JOIN code_lookup cl_reads ON gp_language.reads = cl_reads.lookup_code  " + &
"INNER JOIN code_lookup cl_writes ON gp_language.writes = cl_writes.lookup_code  " + &
"ORDER BY gp_language.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_other_ids' and type = 'V')  " + &
"  drop view v_gp_other_ids "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_other_ids " + &
"AS " + &
"SELECT  top 100 percent      gp_other_ids.rec_id, gp_other_ids.gp_id, gp_other_ids.prac_id, code_lookup.code AS id_type_code,  " + &
"                      code_lookup.description AS id_type_description, gp_other_ids.id_number, gp_other_ids.exp_date, gp_other_ids.cust_1,  " + &
"                      gp_other_ids.cust_2, gp_other_ids.cust_3, gp_other_ids.cust_d4, gp_other_ids.cust_d5, gp_other_ids.id_type " + &
"FROM         gp_other_ids INNER JOIN " + &
"                      code_lookup ON gp_other_ids.id_type = code_lookup.lookup_code " + &
"ORDER BY gp_other_ids.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_plans' and type = 'V')  " + &
"  drop view v_gp_plans "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_plans " + &
"AS " + &
"SELECT  top 100 percent      rec_id, gp_id, plan_id, active_status, start_date, end_date, prac_id " + &
"FROM         gp_plans " + &
"ORDER BY rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_practice_info' and type = 'V')  " + &
"  drop view v_gp_practice_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_practice_info " + &
"AS " + &
"SELECT  top 100 percent      gp_practice_info.rec_id, gp_practice_info.gp_id, gp_practice_info.prac_id, gp_practice_info.corporate_name,  " + &
"                      gp_practice_info.start_date, gp_practice_info.check_payable, gp_practice_info.billing_dept,  " + &
"                      cl_after_hours_coverage.description AS after_hours_coverage, cl_after_hours_type.description AS after_hours_type,  " + &
"                      gp_practice_info.after_hours_number, cl_pref_contact_method.description AS preferred_contact_method,  " + &
"                      cl_primary_tax_id.description AS primary_tax_id, cl_gender_limitations.description AS gender_limitations, gp_practice_info.min_age,  " + &
"                      gp_practice_info.max_age, gp_practice_info.other_limitations, gp_practice_info.other_handi_access,  " + &
"                      gp_practice_info.other_disability_service, gp_practice_info.other_trans_access, gp_practice_info.cust_1, gp_practice_info.cust_2,  " + &
"                      gp_practice_info.cust_3, gp_practice_info.cust_4, gp_practice_info.cust_5, gp_practice_info.cust_d1,  " + &
"                      gp_practice_info.cust_d2 " + &
"FROM    gp_practice_info LEFT OUTER JOIN code_lookup cl_after_hours_coverage ON cl_after_hours_coverage.lookup_code = gp_practice_info.after_hours_coverage " + &
"LEFT OUTER JOIN code_lookup cl_pref_contact_method  ON cl_pref_contact_method.lookup_code = gp_practice_info.prefered_contact_method  " + &
"LEFT OUTER JOIN code_lookup cl_gender_limitations ON gp_practice_info.gender_limitations = cl_gender_limitations.lookup_code  " + &
"LEFT OUTER JOIN code_lookup cl_primary_tax_id ON gp_practice_info.primary_tax_id = cl_primary_tax_id.lookup_code  " + &
"LEFT OUTER JOIN code_lookup cl_after_hours_type ON gp_practice_info.after_hours_type = cl_after_hours_type.lookup_code  " + &
"ORDER BY gp_practice_info.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_gp_questions' and type = 'V')  " + &
"  drop view v_gp_questions "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_gp_questions " + &
"AS " + &
"SELECT  top 100 percent      gp_questions.rec_id, gp_questions.gp_id, gp_questions.question_id, cl_question_type.description AS quest_type,  " + &
"                      question_lookup.short_quest, question_lookup.full_quest, cl_answer.description AS answer, gp_questions.follow_up,  " + &
"                      gp_questions.followup_2 " + &
"FROM         gp_questions INNER JOIN " + &
"                      question_lookup ON gp_questions.question_id = question_lookup.quest_id LEFT OUTER JOIN " + &
"                      code_lookup cl_question_type ON question_lookup.quest_type = cl_question_type.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_answer ON gp_questions.answer_code = cl_answer.lookup_code " + &
"ORDER BY gp_questions.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_group_covering' and type = 'V')  " + &
"  drop view v_group_covering "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_group_covering " + &
"AS " + &
"SELECT DISTINCT  top 100 percent   " + &
"                      pd_group_providers.facility_id, pd_group_providers.provider_name, code_lookup_b.description AS specialty,  " + &
"                      code_lookup_b.description AS specialty_code, code_lookup_a.code AS covering, pd_group_providers.covering_days,  " + &
"                      pd_group_providers.custom_1, pd_group_providers.custom_2, pd_group_providers.custom_3, pd_group_providers.custom_4,  " + &
"                      pd_group_providers.custom_5, facility.facility_name, pd_group_providers.prac_id, pd_group_providers.rec_id,  " + &
"                      pd_group_providers.custom_6, pd_group_providers.custom_7, pd_group_providers.custom_8, pd_group_providers.custom_9,  " + &
"                      pd_group_providers.custom_10, pd_group_providers.custom_d1, pd_group_providers.custom_d2 " + &
"FROM         pd_group_providers INNER JOIN " + &
"                      facility ON pd_group_providers.facility_id = facility.facility_id LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_a ON pd_group_providers.covering = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON pd_group_providers.specialty = code_lookup_b.lookup_code " + &
"ORDER BY pd_group_providers.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_group_practice' and type = 'V')  " + &
"  drop view v_group_practice "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_group_practice " + &
"AS " + &
"SELECT  top 100 percent      gp.rec_id AS gp_id, cl_address_type.code AS address_type_code, cl_address_type.description AS address_type_description, gp.street, gp.street_2,  " + &
"                      gp.city, cl_state.code AS state, gp.zip, cl_county.description AS county, cl_country.description AS country, gp.phone, gp.ext, gp.fax, gp.pager_number,  " + &
"                      gp.web_address, gp.e_mail_address, gp.contact_person, gp.business_mgr, gp.office_mgr, gp.tax_id, gp.tax_id_other_1, gp.tax_id_other_2,  " + &
"                      cl_accepting_new_patients.description AS accepting_new_patients, gp.cust_1, gp.cust_2, gp.cust_3, gp.cust_4, gp.cust_5, gp.cust_6, gp.active_status,  " + &
"                      cl_practice_type.description AS practice_type, gp.routine_visit_appt, gp.urgent_visit_appt, gp.emergency_visit_appt, gp.non_emergency_appt,  " + &
"                      cl_young_child.description AS young_child, cl_child.description AS child, cl_adolescent.description AS adolescent, cl_adult.description AS adult,  " + &
"                      cl_senior_adult.description AS senior_adult, cl_handicapped_access.description AS handicapped_access,  " + &
"                      cl_public_transportation.description AS public_transportation, cl_office_in_home.description AS office_in_home, gp.mon_from, gp.mon_to,  " + &
"                      gp.mon_from2, gp.mon_to2, gp.tue_from, gp.tue_to, gp.tue_from2, gp.tue_to2, gp.wed_from, gp.wed_to2, gp.wed_from2, gp.wed_to, gp.thu_from,  " + &
"                      gp.thu_to, gp.thu_from2, gp.thu_to2, gp.fri_from, gp.fri_to, gp.fri_from2, gp.fri_to2, gp.sat_from, gp.sat_to, gp.sat_from2, gp.sat_to2, gp.sun_from,  " + &
"                      gp.sun_from2, gp.sun_to, gp.sun_to2, gp.prac_id, gp.suite_apart " + &
"FROM         group_practice gp LEFT OUTER JOIN " + &
"                      code_lookup cl_address_type ON gp.mailing_address = cl_address_type.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_accepting_new_patients ON gp.accepting_new_patients = cl_accepting_new_patients.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_adult ON gp.adult = cl_adult.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_adolescent ON gp.adolescent = cl_adolescent.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_child ON gp.child = cl_child.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_country ON gp.country = cl_country.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_county ON gp.county = cl_county.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_handicapped_access ON gp.handicapped_access = cl_handicapped_access.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_office_in_home ON gp.office_in_home = cl_office_in_home.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_practice_type ON gp.practice_type = cl_practice_type.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_public_transportation ON gp.public_transportation = cl_public_transportation.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_senior_adult ON gp.senior_adult = cl_senior_adult.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_state ON gp.state = cl_state.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_young_child ON gp.young_child = cl_young_child.lookup_code " + &
"ORDER BY gp.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_group_practice_parent_org_link' and type = 'V')  " + &
"  drop view v_group_practice_parent_org_link "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_group_practice_parent_org_link " + &
"AS " + &
"SELECT  top 100 percent      group_loc_link.rec_id, group_loc_link.group_id AS parent_org_id, group_multi_loc.gp_name AS parent_org_name,  " + &
"                      group_loc_link.loc_id AS gp_id, group_practice.street AS gp_loc_name " + &
"FROM         group_loc_link INNER JOIN " + &
"                      group_multi_loc ON group_loc_link.group_id = group_multi_loc.rec_id INNER JOIN " + &
"                      group_practice ON group_loc_link.loc_id = group_practice.rec_id " + &
"ORDER BY group_loc_link.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_hosp_affil' and type = 'V')  " + &
"  drop view v_hosp_affil "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_hosp_affil " + &
"as select  top 100 percent  pd_hosp_affil.rec_id,pd_hosp_affil.prac_id,hospital_code=address_lookup.code,hospital_name=address_lookup.entity_name,pd_hosp_affil.month_from,pd_hosp_affil.year_from,pd_hosp_affil.month_thru,pd_hosp_affil.year_thru,pd_hosp_affil.primary_hosp,primary_hospital=code_lookup_g.code,staff_cat_code=code_lookup_h.code,staff_cat_description=code_lookup_h.description,admitting_priviliges=code_lookup_i.code,pd_hosp_affil.cust_1,pd_hosp_affil.cust_2,pd_hosp_affil.cust_3,pd_hosp_affil.cust_4,pd_hosp_affil.cust_5,pd_hosp_affil.department_a,pd_hosp_affil.section_a,pd_hosp_affil.department_b,pd_hosp_affil.section_b,pd_hosp_affil.department_c,pd_hosp_affil.section_c,pd_hosp_affil.cust_6,pd_hosp_affil.cust_7,pd_hosp_affil.cust_8,pd_hosp_affil.cust_9,pd_hosp_affil.cust_10,pd_hosp_affil.cust_d1,pd_hosp_affil.cust_d2,pd_hosp_affil.start_date,pd_hosp_affil.end_date,pd_hosp_affil.unrestricted_privs,pd_hosp_affil.pctg_admissions,pd_hosp_affil.dept_director from((((pd_hosp_affil left outer join address_lookup on pd_hosp_affil.hospital_code = address_lookup.lookup_code) left outer join code_lookup as code_lookup_g on pd_hosp_affil.primary_hosp = code_lookup_g.lookup_code) left outer join code_lookup as code_lookup_h on pd_hosp_affil.staff_category = code_lookup_h.lookup_code) left outer join code_lookup as code_lookup_i on pd_hosp_affil.admitting_priv = code_lookup_i.lookup_code) order by pd_hosp_affil.rec_id,pd_hosp_affil.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_hospital_facility_link' and type = 'V')  " + &
"  drop view v_hospital_facility_link "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_hospital_facility_link " + &
"AS " + &
"SELECT  top 100 percent      pd_hosp_facility_link.hosp_affil_id AS rec_id, pd_hosp_facility_link.prac_id, pd_hosp_facility_link.facility_id,  " + &
"                      pd_hosp_facility_link.primary_hosp, code_lookup.code AS primary_hosp_code,  " + &
"                      code_lookup.description AS primary_hosp_description " + &
"FROM         pd_hosp_facility_link INNER JOIN " + &
"                      code_lookup ON pd_hosp_facility_link.primary_hosp = code_lookup.lookup_code " + &
"ORDER BY pd_hosp_facility_link.hosp_affil_id,pd_hosp_facility_link.prac_id,pd_hosp_facility_link.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_image_list' and type = 'V')  " + &
"  drop view v_image_list "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_image_list " + &
"AS " + &
"SELECT  top 100 percent      rec_id, prac_id, screen_id, date_scanned, user_name, date_recieved, active_status, doc_id, notes, num_pages, reference_name, tif_start_page,  " + &
"                      image_type_id, file_name, modify_date " + &
"FROM         pd_images " + &
"ORDER BY rec_id, prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_Insurance' and type = 'V')  " + &
"  drop view v_Insurance "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_Insurance " + &
"  as select  top 100 percent  pd_insurance.rec_id, " + &
"    pd_insurance.prac_id, " + &
"    address_lookup.code as carrier_code, " + &
"    address_lookup.entity_name as carrier_name, " + &
"    pd_insurance.policy_number, " + &
"    pd_insurance.coverage_from, " + &
"    pd_insurance.coverage_to, " + &
"    pd_insurance.previous_expiration_date, " + &
"    code_lookup_b.code as tail_coverage_code, " + &
"    pd_insurance.coverage_limit_from, " + &
"    pd_insurance.coverage_limit_to, " + &
"    code_lookup_d.code as state_funded_code, " + &
"    code_lookup_c.code as state_coverage, " + &
"    pd_insurance.exclusions, " + &
"    pd_insurance.cust_1, " + &
"    pd_insurance.cust_2, " + &
"    pd_insurance.cust_3, " + &
"    pd_insurance.cust_4, " + &
"    pd_insurance.cust_5, " + &
"    pd_insurance.cust_6, " + &
"    pd_insurance.cust_7, " + &
"    pd_insurance.cust_8, " + &
"    pd_insurance.cust_9, " + &
"    pd_insurance.cust_10, " + &
"    pd_insurance.cust_d1, " + &
"    pd_insurance.cust_d2, " + &
"    code_lookup_a.code as claims_made_code, " + &
"    code_lookup_a.description as claims_made_description, " + &
"    pd_insurance.denied_explain, " + &
"    pd_insurance.active_status " + &
"from " + &
"    pd_insurance LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_a ON pd_insurance.claims_made_occurrence = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_b ON pd_insurance.tail_coverage = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_c ON pd_insurance.state_coverage = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_d ON pd_insurance.state_funded_pool = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"    address_lookup ON pd_insurance.carrier_code = address_lookup.lookup_code " + &
"order by pd_insurance.rec_id,pd_insurance.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_invoice' and type = 'V')  " + &
"  drop view v_invoice "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_invoice " + &
"AS " + &
"SELECT  top 100 percent      pd_invoice.rec_id AS invoice_id, pd_invoice.prac_id, LTRIM(RTRIM(ISNULL(pd_basic.last_name, '')))  " + &
"                      + ', ' + ISNULL(pd_basic.first_name, '') + ' ' + SUBSTRING(ISNULL(pd_basic.middle_name, ''), 1, 1)  " + &
"                      + CASE WHEN isnull(pd_basic.middle_name, '') = '' THEN '' ELSE '.,' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), ''))) + CASE WHEN isnull " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), '') = '' THEN '' ELSE ', ' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.prof_suffix = code_lookup.lookup_code), ''))) AS prac_name, pd_invoice.facility_id, facility.facility_name,  " + &
"                      pd_invoice.inv_date AS invoice_date, pd_invoice.due_date, pd_invoice.tax_a, pd_invoice.amt_billed, pd_invoice.invc_amt,  " + &
"                      pd_invoice.amt_paid, CASE pd_invoice.paid WHEN 0 THEN 'Open' ELSE 'Paid' END AS paid, pd_invoice.note, pd_inv_rows.item_id,  " + &
"                      pd_inv_rows.invt_id AS item_inventory_id, pd_inv_rows.billing_item AS item_billing_item, pd_inv_rows.quantity AS item_quantity,  " + &
"                      pd_inv_rows.cost AS item_cost, pd_inv_rows.price AS item_price, pd_inv_rows.extended AS item_extended " + &
"FROM         pd_invoice INNER JOIN " + &
"                      pd_inv_rows ON pd_invoice.rec_id = pd_inv_rows.rec_id INNER JOIN " + &
"                      pd_basic ON pd_invoice.prac_id = pd_basic.prac_id INNER JOIN " + &
"                      facility ON pd_invoice.facility_id = facility.facility_id " + &
"ORDER BY pd_invoice.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_languages' and type = 'V')  " + &
"  drop view v_languages "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_languages " + &
"as " + &
"select  top 100 percent  " + &
"	pd_languages.rec_id, " + &
"	pd_languages.prac_id, " + &
"	lang_code=code_lookup_a.code, " + &
"	lang_description=code_lookup_a.description, " + &
"	speak=code_lookup_b.code, " + &
"	[read]=code_lookup_c.code, " + &
"	write=code_lookup_d.code, " + &
"	[sign]=code_lookup_e.code, " + &
"	pd_languages.cust_1, " + &
"	pd_languages.cust_2, " + &
"	pd_languages.cust_3, " + &
"	pd_languages.cust_4, " + &
"	pd_languages.cust_5, " + &
"	pd_languages.cust_6, " + &
"	pd_languages.cust_7, " + &
"	pd_languages.cust_8, " + &
"	pd_languages.cust_9, " + &
"	pd_languages.cust_10, " + &
"	pd_languages.cust_d1, " + &
"	pd_languages.cust_d2 " + &
"from " + &
"	(((((pd_languages left outer join " + &
"	code_lookup as code_lookup_a on pd_languages.foreign_language = code_lookup_a.lookup_code) left outer join " + &
"	code_lookup as code_lookup_b on pd_languages.speak = code_lookup_b.lookup_code) left outer join " + &
"	code_lookup as code_lookup_c on pd_languages.reads = code_lookup_c.lookup_code) left outer join " + &
"	code_lookup as code_lookup_d on pd_languages.writes = code_lookup_d.lookup_code) left outer join " + &
"	code_lookup as code_lookup_e on pd_languages.sign = code_lookup_e.lookup_code) " + &
"order by pd_languages.rec_id,pd_languages.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_license' and type = 'V')  " + &
"  drop view v_license "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_license " + &
"as SELECT  top 100 percent  pd_license.rec_id,pd_license.prac_id,state_code=code_lookup_a.code,state_description=code_lookup_a.description,lic_type_code=code_lookup_b.code,lic_type_description=code_lookup_b.description,pd_license.license_number,pd_license.expiration_date,pd_license.year_issued,pd_license.previous_expiration_date,verif_agcy_code=address_lookup.code,verif_agcy_name=address_lookup.entity_name,pd_license.restrictions,pd_license.cust_1,pd_license.cust_2,pd_license.cust_3,pd_license.cust_4,pd_license.cust_5,pd_license.cust_6,pd_license.cust_7,pd_license.cust_8,pd_license.cust_9,pd_license.cust_10,pd_license.cust_d1,pd_license.cust_d2,pd_license.issue_date,pd_license.active_status from address_lookup,code_lookup as code_lookup_a,code_lookup as code_lookup_b,pd_license where(pd_license.state = code_lookup_a.lookup_code) and(pd_license.license_type_code = code_lookup_b.lookup_code) and(pd_license.verifying_agency = address_lookup.lookup_code) ORDER BY pd_license.rec_id,pd_license.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_mailing_address' and type = 'V')  " + &
"  drop view v_mailing_address "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_mailing_address " + &
"AS " + &
"SELECT  top 100 percent      code_lookup_c.code AS state, pd_address.rec_id, pd_address.prac_id, pd_address.street, pd_address.street_2, pd_address.city,  " + &
"                      code_lookup_b.code AS practice_type, pd_address.zip, code_lookup_d.code AS country, pd_address.phone, pd_address.fax,  " + &
"                      pd_address.contact_person, pd_address.e_mail_address, pd_address.web_address, pd_address_link.facility_id,  " + &
"                      pd_address_link.mailing, pd_address.ext, code_lookup_a.description AS county, code_lookup_d.description AS country_description,  " + &
"                      code_lookup_c.description AS state_description, code_lookup_b.description AS practice_type_description, pd_address.tax_id,  " + &
"                      pd_address.tax_id_other_1, pd_address.tax_id_other_2, pd_address.business_mgr, pd_address.office_mgr, pd_address.cust_1,  " + &
"                      pd_address.cust_2, pd_address.cust_3, pd_address.cust_4, pd_address.cust_5, pd_address.cust_6, pd_address.cust_7,  " + &
"                      pd_address.cust_8, pd_address.cust_9, pd_address.cust_10, pd_address.cust_d1, pd_address.cust_d2, pd_address.gp_id,  " + &
"                      pd_address.suite_apart, code_lookup_e.description AS send_corresp_here " + &
"FROM         pd_address INNER JOIN " + &
"                      pd_address_link ON pd_address.rec_id = pd_address_link.address_id LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON pd_address.practice_type = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_c ON pd_address.state = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_d ON pd_address.country = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_a ON pd_address.county = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_e ON pd_address.send_corresp_here = code_lookup_e.lookup_code " + &
"WHERE     (pd_address_link.mailing = 1) " + &
"ORDER BY pd_address.rec_id,pd_address.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_meeting_list' and type = 'V')  " + &
"  drop view v_meeting_list "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_meeting_list " + &
"  as select  top 100 percent  meetings.meeting_id, " + &
"    facility_name, " + &
"    meeting_type_code=code_lookup_a.code, " + &
"    meetings.start_date, " + &
"    start_time=code_lookup_c.code, " + &
"    meetings.end_date, " + &
"    end_time=code_lookup_d.code, " + &
"    meetings.subject, " + &
"    location=code_lookup_b.code, " + &
"    department=code_lookup_e.description, " + &
"    section=code_lookup_g.description, " + &
"    committee_lookup.committee_name, " + &
"    meetings.comments, " + &
"    meetings.cme_credits, " + &
"    cme_category=code_lookup_h.code, " + &
"    meetings.cme_presenter, " + &
"    meetings.cme_affiliation " + &
"from " + &
"    meetings INNER JOIN " + &
"    code_lookup as code_lookup_a ON meetings.meeting_type = code_lookup_a.lookup_code INNER JOIN " + &
"    code_lookup as code_lookup_b ON meetings.location = code_lookup_b.lookup_code INNER JOIN " + &
"    code_lookup as code_lookup_c ON meetings.start_time = code_lookup_c.lookup_code INNER JOIN " + &
"    code_lookup as code_lookup_d ON meetings.end_time = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_e ON meetings.department = code_lookup_e.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_g ON meetings.section = code_lookup_g.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_h ON meetings.cme_category = code_lookup_h.lookup_code LEFT OUTER JOIN " + &
"    committee_lookup ON meetings.committee = committee_lookup.committee_id LEFT OUTER JOIN " + &
"    facility ON meetings.facility = facility.facility_id " + &
"order by meetings.meeting_id     "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_meetings' and type = 'V')  " + &
"  drop view v_meetings "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_meetings " + &
"  as select  top 100 percent  meeting_type=code_lookup_a.code, " + &
"    meetings.start_date, " + &
"    meetings.start_time, " + &
"    meetings.end_date, " + &
"    meetings.end_time, " + &
"    meetings.subject, " + &
"    location=code_lookup_b.code, " + &
"    meetings.committee, " + &
"    meetings.comments, " + &
"    meetings.cme_credits, " + &
"    meetings.cme_category, " + &
"    meetings.cme_presenter, " + &
"    meetings.cme_affiliation, " + &
"    meetings.facility, " + &
"    attendence.attendence_status, " + &
"    meetings.meeting_id, " + &
"    attendence.prac_id, " + &
"    meetings.department, " + &
"    meetings.section, " + &
"    attendence.active_status from( " + &
"    meetings left outer join attendence on meetings.meeting_id = attendence.meeting_id), " + &
"    code_lookup as code_lookup_a, " + &
"    code_lookup as code_lookup_b where " + &
"    (meetings.meeting_type = code_lookup_a.lookup_code) and " + &
"    (meetings.location = code_lookup_b.lookup_code) " + &
"order by meetings.meeting_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_net_dev_actions' and type = 'V')  " + &
"  drop view v_net_dev_actions "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_net_dev_actions " + &
"as select  top 100 percent  net_dev_action_items.app_id,prac_id,net_dev_action_items.facility_id,facility.facility_name,action_type_code=code_lookup_a.code,action_type_description=code_lookup_a.description,department_code=code_lookup_b.code,department_description=code_lookup_b.description,action_status_code=code_lookup_c.code,action_status_description=code_lookup_c.description,net_dev_action_items.action_date,net_dev_action_items.action_user,net_dev_action_items.next_action_date,net_dev_action_items.notes,net_dev_action_items.action_contact,app_hdr.application_type,app_hdr.application_name,net_dev_action_items.due_date,net_dev_action_items.app_type from((((net_dev_action_items left outer join code_lookup as code_lookup_a on net_dev_action_items.action_type = code_lookup_a.lookup_code) left outer join code_lookup as code_lookup_b on net_dev_action_items.action_dept = code_lookup_b.lookup_code) left outer join code_lookup as code_lookup_c on net_dev_action_items.action_status = code_lookup_c.lookup_code) left outer join app_hdr on net_dev_action_items.app_id = app_hdr.app_id),facility where(net_dev_action_items.facility_id = facility.facility_id) order by prac_id,net_dev_action_items.facility_id "
//Modified by Nova on 2008-07-31 add due_date field
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_net_dev_ids' and type = 'V')  " + &
"  drop view v_net_dev_ids "

//$<Modify> 05.14.2008 by Andy
//$<Reason> add columns:application_name,rec_id,tax_id,tier
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"CREATE VIEW  v_net_dev_ids " + &
//"as select  top 100 percent  net_dev_ids.app_id,net_dev_ids.prac_id,net_dev_ids.facility_id,facility.facility_name,plan_type_code=code_lookup.code,plan_type_description=code_lookup.description,net_dev_ids.plan_assigned_id,net_dev_ids.start_date,net_dev_ids.end_date from code_lookup,net_dev_ids,facility where(net_dev_ids.plan_type = code_lookup.lookup_code) and(net_dev_ids.facility_id = facility.facility_id) order by net_dev_ids.prac_id,net_dev_ids.facility_id "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW v_net_dev_ids " + &  
" AS  " + & 
" SELECT top 100 percent  net_dev_ids.prac_id, net_dev_ids.rec_id, net_dev_ids.facility_id, facility.facility_name, net_dev_ids.plan_assigned_id,    " + &
"                      code_lookup.code AS plan_type_code, code_lookup.description AS plan_type_description, net_dev_ids.start_date, net_dev_ids.end_date,    " + &
"                      net_dev_ids.tax_id, net_dev_ids.app_id, app_hdr.application_name, net_dev_ids.tier   " + &
" FROM         net_dev_ids INNER JOIN   " + &
"                      facility ON net_dev_ids.facility_id = facility.facility_id  " + &
" LEFT OUTER JOIN  code_lookup ON net_dev_ids.plan_type = code_lookup.lookup_code  " + &
" LEFT OUTER JOIN  app_hdr ON net_dev_ids.app_id = app_hdr.app_id   " + &
" order by net_dev_ids.prac_id,net_dev_ids.facility_id "
//end 05.14.2008

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_net_dev_notes' and type = 'V')  " + &
"  drop view v_net_dev_notes "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_net_dev_notes " + &
"as select  top 100 percent  net_dev_notes.prac_id,net_dev_notes.notes from net_dev_notes order by net_dev_notes.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_other_affil' and type = 'V')  " + &
"  drop view v_other_affil "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_other_affil " + &
"as select  top 100 percent  pd_other_affill.rec_id,pd_other_affill.prac_id,institution_code=address_lookup.code,institution_name=address_lookup.entity_name,function_code=code_lookup.code,function_description=code_lookup.description,pd_other_affill.month_from,pd_other_affill.year_from,pd_other_affill.month_thru,pd_other_affill.year_thru,pd_other_affill.cust_1,pd_other_affill.cust_2,pd_other_affill.cust_3,pd_other_affill.cust_4,pd_other_affill.cust_5,pd_other_affill.cust_6,pd_other_affill.cust_7,pd_other_affill.cust_8,pd_other_affill.cust_9,pd_other_affill.cust_10,pd_other_affill.cust_d1,pd_other_affill.cust_d2,pd_other_affill.start_date,pd_other_affill.end_date from(pd_other_affill left outer join code_lookup on pd_other_affill.function_code = code_lookup.lookup_code),address_lookup where(pd_other_affill.institution_code = address_lookup.lookup_code) order by pd_other_affill.rec_id,pd_other_affill.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_other_data_fs' and type = 'V')  " + &
"  drop view v_other_data_fs "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_other_data_fs " + &
"AS " + &
"SELECT DISTINCT  top 100 percent   " + &
"                      pd_other_data.facility_id, facility.facility_name, pd_other_data.prac_id, pd_other_data.corp_comply, pd_other_data.bylaws_read,  " + &
"                      pd_other_data.orientation, pd_other_data.conscience_sedation, pd_other_data.ppd_date, pd_other_data.npdb,  " + &
"                      pd_other_data.physical, pd_other_data.lij_beeper, pd_other_data.active_status, code_lookup.description AS positive_ppd,  " + &
"                      pd_other_data.custom_1, pd_other_data.custom_2, pd_other_data.custom_3, pd_other_data.custom_4,  " + &
"                      pd_other_data.custom_5 " + &
"FROM         pd_other_data INNER JOIN " + &
"                      facility ON pd_other_data.facility_id = facility.facility_id LEFT OUTER JOIN " + &
"                      code_lookup ON pd_other_data.positive_ppd = code_lookup.lookup_code " + &
"ORDER BY pd_other_data.facility_id,pd_other_data.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_other_ids' and type = 'V')  " + &
"  drop view v_other_ids "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_other_ids " + &
"as select  top 100 percent  pd_other_ids.rec_id,pd_other_ids.prac_id,id_type_code=code_lookup.code,id_type_description=code_lookup.description,pd_other_ids.id_number,pd_other_ids.exp_date,pd_other_ids.cust_1,pd_other_ids.cust_2,pd_other_ids.cust_3,pd_other_ids.cust_4,pd_other_ids.cust_5,pd_other_ids.cust_6,pd_other_ids.cust_7,pd_other_ids.cust_8,pd_other_ids.cust_9,pd_other_ids.cust_10,pd_other_ids.cust_d1,pd_other_ids.cust_d2,pd_other_ids.issue_date from(pd_other_ids left outer join code_lookup on pd_other_ids.id_type = code_lookup.lookup_code) order by pd_other_ids.rec_id,pd_other_ids.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_peer_review' and type = 'V')  " + &
"  drop view v_peer_review "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_peer_review " + &
"AS " + &
"SELECT  top 100 percent      pd_peer_review.case_number, pd_peer_review.facility_id, facility.facility_name, pd_peer_review.date_of_review,  " + &
"                      cl_review_status.code AS review_status_code, cl_review_status.description AS review_status_description, pd_peer_review.reviewer,  " + &
"                      cl_review_reason.code AS review_reason_code, cl_review_reason.description AS review_reason_description,  " + &
"                      pd_peer_review.date_of_occurrence, pd_peer_review.medical_record_number, pd_peer_review.patient_name,  " + &
"                      pd_peer_review.admission_date, pd_peer_review.admitting_diagnoses, cl_sex.code AS gender_code,  " + &
"                      cl_sex.description AS gender_description, pd_peer_review.age, pd_peer_review.notes, pd_peer_review.finding,  " + &
"                      pd_peer_review.conclusion, pd_peer_review.date_completed, pd_peer_review.time_of_occurrence, pd_peer_review.cust_1,  " + &
"                      pd_peer_review.cust_2, pd_peer_review.cust_3, pd_peer_review.cust_4, pd_peer_review.cust_5, pd_peer_review.cust_6,  " + &
"                      pd_peer_review.cust_7, pd_peer_review.cust_8, pd_peer_review.cust_9, pd_peer_review.cust_10 " + &
"FROM         pd_peer_review LEFT OUTER JOIN " + &
"                      facility ON pd_peer_review.facility_id = facility.facility_id LEFT OUTER JOIN " + &
"                      code_lookup cl_review_reason ON pd_peer_review.review_reason = cl_review_reason.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_sex ON pd_peer_review.sex = cl_sex.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_review_status ON pd_peer_review.review_status = cl_review_status.lookup_code " + &
"ORDER BY pd_peer_review.case_number "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_peer_review_action_items' and type = 'V')  " + &
"  drop view v_peer_review_action_items "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_peer_review_action_items " + &
"AS " + &
"SELECT  top 100 percent      pd_peer_review_action_items.rec_id, pd_peer_review_action_items.case_number, cl_action_type.code AS action_type_code,  " + &
"                      cl_action_type.description AS action_type_description, pd_peer_review_action_items.action_date, cl_action_to.code AS action_to_code,  " + &
"                      cl_action_to.description AS action_to_description, pd_peer_review_action_items.action_user, pd_peer_review_action_items.notes,  " + &
"                      pd_peer_review_action_items.action_to_name, cl_action_status.code AS action_status_code,  " + &
"                      cl_action_status.description AS action_status_description, pd_peer_review_action_items.date_completed " + &
"FROM         pd_peer_review_action_items LEFT OUTER JOIN " + &
"                      code_lookup cl_action_status ON pd_peer_review_action_items.action_status = cl_action_status.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_action_type ON pd_peer_review_action_items.action_type = cl_action_type.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_action_to ON pd_peer_review_action_items.action_to = cl_action_to.lookup_code " + &
"ORDER BY pd_peer_review_action_items.rec_id, pd_peer_review_action_items.case_number "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_peer_review_pracs' and type = 'V')  " + &
"  drop view v_peer_review_pracs "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_peer_review_pracs " + &
"AS " + &
"SELECT  top 100 percent      pd_peer_review_pracs.case_number, pd_peer_review_pracs.prac_id, LTRIM(RTRIM(ISNULL(pd_basic.last_name, '')))  " + &
"                      + ', ' + ISNULL(pd_basic.first_name, '') + ' ' + SUBSTRING(ISNULL(pd_basic.middle_name, ''), 1, 1)  " + &
"                      + CASE WHEN isnull(pd_basic.middle_name, '') = '' THEN '' ELSE '.,' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), ''))) + CASE WHEN isnull " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), '') = '' THEN '' ELSE ', ' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.prof_suffix = code_lookup.lookup_code), ''))) AS full_name, code_lookup.code AS severity_code,  " + &
"                      code_lookup.description AS severity_code_description, pd_peer_review_pracs.notes, pd_peer_review_pracs.active_status " + &
"FROM         pd_peer_review_pracs INNER JOIN " + &
"                      pd_basic ON pd_peer_review_pracs.prac_id = pd_basic.prac_id LEFT OUTER JOIN " + &
"                      code_lookup ON pd_peer_review_pracs.severity_grade = code_lookup.lookup_code " + &
"ORDER BY pd_peer_review_pracs.case_number, pd_peer_review_pracs.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_postgrad_train' and type = 'V')  " + &
"  drop view v_postgrad_train "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_postgrad_train " + &
"as select  top 100 percent  pd_postgrad_train.rec_id,pd_postgrad_train.prac_id,pd_postgrad_train.subject,pd_postgrad_train.date_from,pd_postgrad_train.date_thru,pd_postgrad_train.loc_city,loc_state_code=code_lookup_a.code,loc_state_description=code_lookup_a.description,pd_postgrad_train.loc_zip,loc_country_code=code_lookup_b.code,loc_country_description=code_lookup_b.description,pd_postgrad_train.hours,hours_code=code_lookup_f.code,hours_name=code_lookup_f.description,category_code=code_lookup_c.code,categ_description=code_lookup_c.description,pd_postgrad_train.sponsor,pd_postgrad_train.street,pd_postgrad_train.city,state_code=code_lookup_d.code,state_description=code_lookup_d.description,pd_postgrad_train.zip,country_code=code_lookup_e.code,country_description=code_lookup_e.description,pd_postgrad_train.program_director,pd_postgrad_train.cust_1,pd_postgrad_train.cust_2,pd_postgrad_train.cust_3,pd_postgrad_train.cust_4,pd_postgrad_train.cust_5 from((((((pd_postgrad_train left outer join code_lookup as code_lookup_a on pd_postgrad_train.loc_state = code_lookup_a.lookup_code) left outer join code_lookup as code_lookup_b on pd_postgrad_train.loc_country = code_lookup_b.lookup_code) left outer join code_lookup as code_lookup_c on pd_postgrad_train.category = code_lookup_c.lookup_code) left outer join code_lookup as code_lookup_d on pd_postgrad_train.state = code_lookup_d.lookup_code) left outer join code_lookup as code_lookup_e on pd_postgrad_train.country = code_lookup_e.lookup_code) left outer join code_lookup as code_lookup_f on pd_postgrad_train.hours = code_lookup_f.lookup_code) order by pd_postgrad_train.rec_id,pd_postgrad_train.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_prac_privs' and type = 'V')  " + &
"  drop view v_prac_privs "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_prac_privs " + &
"AS " + &
"SELECT  top 100 percent      facility.facility_name, pd_priv_list.rec_id, pd_priv_list.facility_id, pd_priv_list.prac_id, pd_priv_list.start_date,  " + &
"                      pd_priv_list.end_date, pd_priv_list.notes, pd_priv_list.active_status, pd_priv_list.ir_code,  " + &
"                      priv_clinical_area.clinical_area_description, priv_core_procd.core_procd_description, priv_core.priv_core_description,  " + &
"                      code_lookup.code, priv_core_procd.sort_order, priv_core_procd.procd_name, priv_clinical_area.clinical_area_code,  " + &
"                      code_lookup.description AS priv_status_description, code_lookup.code AS priv_status_code " + &
"FROM         facility INNER JOIN " + &
"                      pd_priv_list ON facility.facility_id = pd_priv_list.facility_id INNER JOIN " + &
"                      priv_clinical_area ON pd_priv_list.clinical_area_id = priv_clinical_area.clinical_area_id INNER JOIN " + &
"                      priv_core ON pd_priv_list.priv_core_id = priv_core.priv_core_id INNER JOIN " + &
"                      priv_core_procd ON pd_priv_list.procd_id = priv_core_procd.procd_id INNER JOIN " + &
"                      code_lookup ON pd_priv_list.status_code = code_lookup.lookup_code " + &
"ORDER BY pd_priv_list.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_pracitioner_notes' and type = 'V')  " + &
"  drop view v_pracitioner_notes "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_pracitioner_notes " + &
"AS " + &
"SELECT  top 100 percent      pd_notes.record_id, pd_notes.prac_id, LTRIM(RTRIM(ISNULL(pd_basic.last_name, ''))) + ', ' + ISNULL(pd_basic.first_name, '')  " + &
"                      + ' ' + SUBSTRING(ISNULL(pd_basic.middle_name, ''), 1, 1) + CASE WHEN isnull(pd_basic.middle_name, '')  " + &
"                      = '' THEN '' ELSE '.,' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), ''))) + CASE WHEN isnull " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), '') = '' THEN '' ELSE ', ' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.prof_suffix = code_lookup.lookup_code), ''))) AS full_name, pd_notes.facility_id,  " + &
"                      CASE pd_notes.facility_id WHEN 0 THEN 'Global' ELSE facility.facility_name END AS facility_name, pd_notes.ent_date, pd_notes.user_id,  " + &
"                      pd_notes.note " + &
"FROM         pd_notes INNER JOIN " + &
"                      pd_basic ON pd_notes.prac_id = pd_basic.prac_id LEFT OUTER JOIN " + &
"                      facility ON pd_notes.facility_id = facility.facility_id " + &
"ORDER BY pd_notes.record_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_primary_specialty' and type = 'V')  " + &
"  drop view v_primary_specialty "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_primary_specialty " + &
"as " + &
"select  top 100 percent  " + &
"pd_board_specialty.rec_id,pd_board_specialty.prac_id,pd_board_specialty.specialty as specialty_id,code_lookup_a.code as specialty_code, " + &
"code_lookup_a.description as specialty_name,address_lookup.code as board_code,pd_board_specialty.board_code as board_code_id, " + &
"address_lookup.entity_name as board_name,pd_board_specialty.eligible_until,pd_board_specialty.initial_certification, " + &
"pd_board_specialty.last_recertification,pd_board_specialty.certification_expires,pd_board_specialty.certification_number, " + &
"pd_board_specialty.required_year_completion,pd_board_specialty.cust_1,pd_board_specialty.cust_2,pd_board_specialty.cust_3, " + &
"pd_board_specialty.cust_4,pd_board_specialty.cust_5,code_lookup_b.description as exam_taken,code_lookup_c.description as active_process, " + &
"code_lookup_d.description as ever_failed,code_lookup_e.description as specialty_order  " + &
"from  " + &
"pd_board_specialty LEFT OUTER JOIN " + &
"address_lookup ON pd_board_specialty.board_code = address_lookup.lookup_code INNER JOIN " + &
"code_lookup as code_lookup_a ON pd_board_specialty.specialty = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"code_lookup as code_lookup_b ON pd_board_specialty.exam_taken = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"code_lookup as code_lookup_c ON pd_board_specialty.active_cert_process = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"code_lookup as code_lookup_d ON pd_board_specialty.ever_failed_cert = code_lookup_d.lookup_code INNER JOIN " + &
"code_lookup as code_lookup_e ON pd_board_specialty.specialty_order = code_lookup_e.lookup_code " + &
"where " + &
"(code_lookup_e.code = 'Primary') " + &
"order by pd_board_specialty.rec_id,pd_board_specialty.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_priv_list' and type = 'V')  " + &
"  drop view v_priv_list "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_priv_list " + &
"  as select  top 100 percent  priv_clinical_area.clinical_area_code, " + &
"    priv_clinical_area.clinical_area_id, " + &
"    priv_clinical_area.clinical_area_description, " + &
"    priv_core.priv_core_description, " + &
"    priv_core.priv_core_id, " + &
"    priv_core_procd.core_procd_description, " + &
"    priv_core_procd.procd_id, " + &
"    priv_core_procd.sort_order, " + &
"    priv_core_procd.procd_name from(( " + &
"    priv_clinical_area left outer join priv_core on priv_clinical_area.clinical_area_id = priv_core.clinical_area_id) left outer join priv_core_procd on priv_core.priv_core_id = priv_core_procd.priv_core_id) " + &
"order by priv_clinical_area.clinical_area_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_prof_assoc' and type = 'V')  " + &
"  drop view v_prof_assoc "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_prof_assoc " + &
"as select  top 100 percent  pd_prof_assoc.rec_id,pd_prof_assoc.prac_id,pd_prof_assoc.prof_assoc,prof_assoc_code=address_lookup.code,prof_assoc_name=address_lookup.entity_name,pd_prof_assoc.date_assoc,pd_prof_assoc.cust_1,pd_prof_assoc.cust_2,pd_prof_assoc.cust_3,pd_prof_assoc.cust_4,pd_prof_assoc.cust_5,pd_prof_assoc.cust_6,pd_prof_assoc.cust_7,pd_prof_assoc.cust_8,pd_prof_assoc.cust_9,pd_prof_assoc.cust_10,pd_prof_assoc.cust_d1,pd_prof_assoc.cust_d2 from pd_prof_assoc,address_lookup where(pd_prof_assoc.prof_assoc = address_lookup.lookup_code) order by pd_prof_assoc.rec_id,pd_prof_assoc.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_prof_experience' and type = 'V')  " + &
"  drop view v_prof_experience "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_prof_experience " + &
"as select  top 100 percent  pd_prof_experience.rec_id,pd_prof_experience.prac_id,pd_prof_experience.date_from_month,pd_prof_experience.date_to_month,pd_prof_experience.organization,pd_prof_experience.city,state_code=code_lookup_a.code,state_description=code_lookup_a.description,pd_prof_experience.zip,country_code=code_lookup_b.code,country_description=code_lookup_b.description,pd_prof_experience.title_duties,pd_prof_experience.date_from_year,pd_prof_experience.date_to_year,pd_prof_experience.cust_1,pd_prof_experience.cust_2,pd_prof_experience.cust_3,pd_prof_experience.cust_4,pd_prof_experience.cust_5,pd_prof_experience.cust_6,pd_prof_experience.cust_7,pd_prof_experience.cust_8,pd_prof_experience.cust_9,pd_prof_experience.cust_10,pd_prof_experience.cust_d1,pd_prof_experience.cust_d2,pd_prof_experience.start_date,pd_prof_experience.end_date,pd_prof_experience.street_1,pd_prof_experience.street_2 from((pd_prof_experience left outer join code_lookup as code_lookup_a on pd_prof_experience.state = code_lookup_a.lookup_code) left outer join code_lookup as code_lookup_b on pd_prof_experience.country = code_lookup_b.lookup_code) order by pd_prof_experience.rec_id,pd_prof_experience.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_qa_hdr' and type = 'V')  " + &
"  drop view v_qa_hdr "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_qa_hdr " + &
"AS " + &
"SELECT  top 100 percent      PD_QA_HDR.PD_QA_HDR_ID AS pd_qa_hdr_id, PD_QA_HDR.PRAC_ID AS prac_id, LTRIM(RTRIM(ISNULL(pd_basic.last_name, '')))  " + &
"                      + ', ' + ISNULL(pd_basic.first_name, '') + ' ' + SUBSTRING(ISNULL(pd_basic.middle_name, ''), 1, 1)  " + &
"                      + CASE WHEN isnull(pd_basic.middle_name, '') = '' THEN '' ELSE '.,' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), ''))) + CASE WHEN isnull " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), '') = '' THEN '' ELSE ', ' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.prof_suffix = code_lookup.lookup_code), ''))) AS practitioner_name, PD_QA_HDR.QA_PROFILE_ID AS qa_profile_id,  " + &
"                      QA_PROFILE.PROFILE_NAME AS profile_name, QA_PROFILE.SPECIALTY_ID AS profile_specialty_lookup_code,  " + &
"                      CASE QA_PROFILE.SPECIALTY_ID WHEN 999999 THEN '(All)' ELSE cl_specialty.code END AS profile_specialty_code,  " + &
"                      CASE QA_PROFILE.SPECIALTY_ID WHEN 999999 THEN '(All Specialties)' ELSE cl_specialty.description END AS profile_specialty_description,  " + &
"                      PD_QA_HDR.FROM_DATE AS from_date, PD_QA_HDR.TO_DATE AS to_date, PD_QA_HDR.ACTIVE_STATUS AS active_status,  " + &
"                      CASE PD_QA_HDR.ACTIVE_STATUS WHEN 0 THEN 'History' WHEN 1 THEN 'Active' WHEN 4 THEN 'Pending' ELSE 'Unknown' END AS active_status_description, " + &
"                       PD_QA_HDR.HDR_COMMENT AS hdr_comment, cl_reason.code AS reason_code, cl_reason.description AS reason_description,  " + &
"                      QA_PROFILE.FACILITY_ID AS facility_id, facility.facility_name " + &
"FROM         PD_QA_HDR INNER JOIN " + &
"                      pd_basic ON PD_QA_HDR.PRAC_ID = pd_basic.prac_id INNER JOIN " + &
"                      QA_PROFILE ON PD_QA_HDR.QA_PROFILE_ID = QA_PROFILE.QA_PROFILE_ID INNER JOIN " + &
"                      facility ON QA_PROFILE.FACILITY_ID = facility.facility_id LEFT OUTER JOIN " + &
"                      code_lookup cl_reason ON PD_QA_HDR.REASON = cl_reason.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup cl_specialty ON QA_PROFILE.SPECIALTY_ID = cl_specialty.lookup_code " + &
"ORDER BY PD_QA_HDR.PD_QA_HDR_ID "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_qa_measurements' and type = 'V')  " + &
"  drop view v_qa_measurements "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_qa_measurements " + &
"AS " + &
"SELECT  top 100 percent      PD_QA_MEASUREMENTS.PD_QA_MEASUREMENTS_ID AS pd_qa_measurements_id,  " + &
"                      PD_QA_MEASUREMENTS.PD_QA_HDR_ID AS pd_qa_hdr_id, QA_MEASUREMENT.QA_PROFILE_GROUP_ID AS qa_profile_group_id,  " + &
"                      QA_PROFILE_GROUP.QA_PROFILE_GROUP_NAME AS qa_profile_group_name, QA_MEASUREMENT.THRESHOLD AS threshold,  " + &
"                      QA_MEASUREMENT.INCLUDE_IN_PROFILE AS include_in_profile,  " + &
"                      CASE QA_MEASUREMENT.INCLUDE_IN_PROFILE WHEN 1 THEN 'Yes' ELSE 'No' END AS include_in_profile_description,  " + &
"                      QA_MEASUREMENT.DATA_FORMAT AS data_format, QA_MEASUREMENT.QA_MEASUREMENT_NAME AS qa_measurement_name,  " + &
"                      PD_QA_MEASUREMENTS.MEASUREMENT_VALUE AS measurement_value " + &
"FROM         PD_QA_MEASUREMENTS INNER JOIN " + &
"                      QA_MEASUREMENT ON  " + &
"                      PD_QA_MEASUREMENTS.PROFILE_GROUP_MEASUREMENT_ID = QA_MEASUREMENT.PROFILE_GROUP_MEASUREMENT_ID INNER JOIN " + &
"                      QA_PROFILE_GROUP ON QA_MEASUREMENT.QA_PROFILE_GROUP_ID = QA_PROFILE_GROUP.QA_PROFILE_GROUP_ID " + &
"ORDER BY PD_QA_MEASUREMENTS.PD_QA_MEASUREMENTS_ID "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_question_lookup' and type = 'V')  " + &
"  drop view v_question_lookup "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_question_lookup " + &
"AS " + &
"SELECT  top 100 percent      question_lookup.quest_id, question_lookup.quest_type AS quest_type_lookup_code, code_lookup.code AS quest_type_code,  " + &
"                      code_lookup.description AS quest_type_description, question_lookup.short_quest, question_lookup.full_quest " + &
"FROM         question_lookup INNER JOIN " + &
"                      code_lookup ON question_lookup.quest_type = code_lookup.lookup_code " + &
"ORDER BY question_lookup.quest_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_references' and type = 'V')  " + &
"  drop view v_references "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_references " + &
"as select  top 100 percent  pd_references.rec_id,pd_references.prac_id,pd_references.last_name,pd_references.first_middle_name,title_code=code_lookup_a.code,title_description=code_lookup_a.description,name_suffix_code=code_lookup_b.code,name_suffix_description=code_lookup_b.description,prof_suf_code=code_lookup_c.code,prof_suf_description=code_lookup_c.description,pd_references.street,pd_references.city,pd_references.state,state_code=code_lookup_d.code,state_description=code_lookup_d.description,pd_references.zip,pd_references.country,country_code=code_lookup_e.code,country_description=code_lookup_e.description,pd_references.cust_1,pd_references.cust_2,pd_references.cust_3,pd_references.cust_4,pd_references.cust_5,pd_references.cust_6,pd_references.cust_7,pd_references.cust_8,pd_references.cust_9,pd_references.cust_10,pd_references.cust_d1,pd_references.cust_d2 from(((((pd_references left outer join code_lookup as code_lookup_a on pd_references.title = code_lookup_a.lookup_code) left outer join code_lookup as code_lookup_b on pd_references.name_suffix = code_lookup_b.lookup_code) left outer join code_lookup as code_lookup_c on pd_references.prof_suffix = code_lookup_c.lookup_code) left outer join code_lookup as code_lookup_d on pd_references.state = code_lookup_d.lookup_code) left outer join code_lookup as code_lookup_e on pd_references.country = code_lookup_e.lookup_code) order by pd_references.rec_id,pd_references.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_sanctions' and type = 'V')  " + &
"  drop view v_sanctions "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_sanctions " + &
"AS " + &
"select  top 100 percent  pd_sanctions.rec_id, " + &
"    pd_sanctions.prac_id, " + &
"    code_lookup_a.description as status_activity, " + &
"    code_lookup_b.description as action_sanct_name, " + &
"    pd_sanctions.taken, " + &
"    pd_sanctions.date_from, " + &
"    pd_sanctions.date_thru, " + &
"    pd_sanctions.reason_1, " + &
"    pd_sanctions.reason_2, " + &
"    pd_sanctions.reason_3, " + &
"    pd_sanctions.cust_1, " + &
"    pd_sanctions.cust_2, " + &
"    pd_sanctions.cust_3, " + &
"    pd_sanctions.cust_4, " + &
"    pd_sanctions.cust_5, " + &
"    pd_sanctions.cust_6, " + &
"    pd_sanctions.cust_7, " + &
"    pd_sanctions.cust_8, " + &
"    pd_sanctions.cust_9, " + &
"    pd_sanctions.cust_10, " + &
"    pd_sanctions.cust_d1, " + &
"    pd_sanctions.cust_d2, " + &
"    pd_sanctions.organization_name, " + &
"    address_lookup.code as org_code, " + &
"    address_lookup.entity_name as org_name " + &
"from(( " + &
"    pd_sanctions left outer join " + &
"	code_lookup as code_lookup_a on pd_sanctions.status_activity_code = code_lookup_a.lookup_code) left outer join " + &
"	code_lookup as code_lookup_b on pd_sanctions.action_sanction_code = code_lookup_b.lookup_code) INNER JOIN " + &
"	address_lookup ON pd_sanctions.organization_name = address_lookup.lookup_code INNER JOIN " + &
"	pd_basic ON pd_sanctions.prac_id = pd_basic.prac_id " + &
"order by pd_sanctions.rec_id,pd_sanctions.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_santions' and type = 'V')  " + &
"  drop view v_santions "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_santions " + &
"AS " + &
"SELECT  top 100 percent      pd_sanctions.prac_id, pd_sanctions.rec_id, code_lookup_a.code AS status_Activity_code,  " + &
"                      code_lookup_a.description AS status_activity_description, code_lookup_b.code AS action_Santion_Code,  " + &
"                      code_lookup_b.description AS action_santion_description, code_lookup_c.code AS santions_code, code_lookup_c.description AS santions_description,  " + &
"                      address_lookup_a.entity_name AS insurance_company, address_lookup_b.entity_name AS hospital, address_lookup_c.code AS org_name_code,  " + &
"                      address_lookup_c.entity_name AS org_name_description, pd_sanctions.taken, pd_sanctions.date_from, pd_sanctions.date_thru,  " + &
"                      pd_sanctions.reason_1, pd_sanctions.reason_2, pd_sanctions.reason_3, pd_sanctions.cust_4, pd_sanctions.cust_5 " + &
"FROM         pd_sanctions INNER JOIN " + &
"                      pd_basic ON pd_sanctions.prac_id = pd_basic.prac_id LEFT OUTER JOIN " + &
"                      address_lookup address_lookup_a ON pd_sanctions.cust_2 = address_lookup_a.lookup_code LEFT OUTER JOIN " + &
"                      address_lookup address_lookup_b ON pd_sanctions.cust_3 = address_lookup_b.lookup_code LEFT OUTER JOIN " + &
"                      address_lookup address_lookup_c ON pd_sanctions.organization_name = address_lookup_c.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_a ON pd_sanctions.status_activity_code = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON pd_sanctions.action_sanction_code = code_lookup_b.lookup_code CROSS JOIN " + &
"                      code_lookup code_lookup_c LEFT OUTER JOIN " + &
"                      pd_sanctions pd_sanctions1 ON code_lookup_c.lookup_code = pd_sanctions1.cust_1 " + &
"ORDER BY pd_sanctions.prac_id, pd_sanctions.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_site_survey' and type = 'V')  " + &
"  drop view v_site_survey "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_site_survey " + &
"AS " + &
"SELECT  top 100 percent      group_practice.rec_id AS gp_id, group_practice.street, review_hdr.review_description, review_hdr.maximum_score,  " + &
"                      review_hdr.minimum_passing_score, review_hdr.total_points AS review_total_score, pd_review_hdr.review_date,  " + &
"                      code_lookup.description AS review_start_time, code_lookup_1.description AS review_end_time, pd_review_hdr.contact_person,  " + &
"                      pd_review_hdr.notes_1, pd_review_hdr.notes_2, pd_review_hdr.notes_3, pd_review_hdr.total_score AS grp_total_score,  " + &
"                      code_lookup_2.description AS review_results, pd_review_hdr.active_status, pd_review_hdr.next_review_date,  " + &
"                      pd_review_hdr.lock_for_edit " + &
"FROM         pd_review_hdr INNER JOIN " + &
"                      group_practice ON pd_review_hdr.address_id = group_practice.rec_id INNER JOIN " + &
"                      review_hdr ON pd_review_hdr.review_id = review_hdr.review_id LEFT OUTER JOIN " + &
"                      code_lookup ON pd_review_hdr.review_start_time = code_lookup.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_1 ON pd_review_hdr.review_end_time = code_lookup_1.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_2 ON pd_review_hdr.review_result_code = code_lookup_2.lookup_code " + &
"ORDER BY group_practice.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_site_survey_results' and type = 'V')  " + &
"  drop view v_site_survey_results "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_site_survey_results " + &
"AS " + &
"SELECT  top 100 percent      pd_review_hdr.rec_id, pd_review_hdr.address_id AS gp_id, group_practice.street, group_practice.street_2, group_practice.city,  " + &
"                      cl_state.code AS state, group_practice.zip, group_practice.phone, group_practice.ext,  " + &
"                      group_practice.contact_person AS location_contact_person, review_hdr.review_description, pd_review_hdr.review_date,  " + &
"                      cl_start_time.code AS start_time_code, cl_start_time.description AS start_time_description, cl_end_time.code AS end_time_code,  " + &
"                      cl_end_time.description AS end_time_description, review_question_groups.group_name, review_question_groups.group_order,  " + &
"                      review_question_groups_1.group_name AS subgroup_name, review_question_groups_1.group_order AS subgroup_order,  " + &
"                      pd_review_hdr.contact_person AS survey_contact_person, pd_review_hdr.reviewer_id, pd_review_hdr.notes_1 AS survey_notes_1,  " + &
"                      pd_review_hdr.notes_2 AS survey_notes_2, pd_review_hdr.notes_3 AS survey_notes_3, pd_review_hdr.total_score,  " + &
"                      pd_review_hdr.review_result_code, pd_review_hdr.active_status, pd_review_hdr.next_review_date, pd_review_hdr.lock_for_edit,  " + &
"                      CASE WHEN pd_review_hdr.lock_for_edit = 1 THEN 'Yes' ELSE 'No' END AS lock_for_edit_desc, review_question_answer.question_id,  " + &
"                      review_question.question, review_question.key_quest,  " + &
"                      CASE WHEN review_question.key_quest = 1 THEN 'Yes' ELSE 'No' END AS key_quest_desc, review_question.key_value AS key_passing_value,  " + &
"                      review_question.question_order, review_question_answer.answer_id, review_question_answer.question_answer AS answer,  " + &
"                      review_question_answer.answer_score, review_question_answer.answer_order, pd_review_answers.answer_on_off AS answer_selected,  " + &
"                      CASE WHEN pd_review_answers.answer_on_off = 1 THEN 'Yes' ELSE 'No' END AS answer_selected_desc,  " + &
"                      pd_review_answers.notes AS answer_notes " + &
"FROM group_practice  " + &
"INNER JOIN pd_review_hdr ON group_practice.rec_id = pd_review_hdr.address_id  " + &
"INNER JOIN review_hdr ON  review_hdr.review_id = pd_review_hdr.review_id  " + &
"INNER JOIN pd_review_answers ON pd_review_hdr.rec_id = pd_review_answers.rec_id  " + &
"INNER JOIN review_question_answer ON pd_review_answers.question_answer_id = review_question_answer.question_answer_id  " + &
"INNER JOIN review_question ON review_question_answer.question_id = review_question.question_id  " + &
"INNER JOIN review_question_groups review_question_groups_1 ON review_question_groups_1.review_id = review_question.review_id AND  review_question_groups_1.group_id = review_question.sub_group_id  " + &
"LEFT OUTER JOIN review_question_groups ON review_question.review_id = review_question_groups.review_id AND review_question.group_id = review_question_groups.group_id  " + &
"LEFT OUTER JOIN code_lookup cl_state ON group_practice.state = cl_state.lookup_code  " + &
"LEFT OUTER JOIN code_lookup cl_end_time ON pd_review_hdr.review_end_time = cl_end_time.lookup_code  " + &
"LEFT OUTER JOIN code_lookup cl_start_time ON pd_review_hdr.review_start_time = cl_start_time.lookup_code " + &
"ORDER BY pd_review_hdr.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_sp_certs' and type = 'V')  " + &
"  drop view v_sp_certs "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_sp_certs " + &
"  as select  top 100 percent  pd_special_certs.rec_id, " + &
"    pd_special_certs.prac_id, " + &
"    pd_special_certs.certified_in, " + &
"    pd_special_certs.initial_cert_month, " + &
"    pd_special_certs.initial_cert_year, " + &
"    pd_special_certs.cert_expiration_month, " + &
"    pd_special_certs.cert_expiration_year, " + &
"    pd_special_certs.certification_number, " + &
"    exam_taken_code=code_lookup.code, " + &
"    pd_special_certs.certified_by, " + &
"    pd_special_certs.cust_1, " + &
"    pd_special_certs.cust_2, " + &
"    pd_special_certs.cust_3, " + &
"    pd_special_certs.cust_4, " + &
"    pd_special_certs.cust_5 " + &
"from( " + &
"    pd_special_certs left outer join code_lookup on pd_special_certs.exam_taken = code_lookup.lookup_code) " + &
"order by pd_special_certs.rec_id,pd_special_certs.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_special_certs' and type = 'V')  " + &
"  drop view v_special_certs "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_special_certs " + &
"  as select distinct  top 100 percent  pd_special_certs.rec_id, " + &
"    pd_special_certs.prac_id, " + &
"    pd_special_certs.initial_cert_month, " + &
"    pd_special_certs.initial_cert_year, " + &
"    pd_special_certs.cert_expiration_month, " + &
"    pd_special_certs.cert_expiration_year, " + &
"    pd_special_certs.certification_number, " + &
"    pd_special_certs.certified_in, " + &
"    pd_special_certs.cust_1, " + &
"    pd_special_certs.cust_2, " + &
"    pd_special_certs.cust_3, " + &
"    pd_special_certs.cust_4, " + &
"    pd_special_certs.cust_5, " + &
"    pd_special_certs.cust_6, " + &
"    pd_special_certs.cust_7, " + &
"    pd_special_certs.cust_8, " + &
"    pd_special_certs.cust_9, " + &
"    pd_special_certs.cust_10, " + &
"    pd_special_certs.cust_d1, " + &
"    pd_special_certs.cust_d2, " + &
"    pd_special_certs.start_date, " + &
"    pd_special_certs.end_date, " + &
"    address_lookup.code as certified_by_code, " + &
"    address_lookup.entity_name as certified_by_name, " + &
"    code_lookup_a.code as certified_in_code, " + &
"    code_lookup_a.description as certified_in_description, " + &
"    code_lookup_b.description as exam_taken from " + &
"    pd_special_certs left outer join code_lookup as code_lookup_a on pd_special_certs.certified_in = code_lookup_a.lookup_code left outer join " + &
"    address_lookup on pd_special_certs.certified_by = address_lookup.lookup_code left outer join " + &
"    code_lookup as code_lookup_b on pd_special_certs.exam_taken = code_lookup_b.lookup_code " + &
"order by pd_special_certs.rec_id,pd_special_certs.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_specialty_facility_link' and type = 'V')  " + &
"  drop view v_specialty_facility_link "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_specialty_facility_link " + &
"AS " + &
"SELECT  top 100 percent      pd_spec_facility_link.specialty_id, pd_spec_facility_link.prac_id, pd_spec_facility_link.facility_id,  " + &
"                      code_lookup.description AS practicing " + &
"FROM         pd_spec_facility_link INNER JOIN " + &
"                      code_lookup ON pd_spec_facility_link.practicing = code_lookup.lookup_code " + &
"ORDER BY pd_spec_facility_link.specialty_id, pd_spec_facility_link.prac_id, pd_spec_facility_link.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_staff_cat' and type = 'V')  " + &
"  drop view v_staff_cat "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_staff_cat " + &
"as select distinct  top 100 percent  pd_affil_staff_cat.rec_id,pd_affil_staff_cat.prac_id,facility_name=facility.facility_name,staff_cat_code=code_lookup_a.code,staff_cat_description=code_lookup_a.description,pd_affil_staff_cat.from_date,pd_affil_staff_cat.to_date,pd_affil_staff_cat.active_status from pd_affil_staff_cat,code_lookup as code_lookup_a,facility where(pd_affil_staff_cat.facility_id = facility.facility_id) and(pd_affil_staff_cat.staff_category = code_lookup_a.lookup_code) order by pd_affil_staff_cat.rec_id,pd_affil_staff_cat.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_staff_leave' and type = 'V')  " + &
"  drop view v_staff_leave "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_staff_leave " + &
"as select distinct  top 100 percent  pd_affil_staff_leave.rec_id,pd_affil_staff_leave.prac_id,facility_name=facility.facility_name,leave_code=code_lookup_a.code,leave_description=code_lookup_a.description,pd_affil_staff_leave.from_date,pd_affil_staff_leave.to_date,pd_affil_staff_leave.active_status from pd_affil_staff_leave,code_lookup as code_lookup_b,code_lookup as code_lookup_a,facility where(pd_affil_staff_leave.facility_id = facility.facility_id) and(pd_affil_staff_leave.leave_of_absence_reason = code_lookup_b.lookup_code) order by pd_affil_staff_leave.rec_id,pd_affil_staff_leave.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_training' and type = 'V')  " + &
"  drop view v_training "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_training " + &
"  as select  top 100 percent  pd_training.rec_id, " + &
"    pd_training.prac_id, " + &
"    training_type=code_lookup_a.description, " + &
"    pd_training.month_from, " + &
"    pd_training.year_from, " + &
"    pd_training.month_thru, " + &
"    pd_training.year_thru, " + &
"    pd_training.program_director, " + &
"    accred_code=code_lookup_e.code, " + &
"    specialty_name=code_lookup_b.description, " + &
"    internship_type=code_lookup_c.description, " + &
"    fellowhsip_type=code_lookup_d.description, " + &
"    pd_training.chief_res_month_from, " + &
"    pd_training.chief_res_year_from, " + &
"    pd_training.chief_res_month_thru, " + &
"    pd_training.chief_res_year_thru, " + &
"    institution_name=address_lookup.entity_name, " + &
"    pd_training.cust_1, " + &
"    pd_training.cust_2, " + &
"    pd_training.cust_3, " + &
"    pd_training.cust_4, " + &
"    pd_training.cust_5, " + &
"    pd_training.cust_6, " + &
"    pd_training.cust_7, " + &
"    pd_training.cust_8, " + &
"    pd_training.cust_9, " + &
"    pd_training.cust_10, " + &
"    pd_training.cust_d1, " + &
"    pd_training.cust_d2, " + &
"    pd_training.start_date, " + &
"    pd_training.end_date " + &
"from " + &
"    pd_training LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_a ON pd_training.train_type = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_b ON pd_training.specialty = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_c ON pd_training.internship_type_code = code_lookup_c.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_d ON pd_training.fellowship_type_code = code_lookup_d.lookup_code LEFT OUTER JOIN " + &
"    code_lookup as code_lookup_e ON pd_training.accredited = code_lookup_e.lookup_code LEFT OUTER JOIN " + &
"    address_lookup ON pd_training.institution_code = address_lookup.lookup_code " + &
"order by pd_training.rec_id,pd_training.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_verif_info' and type = 'V')  " + &
"  drop view v_verif_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_verif_info " + &
"AS " + &
"SELECT DISTINCT  top 100 percent   " + &
"                      verif_info.rec_id, verif_info.prac_id, verif_info.facility_id, facility.facility_name, verif_info.seq_no, verif_info.first_sent,  " + &
"                      verif_info.last_sent, verif_info.number_sent, verif_info.date_recieved, verif_info.user_name, code_lookup_a.code AS response_code,  " + &
"                      code_lookup_a.description AS response_descrip, code_lookup_b.code AS method_code, code_lookup_b.description AS method_descrip,  " + &
"                      data_view_screen.screen_name, data_view_screen.screen_id, verif_info.active_status, verif_info.expiration_date,  " + &
"                      verif_info.reference_value, verif_info.priority_user, verif_info.priority, verif_info.exp_credential_flag, verif_info.doc_id,  " + &
"                      verif_info.print_flag, verif_info.notes, verif_info.source,  " + &
"                      CASE verif_info.priority WHEN 1 THEN 'Low' WHEN 2 THEN 'Medium' WHEN 3 THEN 'High' ELSE 'Unknown' END AS priority_description " + &
"FROM         verif_info INNER JOIN " + &
"                      data_view_screen ON verif_info.screen_id = data_view_screen.screen_id INNER JOIN " + &
"                      code_lookup code_lookup_b ON verif_info.verification_method = code_lookup_b.lookup_code INNER JOIN " + &
"                      facility ON verif_info.facility_id = facility.facility_id LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_a ON verif_info.response_code = code_lookup_a.lookup_code " + &
"WHERE     (data_view_screen.data_view_id = 1) " + &
"ORDER BY verif_info.rec_id, verif_info.prac_id, verif_info.facility_id,verif_info.seq_no,verif_info.doc_id "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='view_pd_basic' and type = 'V')  " + &
"  drop view view_pd_basic "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  view_pd_basic " + &
"as select  top 100 percent  pd_basic.rec_id,pd_basic.prac_id,pd_basic.first_name,pd_basic.last_name,pd_basic.middle_name,pd_basic.title,title_code=code_lookup_a.code,title_description=code_lookup_a.description,pd_basic.name_suffix,name_suffix_code=code_lookup_b.code,name_suffix_description=code_lookup_b.description,pd_basic.prof_suffix,prof_suffix_code=code_lookup_c.code,prof_suffix_description=code_lookup_c.description,pd_basic.date_of_birth,pd_basic.ssn,pd_basic.sex,gender_code=code_lookup_d.code,gender_description=code_lookup_d.description,pd_basic.prac_category,prac_category_code=code_lookup_e.code,prac_category_description=code_lookup_e.description,pd_basic.maiden_other_name,pd_basic.pob_city,pd_basic.pob_state,pd_basic.pob_country,pd_basic.citizenship,pd_basic.married,pd_basic.spouse_name,pd_basic.phone,pd_basic.answering_service,pd_basic.beeper_1,pd_basic.beeper_2,pd_basic.personal_pager,pd_basic.hospital_pager,pd_basic.car_phone_1,pd_basic.car_phone_2,pd_basic.civilian_fed_employee,pd_basic.active_military,pd_basic.reservist,pd_basic.branch,pd_basic.rank,pd_basic.service_number,pd_basic.service_date_from,pd_basic.service_date_to,pd_basic.cust_1,pd_basic.cust_2,pd_basic.cust_3,pd_basic.cust_4,pd_basic.cust_5,pd_basic.cust_6,pd_basic.cust_7,pd_basic.cust_8,pd_basic.cust_9,pd_basic.cust_10,pd_basic.full_name,pd_basic.npdb_query,pd_basic.provider_id,pd_basic.provider_type from((pd_basic left outer join code_lookup as code_lookup_b on pd_basic.name_suffix = code_lookup_b.lookup_code) left outer join code_lookup as code_lookup_d on pd_basic.sex = code_lookup_d.lookup_code),code_lookup as code_lookup_a,code_lookup as code_lookup_c,code_lookup as code_lookup_e where(pd_basic.title = code_lookup_a.lookup_code) and(pd_basic.prof_suffix = code_lookup_c.lookup_code) and(pd_basic.prac_category = code_lookup_e.lookup_code) order by pd_basic.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_contract_group_linked_locations' and type = 'V')  " + &
"  drop view v_contract_group_linked_locations "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_contract_group_linked_locations " + &
"as~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       group_practice.rec_id,~r~n" + &
"       group_practice.practice_type,~r~n" + &
"       group_practice.street,~r~n" + &
"       group_practice.street_2,~r~n" + &
"       group_practice.city,~r~n" + &
"       group_practice.state,~r~n" + &
"       group_practice.zip,~r~n" + &
"       group_practice.tax_id,~r~n" + &
"       group_practice.mailing_address,~r~n" + &
"       group_practice.contact_person,~r~n" + &
"       group_practice.business_mgr,~r~n" + &
"       group_practice.suite_apart,~r~n" + &
"       group_practice.office_mgr,~r~n" + &
"       group_practice.county,~r~n" + &
"       group_practice.phone,~r~n" + &
"       group_practice.fax,~r~n" + &
"       group_practice.country,~r~n" + &
"       group_practice.web_address,~r~n" + &
"       group_practice.tax_id_other_1,~r~n" + &
"       group_practice.e_mail_address,~r~n" + &
"       group_practice.tax_id_other_2,~r~n" + &
"       group_practice.cust_1,~r~n" + &
"       group_practice.cust_2,~r~n" + &
"       group_practice.cust_3,~r~n" + &
"       group_practice.cust_4,~r~n" + &
"       group_practice.cust_5,~r~n" + &
"       ctx_loc.ctx_id,~r~n" + &
"       ctx_loc.parent_comp_id,~r~n" + &
"       ctx_loc.loc_id,~r~n" + &
"       ctx_loc.group_number,~r~n" + &
"       ctx_loc.local,~r~n" + &
"       ctx_loc.end_date,~r~n" + &
"       ctx_loc.term_reason,~r~n" + &
"       ctx_loc.start_date,~r~n" + &
"       ctx_loc.custom_1,~r~n" + &
"       ctx_loc.custom_2,~r~n" + &
"       ctx_loc.custom_3,~r~n" + &
"       ctx_loc.custom_4,~r~n" + &
"       ctx_loc.inserted_by_user,~r~n" + &
"       ctx_loc.inserted_at_date_time,~r~n" + &
"       ctx_loc.updated_by_user,~r~n" + &
"       ctx_loc.updated_at_date_time,~r~n" + &
"       ctx_loc.record_id~r~n" + &
"  FROM group_practice,ctx_loc~r~n" + &
" WHERE ctx_loc.loc_id = group_practice.rec_id~r~n" + &
"ORDER BY ctx_loc.ctx_id,ctx_loc.parent_comp_id,ctx_loc.loc_id~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_action_items' and type = 'V')  " + &
"  drop view v_ctx_action_items "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_action_items " + &
"as SELECT  top 100 percent  " + &
"	ctx_action_items.ctx_action_item_id, " + &
"	ctx_action_items.ctx_id, " + &
"	ctx_action_items.action_type, " + &
"	ctx_action_items.action_date, " + &
"	ctx_action_items.due_date, " + &
"	ctx_action_items.action_user, " + &
"	ctx_action_items.action_status, " + &
"	ctx_action_items.notes, " + &
"	ctx_action_items.ALARMED, " + &
"	ctx_action_items.first_attempt, " + &
"	ctx_action_items.last_attempt, " + &
"	ctx_action_items.no_attempts, " + &
"	ctx_action_items.assigned_to, " + &
"	ctx_action_items.print_flag, " + &
"	ctx_action_items.inserted_by_user, " + &
"	ctx_action_items.inserted_at_date_time, " + &
"	ctx_action_items.updated_by_user, " + &
"	ctx_action_items.updated_at_date_time, " + &
"	ctx_action_items.record_id, " + &
"	ctx_action_items.Letter_flag, " + &
"	ctx_action_items.letter_to, " + &
"	ctx_action_items.letter_from, " + &
"	ctx_action_items.wf_step, " + &
"	ctx_action_items.letter_id, " + &
"	ctx_action_items.wf_id, " + &
"	ctx_action_items.Wf_action_type_id, " + &
"	ctx_action_items.wf_assigned_by, " + &
"	ctx_action_items.active_status, " + &
"	ctx_action_items.wf_complete_flag, " + &
"	ctx_action_items.alm_table, " + &
"	ctx_action_items.alm_column " + &
"FROM 	ctx_action_items " + &
"ORDER BY ctx_action_items.ctx_action_item_id, " + &
"	 ctx_action_items.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_info_master_link' and type = 'V')  " + &
"  drop view v_ctx_basic_info_master_link "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info_master_link " + &
"as SELECT  top 100 percent  CTX_BASIC_INFO.ctx_id, app_facility.facility_name AS Company_Name, app_facility.street AS Company_street_1,app_facility.street_2 AS Company_street_2,app_facility.city AS Company_city,app_facility.state AS Company_state,app_facility.zip AS Company_zip,app_facility.country AS Company_country,app_facility.phone AS Company_phone,app_facility.fax AS Company_fax,app_facility.web_address AS Company_web_address,app_facility.contact_type2 AS Company_contact_type2,app_facility.corp_office_flag AS Company_corp_office_flag,app_facility.corp_office_link AS Company_corp_office_link,code_lookup.code AS Contract_Category_code, code_lookup.description AS Contract_Category_description, code_lookup_1.code AS Contract_Status_code, code_lookup_2.code AS contract_type_code, code_lookup_2.description AS contract_type_Description, CTX_BASIC_INFO.effective_date, CTX_BASIC_INFO.expriation_date, CTX_BASIC_INFO.review_date, CTX_BASIC_INFO.review_by, CTX_BASIC_INFO.term_date, code_lookup_3.code AS term_reason_code, code_lookup_3.description AS term_Reason_Desciption, CTX_BASIC_INFO.other_date_1, CTX_BASIC_INFO.other_date_2, CTX_BASIC_INFO.notes, CTX_BASIC_INFO.custom_1, CTX_BASIC_INFO.custom_2, CTX_BASIC_INFO.custom_3, CTX_BASIC_INFO.custom_4, CTX_BASIC_INFO.custom_5, CTX_BASIC_INFO.custom_6, CTX_BASIC_INFO.custom_7, CTX_BASIC_INFO.custom_8, CTX_BASIC_INFO.custom_9, CTX_BASIC_INFO.custom_10, CTX_BASIC_INFO.last_revis_date, code_lookup_4.description AS product_type_desc, code_lookup_4.code AS product_type_code, code_lookup_5.code AS product_code, code_lookup_5.description AS product_description FROM (((((((CTX_BASIC_INFO LEFT OUTER JOIN code_lookup ON CTX_BASIC_INFO.category = code_lookup.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_BASIC_INFO.status = code_lookup_1.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_2 ON CTX_BASIC_INFO.contract_type = code_lookup_2.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_3 ON CTX_BASIC_INFO.term_reason = code_lookup_3.lookup_code) INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id) INNER JOIN ctx_products ON CTX_BASIC_INFO.ctx_id = ctx_products.ctx_id) LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code) LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code ORDER BY CTX_BASIC_INFO.ctx_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_non_medical_fee_schedule' and type = 'V')  " + &
"  drop view v_ctx_non_medical_fee_schedule "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_non_medical_fee_schedule " + &
"as SELECT  top 100 percent   ctx_fee_sched_nm.ctx_id,  ctx_fee_sched_nm.fee_sched_nm_id, code_lookup1.code as category, code_lookup2.code as service_item, ctx_fee_sched_nm.description, ctx_fee_sched_nm.fee, code_lookup3.code as item_status, ctx_fee_sched_nm.start_date, ctx_fee_sched_nm.end_date, ctx_fee_sched_nm.service_name, ctx_fee_sched_nm.custom_int1, ctx_fee_sched_nm.custom_int2, ctx_fee_sched_nm.custom_fee1, ctx_fee_sched_nm.custom_fee2, ctx_fee_sched_nm.custom_fee3, ctx_fee_sched_nm.custom_text1, ctx_fee_sched_nm.custom_text2, ctx_fee_sched_nm.custom_text3, ctx_fee_sched_nm.notes, ctx_fee_sched_nm.record_id, code_lookup4.code as billing_cycle, ctx_fee_sched_nm.custom_text4, ctx_fee_sched_nm.custom_text5, ctx_fee_sched_nm.custom_text6, ctx_fee_sched_nm.custom_text7, ctx_fee_sched_nm.custom_text8, ctx_fee_sched_nm.custom_n1, ctx_fee_sched_nm.custom_n2,  ctx_fee_sched_nm.custom_n3,  ctx_fee_sched_nm.custom_n4,  ctx_fee_sched_nm.custom_n5  FROM ((((ctx_fee_sched_nm LEFT OUTER JOIN code_lookup AS code_lookup1 ON ctx_fee_sched_nm.category = code_lookup1.lookup_code and code_lookup1.lookup_name = 'Contract Fee Schd Cat. (NM)' ) LEFT OUTER JOIN code_lookup AS code_lookup2 ON ctx_fee_sched_nm.service_item = code_lookup2.lookup_code and code_lookup2.lookup_name = 'Contract Service (NM)') LEFT OUTER JOIN code_lookup AS code_lookup3 ON ctx_fee_sched_nm.item_status = code_lookup3.lookup_code and code_lookup3.lookup_name = 'Contract Fee Sched Stat. (NM)') LEFT OUTER JOIN code_lookup AS code_lookup4 ON ctx_fee_sched_nm.billing_cycle = code_lookup4.lookup_code and code_lookup4.lookup_name = 'Contract Billing Cycle') ORDER BY ctx_fee_sched_nm.ctx_id,  ctx_fee_sched_nm.fee_sched_nm_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_group_location_parent_org' and type = 'V')  " + &
"  drop view v_group_location_parent_org "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_group_location_parent_org " + &
"AS " + &
"SELECT  top 100 percent      rec_id AS parent_org_id, gp_name AS parent_org_name, street1, street2, city, state, phone, zip, contact_name, info1 AS tax_id, info2 AS custom_1,  " + &
"                      info3 AS custom_2, info4 AS custom_3, info5 AS custom_4, info6 AS custom_5 " + &
"FROM         group_multi_loc " + &
"ORDER BY group_multi_loc.rec_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_invoice_inventory' and type = 'V')  " + &
"  drop view v_invoice_inventory "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_invoice_inventory " + &
"AS " + &
"SELECT  top 100 percent      invt_id AS inventory_id, description, code, cost, price " + &
"FROM         invt_items " + &
"ORDER BY invt_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_meeting_attendence_v6' and type = 'V')  " + &
"  drop view v_meeting_attendence_v6 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_meeting_attendence_v6 " + &
"AS " + &
"SELECT  top 100 percent      attendence.meeting_id, attendence.prac_id, LTRIM(RTRIM(ISNULL(pd_basic.last_name, ''))) + ', ' + ISNULL(pd_basic.first_name, '')  " + &
"                      + ' ' + SUBSTRING(ISNULL(pd_basic.middle_name, ''), 1, 1) + CASE WHEN isnull(pd_basic.middle_name, '')  " + &
"                      = '' THEN '' ELSE '.,' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), ''))) + CASE WHEN isnull " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.name_suffix = code_lookup.lookup_code), '') = '' THEN '' ELSE ', ' END + LTRIM(RTRIM(ISNULL " + &
"                          ((SELECT     code " + &
"                              FROM         code_lookup " + &
"                              WHERE     pd_basic.prof_suffix = code_lookup.lookup_code), ''))) AS practitioner_name, attendence.active_status,  " + &
"                      CASE WHEN attendence.active_status = 1 THEN 'Active' ELSE 'Inactive' END AS active_status_description,  " + &
"                      cl_attendence_status.code AS attendence_status_code, cl_attendence_status.description AS attendence_status_description " + &
"FROM         attendence INNER JOIN " + &
"                      code_lookup cl_attendence_status ON attendence.attendence_status = cl_attendence_status.lookup_code INNER JOIN " + &
"                      pd_basic ON attendence.prac_id = pd_basic.prac_id " + &
"ORDER BY attendence.meeting_id, attendence.prac_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_affil_dept' and type = 'V')  " + &
"  drop view v_affil_dept "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_affil_dept " + &
"AS " + &
"SELECT DISTINCT  top 100 percent  " + &
"                      pd_affil_dept.rec_id, pd_affil_dept.prac_id, pd_affil_dept.facility_id, facility.facility_name, code_lookup_a.lookup_code AS dept_id,  " + &
"                      code_lookup_a.code AS dept_code, code_lookup_a.description AS dept_name, code_lookup_b.code AS section_code,  " + &
"                      code_lookup_b.description AS section_name, code_lookup_d.code AS division_code, code_lookup_d.description AS division_name,  " + &
"                      pd_affil_dept.primary_dept, pd_affil_dept.from_date, pd_affil_dept.to_date, pd_affil_dept.active_status,  " + &
"                      CASE WHEN pd_affil_dept.primary_dept = 1 THEN 'Yes' ELSE 'No' END AS primary_dept_description,  " + &
"                      CASE WHEN pd_affil_dept.primary_dept = 1 THEN 'Y' ELSE 'N' END AS primary_dept_code " + &
"FROM         pd_affil_dept INNER JOIN " + &
"                      facility ON pd_affil_dept.facility_id = facility.facility_id INNER JOIN " + &
"                      code_lookup code_lookup_a ON pd_affil_dept.department = code_lookup_a.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_b ON pd_affil_dept.[section] = code_lookup_b.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup code_lookup_d ON pd_affil_dept.rank = code_lookup_d.lookup_code " + &
"ORDER BY pd_affil_dept.rec_id, pd_affil_dept.prac_id, pd_affil_dept.facility_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_loc_covering_partners' and type = 'V')  " + &
"  drop view v_ctx_loc_covering_partners "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_loc_covering_partners " + &
"AS SELECT  top 100 percent  " + &
"      gp_partner_covering.rec_id, gp_partner_covering.gp_id, gp_partner_covering.prac_id, cl_title.code AS title_code,  " + &
"      cl_title.description AS title_description, gp_partner_covering.last_name, gp_partner_covering.first_name,  " + &
"      cl_provider_type.code AS provider_type_code, cl_provider_type.description AS provider_type_description, cl_specialty.code AS specialty_code,  " + &
"      cl_specialty.description AS specialty_description, cl_covering.code AS covering_code, cl_covering.description AS covering_description,  " + &
"      cl_partner.code AS partner_code, cl_partner.description AS partner_description, gp_partner_covering.license_no AS license_number,  " + &
"      cl_license_state.code AS license_state_code, cl_license_state.description AS license_state_description, gp_partner_covering.cust_1,  " + &
"      gp_partner_covering.cust_2, gp_partner_covering.cust_3, gp_partner_covering.cust_d4, gp_partner_covering.cust_d5,  " + &
"      gp_partner_covering.specialty, gp_partner_covering.provider_type, gp_partner_covering.covering, gp_partner_covering.partner,  " + &
"      gp_partner_covering.title_code AS Expr1, gp_partner_covering.middle_name " + &
"FROM  gp_partner_covering LEFT OUTER JOIN " + &
"      code_lookup cl_covering ON cl_covering.lookup_code = gp_partner_covering.covering LEFT OUTER JOIN " + &
"      code_lookup cl_title ON cl_title.lookup_code = gp_partner_covering.title_code LEFT OUTER JOIN " + &
"      code_lookup cl_license_state ON gp_partner_covering.license_state = cl_license_state.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_partner ON gp_partner_covering.partner = cl_partner.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_provider_type ON gp_partner_covering.provider_type = cl_provider_type.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_specialty ON cl_specialty.lookup_code = gp_partner_covering.specialty " + &
"ORDER BY gp_partner_covering.rec_id, gp_partner_covering.gp_id "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_loc_insurance' and type = 'V')  " + &
"  drop view v_ctx_loc_insurance "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_loc_insurance " + &
"AS SELECT      " + &
"      gp_insurance.rec_id, gp_insurance.gp_id, gp_insurance.carrier_code, address_lookup.entity_name AS carrier,  " + &
"      gp_insurance.policy_number, gp_insurance.coverage_from, gp_insurance.coverage_to, gp_insurance.previous_expiration_date,  " + &
"      gp_insurance.tail_coverage, cl_tail_coverage.code AS tail_coverage_code, cl_tail_coverage.description AS tail_coverage_description,  " + &
"      gp_insurance.coverage_limit_from, gp_insurance.coverage_limit_to, gp_insurance.state_funded_pool,  " + &
"      cl_state_funded.code AS state_funded_pool_code, cl_state_funded.description AS state_funded_pool_description, gp_insurance.state_coverage,  " + &
"      cl_state_coverage.code AS state_coverage_code, cl_state_coverage.description AS state_coverage_description, gp_insurance.exclusions,  " + &
"      gp_insurance.cust_1, gp_insurance.cust_2, gp_insurance.cust_3, gp_insurance.cust_d4, gp_insurance.cust_d5,  " + &
"      gp_insurance.claims_made_occurrence, gp_insurance.denied_explain, gp_insurance.active_status, gp_insurance.prac_id " + &
"FROM  gp_insurance LEFT OUTER JOIN " + &
"      code_lookup cl_state_coverage ON gp_insurance.state_coverage = cl_state_coverage.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_state_funded ON gp_insurance.state_funded_pool = cl_state_funded.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_tail_coverage ON gp_insurance.tail_coverage = cl_tail_coverage.lookup_code LEFT OUTER JOIN " + &
"      address_lookup ON gp_insurance.carrier_code = address_lookup.lookup_code "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_loc_language' and type = 'V')  " + &
"  drop view v_ctx_loc_language "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_loc_language " + &
"AS SELECT      " + &
"      gp_language.rec_id, gp_language.gp_id, gp_language.prac_id, cl_language.code AS language_code,  " + &
"      cl_language.description AS language_description, cl_speak.code AS speak_code, cl_speak.description AS speak_description,  " + &
"      cl_reads.code AS reads_code, cl_reads.description AS reads_description, cl_writes.code AS writes_code, cl_writes.description AS writes_description,  " + &
"      cl_sign.code AS sign_code, cl_sign.description AS sign_description, gp_language.cust_1, gp_language.cust_2, gp_language.cust_3,  " + &
"      gp_language.cust_d4, gp_language.cust_d5 " + &
"FROM  code_lookup cl_sign RIGHT OUTER JOIN " + &
"      code_lookup cl_reads RIGHT OUTER JOIN " + &
"      gp_language LEFT OUTER JOIN " + &
"      code_lookup cl_language ON gp_language.foreign_language = cl_language.lookup_code ON  " + &
"      cl_reads.lookup_code = gp_language.reads LEFT OUTER JOIN " + &
"      code_lookup cl_speak ON gp_language.speak = cl_speak.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_writes ON gp_language.writes = cl_writes.lookup_code ON cl_sign.lookup_code = gp_language.sign "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_loc_other_ids' and type = 'V')  " + &
"  drop view v_ctx_loc_other_ids "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_loc_other_ids " + &
"AS SELECT      " + &
"      gp_other_ids.rec_id, gp_other_ids.gp_id, gp_other_ids.prac_id, code_lookup.code AS id_type_code,  " + &
"      code_lookup.description AS id_type_description, gp_other_ids.id_number, gp_other_ids.exp_date, gp_other_ids.cust_1,  " + &
"      gp_other_ids.cust_2, gp_other_ids.cust_3, gp_other_ids.cust_d4, gp_other_ids.cust_d5 " + &
"FROM  gp_other_ids INNER JOIN " + &
"      code_lookup ON gp_other_ids.id_type = code_lookup.lookup_code "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_loc_practice_info' and type = 'V')  " + &
"  drop view v_ctx_loc_practice_info "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_loc_practice_info " + &
"AS SELECT      " + &
"      gp_practice_info.rec_id, gp_practice_info.gp_id, gp_practice_info.prac_id, gp_practice_info.corporate_name,  " + &
"      gp_practice_info.start_date, gp_practice_info.check_payable, gp_practice_info.billing_dept,  " + &
"      cl_after_hours_coverage.description AS after_hours_coverage, cl_after_hours_type.description AS after_hours_type,  " + &
"      gp_practice_info.after_hours_number, cl_pref_contact_method.description AS preferred_contact_method,  " + &
"      cl_primary_tax_id.description AS primary_tax_id, cl_gender_limitations.description AS gender_limitations, gp_practice_info.min_age,  " + &
"      gp_practice_info.max_age, gp_practice_info.other_limitations, gp_practice_info.other_handi_access,  " + &
"      gp_practice_info.other_disability_service, gp_practice_info.other_trans_access, gp_practice_info.cust_1, gp_practice_info.cust_2,  " + &
"      gp_practice_info.cust_3, gp_practice_info.cust_4, gp_practice_info.cust_5, gp_practice_info.cust_d1,  " + &
"      gp_practice_info.cust_d2 " + &
"FROM  code_lookup cl_after_hours_coverage RIGHT OUTER JOIN " + &
"      code_lookup cl_pref_contact_method RIGHT OUTER JOIN " + &
"      gp_practice_info LEFT OUTER JOIN " + &
"      code_lookup cl_gender_limitations ON gp_practice_info.gender_limitations = cl_gender_limitations.lookup_code ON  " + &
"      cl_pref_contact_method.lookup_code = gp_practice_info.prefered_contact_method LEFT OUTER JOIN " + &
"      code_lookup cl_primary_tax_id ON gp_practice_info.primary_tax_id = cl_primary_tax_id.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_after_hours_type ON gp_practice_info.after_hours_type = cl_after_hours_type.lookup_code ON  " + &
"      cl_after_hours_coverage.lookup_code = gp_practice_info.after_hours_coverage "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_loc_questions' and type = 'V')  " + &
"  drop view v_ctx_loc_questions "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_loc_questions " + &
"AS SELECT      " + &
"      gp_questions.rec_id, gp_questions.gp_id, gp_questions.prac_id, gp_questions.question_id,  " + &
"      cl_question_type.description AS quest_type, question_lookup.short_quest, question_lookup.full_quest, cl_answer.description AS answer,  " + &
"      gp_questions.follow_up, gp_questions.followup_2 " + &
"FROM  gp_questions INNER JOIN " + &
"      question_lookup ON gp_questions.question_id = question_lookup.quest_id LEFT OUTER JOIN " + &
"      code_lookup cl_question_type ON question_lookup.quest_type = cl_question_type.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_answer ON gp_questions.answer_code = cl_answer.lookup_code "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_locations' and type = 'V')  " + &
"  drop view v_ctx_locations "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_locations " + &
"AS SELECT  top 100 percent  " + &
"      gp.rec_id AS gp_id, cl_address_type.code AS address_type_code, cl_address_type.description AS address_type_description,  " + &
"      gp.street, gp.street_2, gp.city, cl_state.code AS state, gp.zip, cl_county.description AS county, cl_country.description AS country, gp.phone, gp.ext,  " + &
"      gp.fax, gp.pager_number, gp.web_address, gp.e_mail_address, gp.contact_person, gp.business_mgr, gp.office_mgr, gp.tax_id, gp.tax_id_other_1,  " + &
"      gp.tax_id_other_2, cl_accepting_new_patients.description AS accepting_new_patients, gp.cust_1, gp.cust_2, gp.cust_3, gp.cust_4, gp.cust_5,  " + &
"      gp.cust_6, gp.active_status, cl_practice_type.description AS practice_type, gp.routine_visit_appt, gp.urgent_visit_appt, gp.emergency_visit_appt,  " + &
"      gp.non_emergency_appt, cl_young_child.description AS young_child, cl_child.description AS child, cl_adolescent.description AS adolescent,  " + &
"      cl_adult.description AS adult, cl_senior_adult.description AS senior_adult, cl_handicapped_access.description AS handicapped_access,  " + &
"      cl_public_transportation.description AS public_transportation, cl_office_in_home.description AS office_in_home, gp.mon_from, gp.mon_to,  " + &
"      gp.mon_from2, gp.mon_to2, gp.tue_from, gp.tue_to, gp.tue_from2, gp.tue_to2, gp.wed_from, gp.wed_to2, gp.wed_from2, gp.wed_to, gp.thu_from,  " + &
"      gp.thu_to, gp.thu_from2, gp.thu_to2, gp.fri_from, gp.fri_to, gp.fri_from2, gp.fri_to2, gp.sat_from, gp.sat_to, gp.sat_from2, gp.sat_to2, gp.sun_from,  " + &
"      gp.sun_from2, gp.sun_to, gp.sun_to2, gp.prac_id, gp.suite_apart, gp.billing_address_id " + &
"FROM  group_practice gp LEFT OUTER JOIN " + &
"      code_lookup cl_address_type ON gp.mailing_address = cl_address_type.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_accepting_new_patients ON gp.accepting_new_patients = cl_accepting_new_patients.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_adult ON gp.adult = cl_adult.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_adolescent ON gp.adolescent = cl_adolescent.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_child ON gp.child = cl_child.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_country ON gp.country = cl_country.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_county ON gp.county = cl_county.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_handicapped_access ON gp.handicapped_access = cl_handicapped_access.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_office_in_home ON gp.office_in_home = cl_office_in_home.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_practice_type ON gp.practice_type = cl_practice_type.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_public_transportation ON gp.public_transportation = cl_public_transportation.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_senior_adult ON gp.senior_adult = cl_senior_adult.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_state ON gp.state = cl_state.lookup_code LEFT OUTER JOIN " + &
"      code_lookup cl_young_child ON gp.young_child = cl_young_child.lookup_code " + &
"ORDER BY gp.rec_id "

of_execute_sqls("of_ver70_release_view2")

Return 1
end function

public function integer of_ver70_release_dropfulltext1 ();//added by nova 2008-04-08
of_enable_fulltext()							

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"exec sp_fulltext_database 'enable' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'file_location','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','file_location','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'notes','IsFulltextIndexed' ) = 1)  " + &
"   	exec sp_fulltext_column 'ctx_basic_info','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_6','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_7','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_8','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_9','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_9','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_10','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_10','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_11','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_11','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_12','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_12','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_13','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_13','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_14','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_14','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_15','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_15','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_16','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_16','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_17','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_17','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_18','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_18','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_19','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_19','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_20','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_20','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFulltextCatalogId' )>0)	 " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_basic_info', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_basic_info_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_basic_info_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'doc_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','doc_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'filename','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','filename','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'create_by','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','create_by','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'notes','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_document') , 'TableFulltextCatalogId' )>0)	 " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_am_document', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_document_catalog') " + &
"begin " + &
" exec sp_fulltext_catalog 'ctx_am_document_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_audit'),'action','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_audit','action','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_audit'),'filename','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_audit','filename','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_audit'),'notes','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_audit','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_audit') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"   exec sp_fulltext_table 'ctx_am_doc_audit', 'drop' " + &
"  " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_doc_audit_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_am_doc_audit_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_image'),'image_file','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_image','image_file','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_image'),'pdftext','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_image','pdftext','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_am_doc_image', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_doc_image_catalog') " + &
"begin " + &
" exec sp_fulltext_catalog 'ctx_am_doc_image_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_elements'),'clause','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_elements','clause','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"exec sp_fulltext_table 'ctx_elements', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_elements_catalog') " + &
"begin " + &
"exec sp_fulltext_catalog 'ctx_elements_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_req_tmplt_element'),'element_name','IsFulltextIndexed' ) = 1)  " + &
" exec sp_fulltext_column 'ctx_req_tmplt_element','element_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_req_tmplt_element') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_req_tmplt_element', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_req_tmplt_element_catalog') " + &
"begin " + &
" exec sp_fulltext_catalog 'ctx_req_tmplt_element_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'first_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','first_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'last_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','last_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'middle_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','middle_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'street_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','street_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'street_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','street_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'street_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','street_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_6','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_7','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_8','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_9','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_9','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_10','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_10','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'city','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','city','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'zip','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','zip','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_contacts') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_contacts', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contacts_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_contacts_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contract_contacts'),'notes','IsFulltextIndexed' ) = 1)  " + &
" exec sp_fulltext_column 'ctx_contract_contacts','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_contract_contacts') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_contract_contacts', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contract_contacts_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_contract_contacts_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts_numbers'),'phone','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts_numbers','phone','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts_numbers'),'ext','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts_numbers','ext','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts_numbers'),'contact_email','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_contacts_numbers','contact_email','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_contacts_numbers') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_contacts_numbers', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contacts_numbers_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_contacts_numbers_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'gp_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','gp_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'street1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','street1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'street2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','street2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'city','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','city','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'state','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','state','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'phone','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','phone','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'zip','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','zip','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'contact_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','contact_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info6','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('group_multi_loc') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'group_multi_loc', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'group_multi_loc_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'group_multi_loc_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'street','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','street','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'street_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','street_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'city','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','city','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'pager_number','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','pager_number','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'phone','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','phone','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'ext','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','ext','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'fax','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','fax','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'zip','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','zip','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'contact_person','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','contact_person','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'tax_id','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','tax_id','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'tax_id_other_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','tax_id_other_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'tax_id_other_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','tax_id_other_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'business_mgr','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','business_mgr','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'office_mgr','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','office_mgr','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'e_mail_address','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','e_mail_address','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'web_address','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','web_address','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('group_practice') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'group_practice', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'group_practice_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'group_practice_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'group_number','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_loc','group_number','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_loc') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_loc', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_loc_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_loc_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'org_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','org_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'street_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','street_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'street_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','street_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'street_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','street_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'city','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','city','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'zip','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','zip','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'drections','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','drections','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'notes','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_6','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_7','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_8','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_9','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_9','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_10','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_10','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_orgs') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_orgs', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_orgs_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_orgs_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs_contact'),'notes','IsFulltextIndexed' ) = 1)  " + &
" exec sp_fulltext_column 'ctx_orgs_contact','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_orgs_contact') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_orgs_contact', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_orgs_contact_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_orgs_contact_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'contact_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','contact_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'Department','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','Department','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'Phone','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','Phone','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'org_cnt_email','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','org_cnt_email','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_org_contact') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_org_contact', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_org_contact_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_org_contact_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'notes','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_hdr') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_fee_sched_hdr', 'drop' " + &
"  end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_fee_sched_hdr_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_fee_sched_hdr_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_data') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_fee_sched_data', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_fee_sched_data_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_fee_sched_data_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_action_items'),'action_user','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_action_items','action_user','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_action_items'),'notes','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_action_items','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_action_items') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_action_items', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_action_items_catalog') " + &
"begin " + &
" exec sp_fulltext_catalog 'ctx_action_items_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('code_lookup'),'code','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'code_lookup','code','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('code_lookup'),'description','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'code_lookup','description','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('code_lookup') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	  exec sp_fulltext_table 'code_lookup', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'code_lookup_catalog') " + &
"begin " + &
" exec sp_fulltext_catalog 'code_lookup_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'facility_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','facility_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'street','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','street','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'street_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','street_2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'city','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','city','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'state','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','state','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'zip','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','zip','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'phone','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','phone','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'ext','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','ext','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'fax','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','fax','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'contact','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','contact','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'web_address','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','web_address','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'email_address','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'app_facility','email_address','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('app_facility') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'app_facility', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'app_facility_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'app_facility_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_req_profile'),'rqmnt_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_req_profile','rqmnt_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_req_profile'),'rqmnt_description','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_req_profile','rqmnt_description','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_req_profile') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_req_profile', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_req_profile_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_req_profile_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'clause_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','clause_name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'description','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','description','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'information_message','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','information_message','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'approved_by','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','approved_by','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'image_file','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','image_file','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	  exec sp_fulltext_table 'ctx_acp_clause', 'drop' " + &
"  end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_clause_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_acp_clause_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'Template_Name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','Template_Name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'Description','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','Description','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'Reviewed_By','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','Reviewed_By','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'image_file','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','image_file','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_template') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	  exec sp_fulltext_table 'ctx_acp_template', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_template_catalog') " + &
"begin " + &
" exec sp_fulltext_catalog 'ctx_acp_template_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Document_Name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Document_Name','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Files','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Files','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Description','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Description','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Reviewed_By','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Reviewed_By','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'image_file','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','image_file','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_document') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"	  exec sp_fulltext_table 'ctx_acp_document', 'drop' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_document_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_acp_document_catalog', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_action_item'),'notes','IsFulltextIndexed' ) = 1)  " + &
" exec sp_fulltext_column 'ctx_am_action_item','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_action_item') , 'TableFulltextCatalogId' )>0) " + &
"begin " + &
"  exec sp_fulltext_table 'ctx_am_action_item', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_action_item_catalog') " + &
"begin " + &
"  exec sp_fulltext_catalog 'ctx_am_action_item_catalog', 'drop' " + &
"end "

of_execute_sqls("of_ver70_release_dropfulltext1")

Return 1
end function

public function integer of_ver70_release_createfulltext1 ();
//Only SQL Server 2005 run it, because SQL Server 2008 do not support  this SQL: backup log @ls_name with no_log 
If Pos(Lower(gs_sqlserver_version), Lower('Microsoft SQL Server 2005')) > 0 Then
	is_sql_statements[upperbound(is_sql_statements) + 1] = &
	"if charindex(lower('microsoft sql server 2005'),lower(@@version)) > 0  " + &
	"begin " + &
	"	declare @ls_name varchar(255) " + &
	"	select @ls_name = db_name() " + &
	"	backup log @ls_name with no_log " + &
	"end "
End If

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id  " + &
"   and c.name='id_forcatalog' and t.name='ctx_req_tmplt_element' and t.type = 'U') " + &
"Alter table ctx_req_tmplt_element add id_forcatalog int identity "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id  " + &
"   and c.name='id_forcatalog' and t.name='ctx_loc' and t.type = 'U') " + &
"Alter table ctx_loc add id_forcatalog int identity "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id  " + &
"   and c.name='id_forcatalog' and t.name='ctx_orgs_contact' and t.type = 'U') " + &
"Alter table ctx_orgs_contact add id_forcatalog int identity "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id  " + &
"   and c.name='id_forcatalog' and t.name='ctx_fee_sched_data' and t.type = 'U') " + &
"Alter table ctx_fee_sched_data add id_forcatalog int identity "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id  " + &
"   and c.name='id_forcatalog' and t.name='ctx_contract_contacts' and t.type = 'U') " + &
"Alter table ctx_contract_contacts add id_forcatalog int identity "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"   s.name='ctx_req_tmplt_element' and i.name = 'index_ctx_req_tmplt_element_id_forcatalog' and i.indid > 0 and i.indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_req_tmplt_element_id_forcatalog ON ctx_req_tmplt_element(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_loc' and i.name = 'index_ctx_loc_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_loc_id_forcatalog ON ctx_loc(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_orgs_contact' and i.name = 'index_ctx_orgs_contact_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_orgs_contact_id_forcatalog ON ctx_orgs_contact(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_org_contact' and i.name = 'index_ctx_org_contact_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_org_contact_id_forcatalog ON ctx_org_contact(org_contact_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_fee_sched_data' and i.name = 'index_ctx_fee_sched_data_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_fee_sched_data_id_forcatalog ON ctx_fee_sched_data(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_action_items' and i.name = 'index_ctx_action_items_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_action_items_id_forcatalog ON ctx_action_items(ctx_action_item_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where   " + &
"    s.name='ctx_contract_contacts' and i.name = 'index_ctx_contract_contacts_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_contract_contacts_id_forcatalog ON ctx_contract_contacts(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where   " + &
"    s.name='ctx_contacts_numbers' and i.name = 'index_ctx_contacts_numbers_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_contacts_numbers_id_forcatalog ON ctx_contacts_numbers(contact_num_id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_am_action_item' and i.name = 'index_ctx_am_action_item_seq_id' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_am_action_item_seq_id ON ctx_am_action_item(seq_id) "

//Added by Ken.Guo on 2009-04-10
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('Ctx_am_doc_audit') and   name  = 'index_ctx_am_doc_audit_id_forcatalog' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_am_doc_audit_id_forcatalog ON Ctx_am_doc_audit (id_forcatalog) "

//Added by Ken.Guo on 2009-04-10
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes " + &
"  where  id    = object_id('Ctx_am_doc_image') and   name  = 'index_ctx_am_doc_image_id_forcatalog' and   indid > 0 and   indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_am_doc_image_id_forcatalog ON Ctx_am_doc_image (id_forcatalog) "


//added by nova 2008-04-08
of_enable_fulltext()					

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"exec sp_fulltext_database 'enable' "
//
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_basic_info_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_basic_info_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_basic_info') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFulltextCatalogId' )=0) " + &
"   exec sp_fulltext_table 'ctx_basic_info','create','ctx_basic_info_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'file_location','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','file_location','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'notes','IsFulltextIndexed' ) = 0)  " + &
"    	exec sp_fulltext_column 'ctx_basic_info','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_6','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_7','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_8','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_9','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_9','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_10','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_10','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_11','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_11','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_12','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_12','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_13','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_13','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_14','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_14','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_15','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_15','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_16','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_16','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_17','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_17','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_18','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_18','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_19','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_19','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_20','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_20','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_basic_info','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_basic_info','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_basic_info','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_document_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_am_document_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_document') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'ctx_am_document','create','ctx_am_document_catalog','pk_ctx_am_document' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'doc_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','doc_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'filename','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','filename','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'create_by','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','create_by','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_document'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_document','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_document') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_am_document','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_document') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_am_document','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_document') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_am_document','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_doc_audit_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_am_doc_audit_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_audit') , 'TableFulltextCatalogId' )=0) " + &
" exec sp_fulltext_table 'ctx_am_doc_audit','create','ctx_am_doc_audit_catalog','index_ctx_am_doc_audit_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_audit'),'action','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_audit','action','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_audit'),'filename','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_audit','filename','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_audit'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_audit','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_audit') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_am_doc_audit','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_audit') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_am_doc_audit','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_audit') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_am_doc_audit','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_doc_image_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_am_doc_image_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFulltextCatalogId' )=0) " + &
"   exec sp_fulltext_table 'ctx_am_doc_image','create','ctx_am_doc_image_catalog','index_ctx_am_doc_image_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_image'),'image_file','IsFulltextIndexed' ) = 0)  " + &
"	exec sp_fulltext_column 'ctx_am_doc_image','image_file','add',0,'doc_ext' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_image'),'pdftext','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_doc_image','pdftext','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_am_doc_image','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_am_doc_image','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_am_doc_image','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_elements_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_elements_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_elements') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'ctx_elements','create','ctx_elements_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_elements'),'clause','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_elements','clause','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_elements','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_elements','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_elements','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_req_tmplt_element_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_req_tmplt_element_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_req_tmplt_element') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_req_tmplt_element','create','ctx_req_tmplt_element_catalog','index_ctx_req_tmplt_element_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_req_tmplt_element'),'element_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_req_tmplt_element','element_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_req_tmplt_element') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_req_tmplt_element','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_req_tmplt_element') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_req_tmplt_element','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_req_tmplt_element') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_req_tmplt_element','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contacts_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_contacts_catalog','create' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_contacts') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_contacts') , 'TableFulltextCatalogId' )=0) " + &
"   exec sp_fulltext_table 'ctx_contacts','create','ctx_contacts_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'first_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','first_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'last_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','last_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'middle_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','middle_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'street_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','street_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'street_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','street_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'street_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','street_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_6','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_7','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_8','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_9','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_9','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'custom_10','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','custom_10','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'city','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','city','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts'),'zip','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts','zip','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contacts') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_contacts','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contacts') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_contacts','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contacts') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_contacts','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contract_contacts_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_contract_contacts_catalog','create' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_contract_contacts') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_contract_contacts','create','ctx_contract_contacts_catalog','index_ctx_contract_contacts_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contract_contacts'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contract_contacts','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contract_contacts') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_contract_contacts','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contract_contacts') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_contract_contacts','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contract_contacts') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_contract_contacts','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_contacts_numbers_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_contacts_numbers_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_contacts_numbers') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_contacts_numbers','create','ctx_contacts_numbers_catalog','index_ctx_contacts_numbers_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts_numbers'),'phone','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts_numbers','phone','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts_numbers'),'ext','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts_numbers','ext','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_contacts_numbers'),'contact_email','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_contacts_numbers','contact_email','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contacts_numbers') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_contacts_numbers','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contacts_numbers') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_contacts_numbers','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_contacts_numbers') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_contacts_numbers','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'group_multi_loc_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'group_multi_loc_catalog','create' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('group_multi_loc') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('group_multi_loc') , 'TableFulltextCatalogId' )=0) " + &
" exec sp_fulltext_table 'group_multi_loc','create','group_multi_loc_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'gp_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','gp_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'street1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','street1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'street2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','street2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'city','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','city','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'state','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','state','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'phone','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','phone','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'zip','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','zip','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'contact_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','contact_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_multi_loc'),'info6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_multi_loc','info6','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('group_multi_loc') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'group_multi_loc','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('group_multi_loc') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'group_multi_loc','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('group_multi_loc') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'group_multi_loc','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'group_practice_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'group_practice_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('group_practice') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('group_practice') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'group_practice','create','group_practice_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'street','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','street','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'street_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','street_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'city','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','city','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'pager_number','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','pager_number','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'phone','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','phone','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'ext','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','ext','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'fax','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','fax','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'zip','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','zip','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'contact_person','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','contact_person','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'tax_id','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','tax_id','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'tax_id_other_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','tax_id_other_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'tax_id_other_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','tax_id_other_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'business_mgr','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','business_mgr','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'office_mgr','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','office_mgr','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'e_mail_address','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','e_mail_address','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'web_address','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','web_address','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('group_practice'),'cust_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'group_practice','cust_5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('group_practice') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'group_practice','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('group_practice') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'group_practice','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('group_practice') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'group_practice','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_loc_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_loc_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_loc') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_loc','create','ctx_loc_catalog','index_ctx_loc_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'group_number','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_loc','group_number','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_loc'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_loc','custom_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_loc') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_loc','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_loc') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_loc','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_loc') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_loc','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_orgs_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_orgs_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_orgs') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_orgs') , 'TableFulltextCatalogId' )=0) " + &
"  exec sp_fulltext_table 'ctx_orgs','create','ctx_orgs_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'org_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','org_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'street_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','street_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'street_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','street_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'street_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','street_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'city','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','city','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'zip','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','zip','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'drections','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','drections','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_6','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_7','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_8','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_9','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_9','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs'),'custom_10','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs','custom_10','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_orgs') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_orgs','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_orgs') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_orgs','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_orgs') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_orgs','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_orgs_contact_catalog') " + &
"begin " + &
"  	exec sp_fulltext_catalog 'ctx_orgs_contact_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_orgs_contact') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_orgs_contact','create','ctx_orgs_contact_catalog','index_ctx_orgs_contact_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_orgs_contact'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_orgs_contact','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_orgs_contact') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_orgs_contact','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_orgs_contact') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_orgs_contact','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_orgs_contact') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_orgs_contact','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_org_contact_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_org_contact_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_org_contact') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_org_contact','create','ctx_org_contact_catalog','index_ctx_org_contact_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'contact_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','contact_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'Department','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','Department','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'Phone','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','Phone','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_org_contact'),'org_cnt_email','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_org_contact','org_cnt_email','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_org_contact') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_org_contact','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_org_contact') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_org_contact','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_org_contact') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_org_contact','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_fee_sched_hdr_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_fee_sched_hdr_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_fee_sched_hdr') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_hdr') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'ctx_fee_sched_hdr','create','ctx_fee_sched_hdr_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','custom_5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_hdr'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_hdr','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_hdr') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_fee_sched_hdr','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_hdr') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_fee_sched_hdr','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_hdr') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_fee_sched_hdr','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_fee_sched_data_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_fee_sched_data_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_data') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'ctx_fee_sched_data','create','ctx_fee_sched_data_catalog','index_ctx_fee_sched_data_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_data'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_data','custom_5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_data') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_fee_sched_data','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_data') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_fee_sched_data','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_data') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_fee_sched_data','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_action_items_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_action_items_catalog','create' " + &
"end  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_action_items') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'ctx_action_items','create','ctx_action_items_catalog','index_ctx_action_items_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_action_items'),'action_user','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_action_items','action_user','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_action_items'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_action_items','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_action_items') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_action_items','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_action_items') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_action_items','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_action_items') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_action_items','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'code_lookup_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'code_lookup_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('code_lookup') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('code_lookup') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'code_lookup','create','code_lookup_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('code_lookup'),'code','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'code_lookup','code','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('code_lookup'),'description','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'code_lookup','description','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('code_lookup') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'code_lookup','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('code_lookup') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'code_lookup','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('code_lookup') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'code_lookup','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'app_facility_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'app_facility_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('app_facility') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('app_facility') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'app_facility','create','app_facility_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'facility_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','facility_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'street','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','street','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'street_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','street_2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'city','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','city','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'state','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','state','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'zip','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','zip','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'phone','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','phone','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'ext','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','ext','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'fax','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','fax','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'contact','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','contact','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'web_address','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','web_address','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('app_facility'),'email_address','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'app_facility','email_address','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('app_facility') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'app_facility','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('app_facility') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'app_facility','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('app_facility') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'app_facility','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_req_profile_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_req_profile_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_req_profile') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_req_profile') , 'TableFulltextCatalogId' )=0) " + &
"exec sp_fulltext_table 'ctx_req_profile','create','ctx_req_profile_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_req_profile'),'rqmnt_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_req_profile','rqmnt_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_req_profile'),'rqmnt_description','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_req_profile','rqmnt_description','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_req_profile') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_req_profile','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_req_profile') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_req_profile','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_req_profile') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_req_profile','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_clause_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_acp_clause_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_acp_clause') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_acp_clause','create','ctx_acp_clause_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'clause_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','clause_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'description','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','description','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'information_message','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','information_message','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'approved_by','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause','approved_by','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause'),'image_file','IsFulltextIndexed' ) = 0)  " + &
"	exec sp_fulltext_column 'ctx_acp_clause','image_file','add',0,'doctype' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_acp_clause','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_acp_clause','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_acp_clause','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_template_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_acp_template_catalog','create' " + &
" end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_acp_template') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_template') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_acp_template','create','ctx_acp_template_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'Template_Name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','Template_Name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'Description','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','Description','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'Reviewed_By','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_template','Reviewed_By','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_template'),'image_file','IsFulltextIndexed' ) = 0)  " + &
"	exec sp_fulltext_column 'ctx_acp_template','image_file','add',0,'doctype' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_template') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_acp_template','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_template') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_acp_template','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_template') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_acp_template','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_document_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_acp_document_catalog','create' " + &
"   	 " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_acp_document') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_document') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_acp_document','create','ctx_acp_document_catalog',@ls_key_name "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Document_Name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Document_Name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Files','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Files','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Description','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Description','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'Reviewed_By','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_document','Reviewed_By','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'image_file','IsFulltextIndexed' ) = 0)  " + &
"	exec sp_fulltext_column 'ctx_acp_document','image_file','add',0,'Document_Type' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_document') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_acp_document','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_document') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_acp_document','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_document') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_acp_document','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_am_action_item_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_am_action_item_catalog','create' " + &
"    " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_am_action_item') , 'TableFulltextCatalogId' )=0) " + &
"	exec sp_fulltext_table 'ctx_am_action_item','create','ctx_am_action_item_catalog','index_ctx_am_action_item_seq_id' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_action_item'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_am_action_item','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_action_item') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_am_action_item','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_action_item') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_am_action_item','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_action_item') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_am_action_item','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysobjects where name = 'fn_ctx' and type = 'FN') " + &
"  DROP FUNCTION fn_ctx "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE FUNCTION fn_ctx(@ctx_id int)  " + &
" RETURNS varchar(255)  " + &
" AS  " + &
" BEGIN  " + &
" Declare @company_name varchar(255)  " + &
" Declare @product_name varchar(255)  " + &
" Select top 1 @company_name = facility_name  " + &
" from app_facility, ctx_basic_info  " + &
" where ctx_basic_info.ctx_id = @ctx_id and app_facility.facility_id = ctx_basic_info.app_facility  " + &
" Select top 1 @product_name = code_lookup.code + ' ' + code_lookup1.code   " + &
" from ctx_products,code_lookup,code_lookup code_lookup1  " + &
" where ctx_products.ctx_id = @ctx_id  " + &
" and code_lookup.lookup_code = ctx_products.product_id  " + &
" and  code_lookup1.lookup_code = ctx_products.product_type  " + &
" If @company_name is null Return @product_name   " + &
" If @product_name is null Return @company_name  " + &
" Return @company_name + ' - ' + @product_name  " + &
" END "

of_execute_sqls("of_ver70_release_createfulltext1")

Return 1
end function

public function integer of_ver60_patch_table1 ();is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_primary_office') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_primary_office DEFAULT 0 FOR primary_office "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_exp_letters') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_exp_letters DEFAULT 0 FOR exp_letters "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_include_in_directory') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_include_in_directory DEFAULT 0 FOR include_in_directory "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_prac_correspondence') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_prac_correspondence DEFAULT 0 FOR prac_correspondence "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_home_address') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_home_address DEFAULT 0 FOR home_address "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_additional_office') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_additional_office DEFAULT 0 FOR additional_office "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_mailing') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_mailing DEFAULT 0 FOR mailing "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If Not Exists (select TOP 1 1 from sysobjects where name = 'DF_pd_address_link_billing') " + &
	"	ALTER TABLE pd_address_link ADD CONSTRAINT	DF_pd_address_link_billing DEFAULT 0 FOR billing "
//==============================APPEON BEGIN==========================
// $<Deleted>:   Date: Feb 19,2008       Author:Nova
//--------------------------------------------------------------------
// $<reason>   Fix a defect.
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists( " + &
//"   select TOP 1 1 from syscolumns c, sysobjects t " + &
//"   where c.id=t.id  " + &
//"     and c.name='force_update' " + &
//"     and t.name='ctx_screen' " + &
//"     and t.type = 'U') " + &
//"alter table ctx_screen add force_update text null "
//==============================APPEON END============================
of_execute_sqls("of_ver60_patch_table1")

RETURN 1

end function

public function integer of_ver60_release_table1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='pd_work_gap' " + &
"            and   type = 'U') " + &
"Create TABLE pd_work_gap ( rec_id numeric(10,0) not null, prac_id numeric(10,0) not null, start_date datetime null, end_date datetime null, reason_code numeric(10,0) null, gap_type numeric(10,0) null, gap_reason varchar(255) ,     primary key (rec_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='gp_practice_info' " + &
"            and   type = 'U') " + &
"Create table gp_practice_info ( rec_id numeric(10,0) not null, prac_id numeric(10,0) not null, start_date datetime null, check_payable varchar(40) null, gender_limitations numeric(10,0) null, min_age integer null, max_age integer null, billing_dept varchar(40) , other_limitations varchar(255) null, cust_1 varchar(150) null,cust_2 varchar(150) null, cust_3 varchar(150) null, cust_4 varchar(150) null, cust_5 varchar(150) null,cust_d1 datetime null, cust_d2 datetime null, primary key (rec_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='sys_storage_area' " + &
"            and   type = 'U') " + &
"create table sys_storage_area ( area_id		integer		not null, area_name	varchar(30)	null, area_doc_path	varchar(150)	null, area_desc	varchar(150)	null, primary key(Area_id) ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='sys_storage_docs' " + &
"            and   type = 'U') " + &
"create table sys_storage_docs ( area_id		integer		not null, doc_name	varchar(75)	not null, doc_type	varchar(1)		null,	doc_data	image		null, last_edit_date	datetime	null, user_id		varchar(10)	null, primary key(area_id, doc_name) ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='app_blob' " + &
"            and   type = 'U') " + &
"create table app_blob ( app_id		numeric (10,0)	not null, app_image	image		null, primary key(app_id) ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='pd_app_audit_temp' " + &
"            and   type = 'U') " + &
"create table  pd_app_audit_temp ( " + &
"record_id            numeric(10)          not null, " + &
"prac_id              numeric(6)           not null, " + &
"facility_id          integer              not null, " + &
"seq_no               integer              not null, " + &
"app_audit_id         integer              not null, " + &
"completed            varchar(1)              null, " + &
"fax_message          varchar(255)         null, " + &
"active_status        integer              null, " + &
"date_completed       datetime             null, " + &
"data_status          numeric(6)           null, " + &
"notes                varchar(255)         null, " + &
"identifying_number    varchar(50)          null, " + &
"appt_stat_id         numeric(12)          null, " + &
"conv_prac_id          varchar(20)          null, " + &
"de_rec_id             numeric (10,0) null, " + &
"primary key  (record_id)) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"    from  sysobjects " + &
"   where  name='pd_review_export' " + &
"    and   type = 'U') " + &
"CREATE TABLE pd_review_export (	export_id decimal(16, 2)  null,	prac_id decimal(16, 2)  null,	review_id decimal(16, 2)  null,	pd_review_id decimal(16, 2)  null,	gp_id decimal(16, 2)  null,	exported datetime  null,	imported datetime  null,	prac_name varchar(100)  null,	review_name varchar(100)  null,	street_1 varchar(150)  null,	street_2 varchar(150)  null,	city varchar(50)  null,	state varchar(2)  null,	zip varchar(12)  null,	phone varchar(20)  null,	contact_person varchar(50)  null,	sent_to varchar(20)  null,	sent_to_email varchar(100)  null,	sent_by varchar(20)  null,	doc_id varchar(25)  null,	notes varchar(255)  null ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"    from  sysobjects " + &
"   where  name='pd_review_isite' " + &
"    and   type = 'U') " + &
"CREATE TABLE pd_review_isite (	unique_id decimal(16, 1)  null,	question_id float  null,	review_id_hdr float  null,	question char(255)  null,	question_order float  null,	group_id float  null,	sub_group_id float  null,	group_name varchar(150)  null,	sub_group_name varchar(150)  null,	review_id_quest float  null,	answer_id float  null,	question_answer varchar(100)  null,	answer_score decimal(16, 1)  null,	answer_order float  null,	survey_rec_id decimal(16, 0)  null,	review_type decimal(16, 0)  null,	review_id_pd float  null,	review_description varchar(100)  null,	maximum_score float  null,	minimum_passing_score float  null,	site_rec_id decimal(16, 0)  null,	question_answer_id decimal(16, 0)  null,	answer_on_off float  null,	score float  null,	notes varchar(255)  null,	street varchar(150)  null,	city varchar(25)  null,	state varchar(15)  null,	zip varchar(11)  null,	street_2 varchar(150)  null) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='security_settings' " + &
"            and   type = 'U') " + &
"create table security_settings (exp_days integer not null, new_change_pw integer null, min_len integer null, must_have_num integer null, cant_use_last integer null, login_lockout integer null, lockout_min integer null, opt_1 integer null,opt_2 integer null, opt_3 integer null,opt_4 integer null, opt_5 integer null ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 " + &
"            from  sysobjects " + &
"           where  name='priv_ccp_facility' " + &
"            and   type = 'U') " + &
"Create table priv_ccp_facility (ccp_id numeric(10,0) not null, clin_id numeric(10,0) not null, facility_id integer not null, primary key(ccp_id) ) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='description' " + &
"     and t.name='pd_app_audit' " + &
"     and t.type = 'U') " + &
"alter table pd_app_audit add description varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='description' " + &
"     and t.name='pd_app_audit_temp' " + &
"     and t.type = 'U') " + &
"alter table pd_app_audit_temp add description varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='app_type' " + &
"     and t.name='pd_app_audit' " + &
"     and t.type = 'U') " + &
"alter table pd_app_audit add app_type varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='app_type' " + &
"     and t.name='pd_app_audit_temp' " + &
"     and t.type = 'U') " + &
"alter table pd_app_audit_temp add app_type varchar(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='downloadurl' " + &
"     and t.name='icred_settings' " + &
"     and t.type = 'U') " + &
"Alter table icred_settings add downloadurl varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='modify_date' " + &
"     and t.name='app_blob' " + &
"     and t.type = 'U') " + &
"alter table app_blob add modify_date datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='table_field_name' " + &
"     and t.name='conv_view_where' " + &
"     and t.type = 'U') " + &
"ALTER TABLE conv_view_where ALTER COLUMN table_field_name varchar(255) NOT NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='field_x' " + &
"     and t.name='conv_view_fields' " + &
"     and t.type = 'U') " + &
"ALTER TABLE conv_view_fields ALTER COLUMN field_x numeric( 5, 0) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='modify_date' " + &
"     and t.name='pd_images' " + &
"     and t.type = 'U') " + &
"ALTER TABLE pd_images ADD modify_date datetime null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( " + &
"   select TOP 1 1 from sysobjects " + &
"   where name='FK_CTX_FEE__LOCATIONS_CODE_LOO'  " + &
"   and type = 'F')   " + &
"ALTER TABLE CTX_FEE_SCHED_LOCATIONS DROP CONSTRAINT FK_CTX_FEE__LOCATIONS_CODE_LOO "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='image_flag' " + &
"     and t.name='security_users' " + &
"     and t.type = 'U') " + &
"Alter table security_users add image_flag char(1) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='de_queue' " + &
"     and t.name='pd_images' " + &
"     and t.type = 'U') " + &
"Alter table pd_images add de_queue integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='auto_generate' " + &
"     and t.name='data_view_app_audit' " + &
"     and t.type = 'U') " + &
"Alter table data_view_app_audit add auto_generate integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='receive_from_de' " + &
"     and t.name='data_view_app_audit' " + &
"     and t.type = 'U') " + &
"Alter table data_view_app_audit add receive_from_de integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='compl_other_facil' " + &
"     and t.name='data_view_app_audit' " + &
"     and t.type = 'U') " + &
"Alter table data_view_app_audit add compl_other_facil integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='de_rec_id' " + &
"     and t.name='pd_app_audit' " + &
"     and t.type = 'U') " + &
"Alter table pd_app_audit add de_rec_id numeric (10,0) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='notes' " + &
"     and t.name='pd_app_audit' " + &
"     and t.type = 'U') " + &
"Alter table pd_app_audit alter column notes varchar(255) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='miss_letter_90' " + &
"     and t.name='facility' " + &
"     and t.type = 'U') " + &
"Alter table facility add miss_letter_90 integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='reap_user' " + &
"     and t.name='facility' " + &
"     and t.type = 'U') " + &
"Alter table facility add reap_user integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='common_core' " + &
"     and t.name='priv_clinical_area' " + &
"     and t.type = 'U') " + &
"Alter table priv_clinical_area add common_core integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='de_queue' " + &
"     and t.name='image_type' " + &
"     and t.type = 'U') " + &
"Alter table image_type add de_queue integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='prod_id' " + &
"     and t.name='security_modules' " + &
"     and t.type = 'U') " + &
"Alter table security_modules add prod_id integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='prod_id' " + &
"     and t.name='security_sub_module' " + &
"     and t.type = 'U') " + &
"Alter table security_sub_module add prod_id integer null "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( " + &
"   select TOP 1 1 from syscolumns c, sysobjects t " + &
"   where c.id=t.id  " + &
"     and c.name='suite_apart' " + &
"     and t.name='group_practice' " + &
"     and t.type = 'U') " + &
"Alter table group_practice add suite_apart varchar(50) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete From sys_fields where table_id = 54 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete From sys_fields where table_id = 56 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete from sys_tables where table_id = 54 "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Delete from sys_tables where table_id = 56 "

of_execute_sqls("of_ver60_release_table1")

Return 1
end function

public function integer of_ver80_updates ();//Update SQL for ver 8.0

//String ls_dev_type, ls_from_version
//
//ls_dev_type = of_get_development()
//ls_from_version = of_get_from_version()
//
//==============================APPEON BEGIN==========================
// $<Modified>:   Date: Feb 27,2008       Author:Nova
//--------------------------------------------------------------------
// $<reason>   Fix a defect.
//important: shield temporarily,when issue,must recover
//Execute patch only if upgraded from current verison under non-develop mode
//IF ls_dev_type = '0' and gs_current_version = ls_from_version THEN
//	of_ver80_patch_table1()
//ELSE
	of_ver80_release_table1()
	of_ver80_release_table2()
	of_ver80_patch_table1()
	//moved from  of_v70_updates by nova 2008-03-28
	//reason: BugN032701(WEB&PB  P2)
	of_ver70_release_view1()
	of_ver70_release_view2()
	
	of_ver80_release_view1()
	
	//added by Nova      2008-06-19
	//reason:  mail from Robert Goemans,subject:changes needed
	of_ver80_patch_view1()
//END IF
//==============================APPEON END============================
RETURN 1

end function

public function integer of_ver60_updates ();//Update SQL for ver 6.0

of_ver60_release_table1()
of_ver60_patch_table1()

RETURN 1
end function

public function integer of_ver70_updates ();//Update SQL for ver 7.0

//of_ver70_release_dropfulltext1()
	
of_ver70_release_table1()
of_ver70_release_table2()
of_ver70_release_table3()
	
of_ver70_patch_table1()

//if of_get_app_set()=1 then
//	of_ver70_release_createfulltext1()
//end if	

RETURN 1

end function

public function integer of_ver80_patch_view1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_stausaudit' and type = 'V')  " + &
"  drop view v_ctx_stausaudit "




is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_stausaudit  " + &
"AS  " + &
"SELECT     a.ctx_id, a.seq_no, a.status, c.code AS status_code, c.description AS status_description, a.start_time, a.delay_days, a.user_id " + &
"FROM         sys_StatusAudit AS a LEFT OUTER JOIN  " + &
"             code_lookup AS c ON a.status = c.lookup_code " 

of_execute_sqls("of_ver80_patch_view1")

return 1
end function

public function integer of_ver85_release_table1 ();//Added by Alfee on 07.11.2008

//added by nova mail from andy 2008.07.11
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists (select TOP 1 1 from  sysobjects where  name = 'app_image_defaults' and type = 'U')   " + &
	"         Create table app_image_defaults    " + &
	"         (   " + &
	"                   app_image_id numeric (10,0) not null,   " + &
	"                   app_id integer not null,    " + &
	"                   image_type integer not null,     " + &
	"                 constraint PK_app_image_defaults primary key (app_image_id)    " + &
	"         )   "

//added by nova mail from wuzhijun 2008.07.11
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists (select TOP 1 1 from  sysobjects where  name = 'pd_photo' and type = 'U')   " + &
	"CREATE TABLE pd_photo    " + &
	"(      prac_id numeric(10,0) not null,    " + &
	"       image_type varchar(10) null,    " + &
	"       image_data image null ,   " + &
	"       CONSTRAINT PK_PD_PHOTO PRIMARY KEY (prac_id)    " + &
	")    "


//For License Agreement - Alfee 07.11.2008
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='lic_agr_img' and t.name='security_users' and t.type = 'U')   " + &
	"Alter table security_users add lic_agr_img integer null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='lic_agr_asa' and t.name='security_users' and t.type = 'U')   " + &
	"Alter table security_users add lic_agr_asa integer null "


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='data_status' and t.name='verif_info' and t.type = 'U')   " + &
	"Alter table verif_info add data_status integer null "

//For Screen - Evan 07.16.2008
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists (select TOP 1 1 " + &
	"            from  sysobjects " + &
	"           where  name = 'ctx_tabpage_properties' " + &
	"            and   type = 'U') " + &
	"create table ctx_tabpage_properties " + &
	"( " + &
	"data_view_id integer not null, " + &
	"tabpage_name varchar(200) not null, " + &
	"text varchar(100) null, " + &
	"text_color integer null, " + &
	"icon_visible char(1) null, " + &
	"icon_update_date datetime, " + &
	"icon image null, " + &
	"constraint pk_ctx_tabpage_properties_id primary key (data_view_id, tabpage_name) " + &
	") "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='titlebar_visible' and t.name='ctx_screen' and t.type = 'U') " + &
	"alter table ctx_screen add titlebar_visible char(1) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='titlebar_text' and t.name='ctx_screen' and t.type = 'U') " + &
	"alter table ctx_screen add titlebar_text varchar(200) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='boarder_style' and t.name='ctx_screen' and t.type = 'U') " + &
	"alter table ctx_screen add boarder_style varchar(20) null "
//Added by Nova on 2008-08-01 begin 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='dept_chair' and t.type = 'U') " + &
	"ALTER TABLE dept_chair ALTER COLUMN phone varchar(25) null "


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='fax' and t.name='dept_chair' and t.type = 'U') " + &
	"ALTER TABLE dept_chair ALTER COLUMN fax varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='facility' and t.type = 'U') " + &
	"ALTER TABLE facility ALTER COLUMN phone varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='fax' and t.name='facility' and t.type = 'U') " + &
	"ALTER TABLE facility ALTER COLUMN fax varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='organization' and t.type = 'U') " + &
	"ALTER TABLE organization ALTER COLUMN phone varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='fax' and t.name='organization' and t.type = 'U') " + &
	"ALTER TABLE organization ALTER COLUMN fax varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='pd_review_export' and t.type = 'U') " + &
	"ALTER TABLE pd_review_export ALTER COLUMN phone varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='npdb_rpoc' and t.type = 'U') " + &
	"ALTER TABLE npdb_rpoc ALTER COLUMN phone varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='pd_address' and t.type = 'U') " + &
	"ALTER TABLE pd_address ALTER COLUMN phone varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='fax' and t.name='pd_address' and t.type = 'U') " + &
	"ALTER TABLE pd_address ALTER COLUMN fax varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN phone varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='phone' and t.name='address_lookup' and t.type = 'U') " + &
	"ALTER TABLE address_lookup ALTER COLUMN phone varchar(25) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='fax' and t.name='address_lookup' and t.type = 'U') " + &
	"ALTER TABLE address_lookup ALTER COLUMN fax varchar(25) null"

//For contract notes - Evan 08.11.2008
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if exists( " + &
	"   select TOP 1 1 from syscolumns c, sysobjects t " + &
	"   where c.id=t.id  " + &
	"     and c.name='notes' " + &
	"     and t.name='ctx_basic_info' " + &
	"     and t.type = 'U') " + &
	"alter table ctx_basic_info alter column notes varchar(8000) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='return_phone' and t.name='facility' and t.type = 'U') " + &
	"ALTER TABLE facility ALTER COLUMN return_phone varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='return_fax' and t.name='facility' and t.type = 'U') " + &
	"ALTER TABLE facility ALTER COLUMN return_fax varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='npdb_cert_phone' and t.name='facility' and t.type = 'U') " + &
	"ALTER TABLE facility ALTER COLUMN npdb_cert_phone varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='agent_phone' and t.name='npdb_agnt' and t.type = 'U') " + &
	"ALTER TABLE npdb_agnt ALTER COLUMN agent_phone varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='cert_phone' and t.name='npdb_cert' and t.type = 'U') " + &
	"ALTER TABLE npdb_cert ALTER COLUMN cert_phone varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='contact_phone' and t.name='app_hdr' and t.type = 'U') " + &
	"ALTER TABLE app_hdr ALTER COLUMN contact_phone varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='pager_number' and t.name='pd_address' and t.type = 'U') " + &
	"ALTER TABLE pd_address ALTER COLUMN pager_number varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='answering_service' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN answering_service varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='beeper_1' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN beeper_1 varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='beeper_2' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN beeper_2 varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='car_phone_1' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN car_phone_1 varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='car_phone_2' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN car_phone_2 varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='personal_pager' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN personal_pager varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if  exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='hospital_pager' and t.name='pd_basic' and t.type = 'U') " + &
	"ALTER TABLE pd_basic ALTER COLUMN hospital_pager varchar(25) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='set_ver_tip' and t.name='icred_settings' and t.type = 'U')   " + &
	"alter table icred_settings add  set_ver_tip int null  "

//-------Begin Add by Evan on 08.19.2008 -----------------------
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists (select TOP 1 1 " + &
	"            from  sysobjects " + &
	"           where  name='ctx_bidq' " + &
	"            and   type = 'U') " + &
	"create table ctx_bidq " + &
	"( " + &
	"bidq_id       integer identity not null, " + &
	"bidq_name     varchar(100) null, " + &
	"constraint    pk_ctx_bidq_id primary key (bidq_id) " + &
	") "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists (select TOP 1 1 " + &
	"            from  sysobjects " + &
	"           where  name='ctx_bidq_doc' " + &
	"            and   type = 'U') " + &
	"create table ctx_bidq_doc " + &
	"( " + &
	"bidq_doc_id   integer identity not null, " + &
	"bidq_id       integer not null, " + &
	"doc_name      varchar(200) null, " + &
	"doc_type      char(1) null, " + &
	"category      integer null, " + &
	"doc_from_name varchar(20) null, " + &
	"filename      varchar(250) null, " + &
	"proc_type     char(1) null, " + &
	"notes         varchar(250) null, " + &
	"image_file    image null, " + &
	"image_text    text null, " + &
	"constraint    pk_ctx_bidq_doc_id primary key (bidq_doc_id) " + &
	") "
//--------End Add by Evan on 08.19.2008 ------------------------

//Added by Nova on 2008-08-01 end 

//Added by Nova on 2008-08-19
//reason:dashborad table

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_settings' ) " + &
   "      Create Table dashboard_settings " + &
   "      ( " + &
   "                id integer  not null, " + &
   "                title_bg_color numeric(10,0) null, " + &
   "                title_height numeric(10,0) null, " + &
   "                logo image null, " + &
   "                logo_org_height numeric(10,0) null, " + &
   "                logo_org_width numeric(10,0) null, " + &
   "                logo_extname varchar(3) null,   " + &
   "                logo_size numeric(10,0) null, " + &
   "                logo_verif_data varchar(20) null, " + &
   "                Primary Key(id) " + &
   "      ) " 



is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_notes' and   type = 'U' and   type = 'U' ) " + &
	"	Create Table dashboard_gadgets_notes " + &
	"	( " + &
	"	id numeric(10) identity not null, " + &
	"	user_id varchar(50) not null, " + &
	"	tab_id numeric(10) not null, " + &
	"	notes varchar(200) null, " + &
	"	back_color numeric(10) null, " + &
	"	create_date datetime null, " + &
	"	notes_x numeric(6) null,	 " + &
	"	notes_y numeric(6) null, " + &
	"	notes_width numeric(6) null, " + &
	"	notes_height numeric(6) null, " + &
	"	notes_order integer null,	 " + &
	"	is_hide	 integer null, " + &
	"	is_alwaysontop integer null, " + &
	"	is_alarm integer null, " + &
	"	alarm_date datetime null, " + &
	"	is_alarmed integer null, " + &
	"	Primary Key(id) " + &
	"	) "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_favorite' and   type = 'U' ) " + &
	"	Create Table dashboard_gadgets_favorite " + &
	"	( " + &
	"	id numeric(10) identity not null, " + &
	"	user_id varchar(50) not null, " + &
	"	data_id numeric(10) not null, " + &
	"	favorite_type varchar(10) not null, " + &
	"	Primary Key(id) " + &
	"	) "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_recent' and   type = 'U' ) " + &
	"	Create Table dashboard_gadgets_recent " + &
	"	( " + &
	"	id numeric(10) identity not null, " + &
	"	user_id varchar(50) not null, " + &
	"	data_id numeric(10) not null, " + &
	"	data_ext_id numeric(10) null, " + &
	"	access_date datetime not null,	 " + &
	"	recent_type varchar(10) not null, " + &
	"	Primary Key(id) " + &
	"	) "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets' and   type = 'U' ) " + &
	"Create Table dashboard_gadgets " + &
	"( " + &
	"	gadget_id  numeric(10,0) not null, " + &
	"	gadget_classname varchar(50) not null, " + &
	"	gadget_title varchar(50) not null, " + &
	"	gadget_auto_height integer not null,  " + &
	"	Primary Key(gadget_id) " + &
	") "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_tabs' and   type = 'U') " + &
	"	Create Table dashboard_tabs " + &
	"	( " + &
	"		tab_id  numeric(10,0) not null, " + &
	"		user_id varchar(50) not null, " + &
	"		tab_style varchar(2) not null, " + &
	"		tab_style_type varchar(1) not null, " + &
	"		tab_title varchar(50) not null, " + &
	"		tab_bg_color numeric(10,0) null,	 " + &
	"		gadget_title_color numeric(10,0) null, " + &
	"		gadget_bg_color numeric(10,0) null, " + &
	"		single_double_clk integer null default 1, " + &
	"		tab_locked integer null default 0,	 " + &
	"		tab_order integer null, " + &
	"		Primary Key(tab_id) " + &
	"	) "


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_tab_gadgets' and   type = 'U' ) " + &
	"	Create Table dashboard_tab_gadgets " + &
	"	( " + &
	"		tab_id  numeric(10,0) not null, " + &
	"		area_number integer not null, " + &
	"		gadget_id numeric(10,0) not null, " + &
	"		gadget_maximize integer null default 1, " + &
	"		gadget_title varchar(50) null,	 " + &
	"		gadget_rows_number integer null, " + &
	"		gadget_order integer null,		 " + &
	"		Primary Key(tab_id,gadget_id) " + &
	"	) "


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_template_setting'and   type = 'U' ) " + &
	"	Create Table dashboard_template_setting " + &
	"	( " + &
	"		id numeric(10,0) identity not null, " + &
	"		template_name varchar(50) not null, " + &
	"		tab_style varchar(2) not null, " + &
	"		tab_style_type varchar(1) not null, " + &
	"		tab_title varchar(50) null, " + &
	"		area_number integer not null, " + &
	"		gadget_id numeric(10,0) not null, " + &
	"		gadget_order integer null,	 " + &
	"		Primary Key(id) " + &
	") "

//For Date alarm enhancement on notification users - Alfee 08.20.2008
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='alm_mailto' and t.name='ctx_notification' and t.type = 'U')   " + &
	"Alter table ctx_notification add alm_mailto varchar(2000) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='alm_mailto' and t.name='ctx_ai_notification' and t.type = 'U')   " + &
	"Alter table ctx_ai_notification add alm_mailto varchar(2000) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(   select 1 from syscolumns c, sysobjects t   " + &
	"  where c.id=t.id  and c.name='alm_mailto' and t.name='ctx_am_ai_notification' and t.type = 'U')   " + &
	"Alter table ctx_am_ai_notification add alm_mailto varchar(2000) null "

//

//Added by Nova on 2008-08-22
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'sys_recred_log'and   type = 'U' ) " + &
	"Create table sys_recred_log    " + &
	"(rec_id decimal(10,0) not null,   " + &
	"prac_id decimal(10,0) null,   " + &
	"facility_id decimal(10,0) null,   " + &
	"seq_no decimal(10,0) null,    " + &
	"date_run timestamp null,    " + &
	"run_by varchar(25) null,    " + &
	"run_type char(3) null,   " + &
	"primary key (rec_id)   " + &
	")   "
//Added by Nova on 2008-08-26 profile report table
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'data_view_report_fields' and   type = 'U') " + &
	"create table data_view_report_fields ( " + &
	"   data_view_field_id   numeric(10)          not null, " + &
	"   data_view_id         int                  not null, " + &
	"   screen_id            int                  not null, " + &
	"   field_id             int                  not null, " + &
	"   field_label          varchar(255)         null, " + &
	"   field_order          int                  null, " + &
	"   display_only         varchar(1)           null, " + &
	"   required             varchar(1)           null, " + &
	"   data_seperator       varchar(1)           null, " + &
	"   seperator_hdr        varchar(25)          null, " + &
	"   include_in_browse    varchar(1)           null, " + &
	"   browse_tab_order     int                  null, " + &
	"   browse_tab_width     int                  null, " + &
	"  field_x              int                  null, " + &
	"   field_y              int                  null, " + &
	"   field_width          int                  null, " + &
	"   field_height         int                  null, " + &
	"   justification        varchar(1)           null, " + &
	"   sys_table_id         int                  null, " + &
	"   sys_field_id         int                  null, " + &
	"   edit_field_type      varchar(2)           null, " + &
	"   field_label_justification int             null, " + &
	"   field_label_x        int                  null, " + &
	"   field_label_y        int                  null, " + &
	"   field_label_width    int                  null, " + &
	"   visible              varchar(1)           null, " + &
	"   font_wieght          int                  null, " + &
	"   tab_address          int                  null, " + &
	"   back_address         int                  null, " + &
	"   label_underline      varchar(1)           null, " + &
	"   field_underline      varchar(1)           null, " + &
	"   field_font_italic    int                  null, " + &
	"   label_font_italic    int                  null, " + &
	"   label_font_weight    int                  null, " + &
	"   ismodify             char(1)              null default '0', " + &
	"   report_from          char(1)              null default 'P', " + &
	"   profile_view_id      int                  not null, " + &
	"   constraint PK_data_view_report_fields primary key  (data_view_field_id, data_view_id, profile_view_id) " + &
	")"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'data_view_report_objects' and   type = 'U') " + &
	"create table data_view_report_objects ( " + &
	"   data_view_object_id  int                  not null, " + &
	"   data_view_id         int                  not null, " + &
	"   screen_id            int                  not null, " + &
	"   object_text          text                 null, " + &
	"   object_width         int                  null, " + &
	"   object_height        int                  null, " + &
	"   object_x             int                  null, " + &
	"   object_y             int                  null, " + &
	"   object_alignment     int                  null, " + &
	"   object_italic        int                  null, " + &
	"   object_bold          int                  null, " + &
	"   object_underline     int                  null, " + &
	"   object_color         numeric(6)           null, " + &
	"   object_type          varchar(1)           null, " + &
	"   object_justification int                  null, " + &
	"   report_from          char(1)              null default 'P', " + &
	"   profile_view_id      int                  not null, " + &
	"   constraint PK_data_view_report_objects primary key  (data_view_object_id) " + &
	")"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'profile_report_dw' and   type = 'U') " + &
	"create table profile_report_dw ( " + &
	"   id                   numeric(18)          identity, " + &
	"   data_view_id         int                  null, " + &
	"   cur_dw               varchar(50)          null, " + &
	"   prf_dw               varchar(50)          null, " + &
	"   scr_dw               varchar(50)          null, " + &
	"   prf_id               int                  null, " + &
	"   scr_id               int                  null, " + &
	"   table_id             int                  null, " + &
	"   report_id            int                  null, " + &
	"   dw_name              varchar(50)          null, " + &
	"   retrieval_aruments   char(2)              null, " + &
	"    profile_view_id      int null," + &
	"   constraint PK_profile_report_dw primary key  (id) " + &
	")"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'screen_report_objects' and   type = 'U') " + &
	"create table screen_report_objects ( " + &
	"   data_view_object_id  int                  not null, " + &
	"   data_view_id         int                  not null, " + &
	"   screen_id            int                  not null, " + &
	"   object_name          varchar(50)          null, " + &
	"   object_text          text                 null, " + &
	"   object_width         int                  null, " + &
	"   object_height        int                  null, " + &
	"   object_x             int                  null, " + &
	"   object_y             int                  null, " + &
	"   object_alignment     int                  null, " + &
	"   object_italic        int                  null, " + &
	"   object_bold          int                  null, " + &
	"   object_underline     int                  null, " + &
	"   object_color         numeric(6)           null, " + &
	"   object_type          varchar(1)           null, " + &
	"   object_justification int                  null, " + &
	"   report_from          char(1)              null default 'P', " + &
	"   visible              char(1)              null, " + &
	"   ismodify             char(1)              null default '0', " + &
	"   profile_view_id      int                  not null," + &
	"   constraint PK_screen_report_objects primary key  (data_view_object_id) " + &
	")"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'sys_report_fields' and   type = 'U') " + &
	"create table sys_report_fields ( " + &
	"   table_id             int                  not null, " + &
	"   field_id             int                  not null, " + &
	"   field_order          int                  not null, " + &
	"   field_name           varchar(50)          not null, " + &
	"   field_type           varchar(2)           not null, " + &
	"   field_len            int                  not null, " + &
	"   field_name_allias    varchar(50)          null, " + &
	"   field_case           varchar(1)           null, " + &
	"   lookup_type          varchar(1)           null, " + &
	"   lookup_field         varchar(1)           null, " + &
	"   lookup_code          varchar(40)          null, " + &
	"   lookup_field_name    varchar(50)          null, " + &
	"   validate_against_lookup varchar(1)           null, " + &
	"   field_mask           varchar(100)         null, " + &
	"   valid_values         varchar(250)         null, " + &
	"   range_from           int                  null, " + &
	"   range_to             int                  null, " + &
	"   audit_fld            varchar(1)           null, " + &
	"   default_value        varchar(100)         null, " + &
	"   micro_help           varchar(100)         null, " + &
	"   key_field            varchar(1)           null, " + &
	"   drop_down_width      int                  null, " + &
	"   app_fill_field_len   int                  null, " + &
	"   sort_field           int                  null, " + &
	"   sort_order           varchar(1)           null, " + &
	"   use_validation       int                  null, " + &
	"   constraint PK_sys_report_fields primary key  (table_id, field_id) " + &
	")"
//Added by Nova on 2008-08-26 profile report table

//Added by Nova on 2008-08-26 dashboard
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"IF Not Exists(      SELECT 1 From syscolumns c, sysobjects t " + &
	"Where c.id = t.id  And c.Name = 'readonly' And t.Name = 'security_users'         And t.Type = 'U') " + &
   "Alter Table security_users add Readonly Integer Null "
//Added by Nova on 2008-08-26 dashboard

//Added by Nova on 2008-08-26 session
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists(      select 1 from syscolumns c, sysobjects t   " + & 
	"where c.id=t.id  and c.name='license_info' and t.name='icred_settings' and t.type = 'U') " + &
   "      ALTER table icred_settings add license_info varchar(30) null " 


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists(      select 1 from syscolumns c, sysobjects t     " + &  
"where c.id=t.id  and c.name='session_refresh_frequency' and t.name='icred_settings' and t.type = 'U')   " + & 
"         ALTER table icred_settings add session_refresh_frequency integer null   " 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists( select 1 from sysobjects where name = 'session_info' and   type = 'U') " + &  
   "       Create Table session_info      " + &  
   "      (     " + &  
   "                session_id  varchar(20) not null,     " + &  
   "                user_id varchar(20) not null,     " + &  
   "                client_ip varchar(20) null,    " + & 
	"                create_datetime datetime null,     " + & 
	"                last_update_datetime datetime null,     " + &  
   "                Primary Key(session_id)     " + &  
   "      )     " 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"IF EXISTS (SELECT name FROM   sysobjects WHERE  name = 'up_update_session'  AND  type = 'P')     " + &  
    "DROP PROCEDURE up_update_session     " 


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"CREATE PROCEDURE up_update_session     " + &  
"(     " + &  
"@as_session_id varchar(20),                " + &  
"@as_login_user       varchar(50),                    " + &  
"@as_client_ip varchar(20),                    " + &  
"@as_exec_type varchar(10)                   " + &  
")     " + &  
"AS     " + &  
"Begin     " + &  
"         Declare @ll_timeout numeric(5)     " + &  
"         Declare @ll_session_exist numeric(5)     " + &  
"         Declare @ld_current_datetime datetime     " + &  
"         Select @as_exec_type = Upper(@as_exec_type)     " + &  
"         Select Top 1 @ld_current_datetime =  getdate() From sysobjects     " + &  
"         Select @ll_timeout = session_refresh_frequency from icred_settings     " + &  
"        Delete From Session_Info Where Datediff(Second,last_update_datetime,@ld_current_datetime) > (@ll_timeout + 1) * 60     " + &  
"         If @as_exec_type = 'CREATE' or @as_exec_type = 'UPDATE'     " + &  
"                   Begin     " + &  
"                            Select @ll_session_exist = Count(*) From Session_Info Where session_id = @as_session_id     " + &  
"                            If @ll_session_exist = 0      " + &  
"                                     Begin     " + &  
"                                               Insert Into Session_Info Values(@as_session_id,@as_login_user,@as_client_ip,@ld_current_datetime,@ld_current_datetime)     " + &  
"                                     End     " + &  
"                            Else     " + &  
"                                     Begin     " + &  
"     " + &  
"                                               Update Session_Info Set last_update_datetime = @ld_current_datetime Where session_id = @as_session_id     " + &  
"                                     End     " + &  
"                   End     " + &  
"         Else IF @as_exec_type = 'DELETE'      " + &  
"                   Begin     " + &  
"                            If @as_session_id <> ''      " + &  
"                                     Delete From Session_Info Where session_id = @as_session_id     " + &  
"                   End     " + &  
"End     " 

//Added by Nova on 2008-08-26 session
//Added by Nova on 2008-08-29 message
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_message' and   type = 'U' )      " + &  
   "      Create Table dashboard_gadgets_message      " + &  
   "      (      " + &  
   "      id numeric(10) identity not null,      " + &  
   "      user_id varchar(50) not null,      " + &  
   "      message_body varchar(5000) null,      " + &  
   "      is_read integer null,      " + &  
   "      sender varchar(50) null,      " + &  
   "      send_to_roles varchar(2000) null,          " + &  
   "      send_to_users varchar(2000) null,        " + &  
   "      send_date datetime null default getdate(),      " + &  
   "      parent_message_id numeric(10) null,      " + &  
   "      root_message_id numeric(10) null,      " + &  
   "      Primary Key(id)      " + &  
   "      )      " 
//Added by Nova on 2008-08-29 message

//Added by Nova on 2008-09-10 dashboard
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_report_list' and   type = 'U'  )      " + &  
   "      Create Table dashboard_gadgets_report_list      " + &  
   "      (      " + &  
   "                id integer  not null,      " + &  
   "                report_name varchar(80) null,      " + &  
   "                Primary Key(id)      " + &  
   "      )      " 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_summary' and   type = 'U'  )      " + &  
   "      Create Table dashboard_gadgets_summary      " + &  
   "      (      " + &  
   "                id numeric(10) identity not null,      " + &  
   "                user_id varchar(50) not null,      " + &  
   "                tab_id       integer not null,      " + &  
   "                summary_id integer null,      " + &  
   "                report_id integer null,      " + &  
   "                is_graph integer null,      " + &  
   "                graph_type integer null,          " + &  
   "                Primary Key(id)      " + &  
   "      )      "
	
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if not exists(      select 1 from syscolumns c, sysobjects t       " + &    
"where c.id=t.id  and c.name='set_dashboard' and t.name='security_users'      and t.type = 'U')      " + &  
"ALTER table security_users add set_dashboard integer null        "

//Added by Nova on 2008-09-10 dashboard	

//Added by Nova on 2008-09-12 mail from maha subject new table
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"If not exists( select 1 from sysobjects where name = 'sys_report_log' and   type = 'U'  )      " + &  
   "create table sys_report_log       " + &  
   "(      " + &  
   "log_id numeric(10,0) not null,      " + &  
   "report_id integer null,      " + &  
   "date_run datetime null,       " + &  
   "user_id varchar(30) null,       " + &  
   "primary key(log_id)      " + &  
   ")      "
	
//Added by Nova on 2008-09-12 mail from maha subject new table

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
         " if not exists(select 1 from syscolumns c, sysobjects t " + &
         "  where c.id=t.id  and c.name='image_text' and t.name='ctx_acp_document' and t.type = 'U') " + &
         "alter table ctx_acp_document add image_text text null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF EXISTS (select TOP 1 1 FROM SYSOBJECTS WHERE name='sp_contract_search' AND TYPE = 'P') " + &
" DROP PROCEDURE sp_contract_search "

//This procedure was modified for no access control to contract by Alfee on 03.14.2008
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"  " + &
"CREATE  PROCEDURE sp_contract_search " + &
"   @user_d VARCHAR(10)  " + &
"  as  " + &
"  BEGIN  " + &
"    SELECT DISTINCT ctx_basic_info.app_facility,    " + &
" 	 ctx_products.product_id product_code,    " + &
"   code_lookup.code product_name,    " + &
"   ctx_basic_info.effective_date,    " + &
"   ctx_basic_info.expriation_date,    " + &
"   ctx_basic_info.status,    " + &
"   ctx_basic_info.group_multi_loc_id,    " + &
"   ctx_basic_info.ctx_id,    " + &
"   ctx_basic_info.master_contract_id,                           " + &
"   master_cnt = (select count(ctx_basic_info1.ctx_id) from ctx_basic_info ctx_basic_info1 where ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id),                         " + &
"   ctx_basic_info.category,     " + &
"   ctx_basic_info.facility_id,    " + &
"   ctx_basic_info.contract_type,    " + &
"   code_lookup1.code product_type,    " + &
"   ctx_basic_info.reimbursment_menth,    " + &
"   ctx_basic_info.file_location,    " + &
"   ctx_basic_info.review_date,    " + &
"   ctx_basic_info.review_by,    " + &
"   ctx_basic_info.term_date,    " + &
"   ctx_basic_info.term_reason,    " + &
"   ctx_basic_info.last_revis_date,    " + &
"   ctx_basic_info.other_date_1,    " + &
"   ctx_basic_info.other_date_2,    " + &
"   ctx_basic_info.oc_signed_by,    " + &
"   ctx_basic_info.oc_title,    " + &
"   ctx_basic_info.oc_department,    " + &
"   ctx_basic_info.oc_legal_rep,    " + &
"   ctx_basic_info.cc_signed_by,    " + &
"   ctx_basic_info.cc_title,    " + &
"   ctx_basic_info.cc_department,    " + &
"   ctx_basic_info.cc_legal_rep,    " + &
"   ctx_basic_info.notes,    " + &
"   ctx_basic_info.keyword,    " + &
"   ctx_basic_info.dvision,    " + &
"   ctx_basic_info.custom_1,    " + &
"   ctx_basic_info.custom_2,    " + &
"   ctx_basic_info.custom_3,    " + &
"   ctx_basic_info.custom_4,    " + &
"   ctx_basic_info.custom_5,    " + &
"   ctx_basic_info.custom_6,    " + &
"   ctx_basic_info.custom_7,    " + &
"   ctx_basic_info.custom_8,    " + &
"   ctx_basic_info.custom_9,    " + &
"   ctx_basic_info.custom_10,    " + &
"   ctx_basic_info.group_id,    " + &
"   ctx_basic_info.revision_reason,    " + &
"   ctx_basic_info.record_id , " + &
"   owner = upper((SELECT top 1 ctx_contacts.user_d  " + &
"       FROM ctx_contacts,ctx_contract_contacts " + &
"       WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) and   " + &
"         (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) AND   " + &
"         ( ctx_contract_contacts.owner = 'Y' ) )), " + &
"   contracted_entity = (SELECT top 1 group_multi_loc.rec_id   " + &
"             FROM ctx_loc,    " + &
"              group_multi_loc   " + &
"           WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) and   " + &
"             ( ctx_loc.ctx_id = ctx_basic_info.ctx_id) AND   " + &
"               ctx_loc.loc_id = 0), " + &
"   app_facility.facility_name facility_name, " + &
"   ctx_basic_info.custom_date1,   " + &
"   ctx_basic_info.custom_date2,   " + &
"   ctx_basic_info.custom_date3,   " + &
"   ctx_basic_info.custom_date4,   " + &
"   ctx_basic_info.custom_date5,   " + &
"   ctx_basic_info.inserted_by_user,   " + &
"   ctx_basic_info.inserted_at_date_time,   " + &
"   ctx_basic_info.updated_by_user,   " + &
"   ctx_basic_info.updated_at_date_time,   " + &
"   ctx_basic_info.custom_11,   " + &
"   ctx_basic_info.custom_12,   " + &
"   ctx_basic_info.custom_13,   " + &
"   ctx_basic_info.custom_14,   " + &
"   ctx_basic_info.custom_15,   " + &
"   ctx_basic_info.custom_16,   " + &
"   ctx_basic_info.custom_17,   " + &
"   ctx_basic_info.custom_18,   " + &
"   ctx_basic_info.custom_19,   " + &
"   ctx_basic_info.custom_20,   " + &
"   ctx_basic_info.custom_date6,   " + &
"   ctx_basic_info.custom_date7,   " + &
"   ctx_basic_info.custom_date8,   " + &
"   ctx_basic_info.custom_date9,   " + &
"   ctx_basic_info.custom_date10,   " + &
"   ctx_basic_info.custom_date11,   " + &
"   ctx_basic_info.custom_date12,   " + &
"   ctx_basic_info.custom_date13,   " + &
"   ctx_basic_info.custom_date14,   " + &
"   ctx_basic_info.custom_date15,   " + &
"   ctx_basic_info.custom_n1,   " + &
"   ctx_basic_info.custom_n2,   " + &
"   ctx_basic_info.custom_n3,   " + &
"   ctx_basic_info.custom_n4,   " + &
"   ctx_basic_info.custom_n5,   " + &
"   ctx_basic_info.custom_n6,   " + &
"   ctx_basic_info.custom_n7,   " + &
"   ctx_basic_info.custom_n8,   " + &
"   ctx_basic_info.custom_n9,   " + &
"   ctx_basic_info.custom_n10,   " + &
"   ctx_basic_info.version_number,   " + &
"   ctx_basic_info.version_date,   " + &
"   ctx_basic_info.master_contract_name    " + &
"    FROM  ctx_basic_info   " + &
"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id   " + &
"LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code  " + &
"LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code,  " + &
"ctx_basic_info ctx_basic_info1 LEFT OUTER JOIN app_facility ON ctx_basic_info1.app_facility = app_facility.facility_id, " + &
"( " + &
" SELECT Distinct ctx_contract_contacts.ctx_id " + &
"   FROM ctx_contract_contacts,    " + &
"         ctx_contacts   " + &
"  WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) and   " + &
"        ( ( ctx_contract_contacts.access in ('F','R') ) OR   " + &
"        ( ctx_contract_contacts.owner = 'Y' ) ) AND   " + &
"        ( ctx_contacts.user_d = @user_d ) and ctx_contract_contacts.ic_area = 'I' " + &
" UNION " + &
"   SELECT DISTINCT ctx_basic_info.ctx_id " + &
"     FROM ctx_acp_contract_management_right,security_users,ctx_basic_info " + &
"    WHERE ctx_acp_contract_management_right.types = 1 " + &
" 		 AND ctx_acp_contract_management_right.role_id = security_users.role_id " + &
" 		 AND ctx_acp_contract_management_right.category = ctx_basic_info.category " + &
" 		 AND ctx_acp_contract_management_right.rights In ('11','12') " + &
" 		 AND security_users.user_id = @user_d " + &
"      AND ctx_basic_info.ctx_id NOT IN  " + &
"        (SELECT Distinct ctx_contract_contacts.ctx_id " + &
"				FROM ctx_contract_contacts, ctx_contacts  " + &  
"			  WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) AND " + &
"			        ( ( ctx_contract_contacts.access ='N') AND " + &
"	      		  ( ctx_contract_contacts.owner <> 'Y' ) ) AND " + &   
"			        ( ctx_contacts.user_d = @user_d ) AND " + &
"					  ( ctx_contract_contacts.ic_area = 'I' ) ) " + &
") AA " + &
"WHERE ctx_basic_info.ctx_id = ctx_basic_info1.ctx_id and ctx_basic_info.ctx_id = AA.ctx_id " + &
"ORDER BY ctx_basic_info.ctx_id  " + &
"  " + &
"END "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(      select 1 from syscolumns c, sysobjects t     " + &
"where c.id=t.id  and c.name='gadget_title_font_face' and t.name='dashboard_tabs' and t.type = 'U')  " + &
"ALTER table dashboard_tabs add gadget_title_font_face varchar(50) null    " 

 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(      select 1 from syscolumns c, sysobjects t     " + &
"where c.id=t.id  and c.name='gadget_title_font_size' and t.name='dashboard_tabs' and t.type = 'U')  " + &
"ALTER table dashboard_tabs add gadget_title_font_size integer null    " 


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If not exists( select 1 from sysobjects where name = 'dashboard_tabs_settings' )  " + &
"         Create Table dashboard_tabs_settings  " + &
"         (  " + &
"                   id  numeric(10,0) identity not null,  " + &
"                   user_id varchar(50) not null,  " + &
"                   tab_header_font_face varchar(52) null,  " + &
"                   tab_header_font_size integer null,  " + &
"                   Primary Key(id)  " + &
"         )  " 

//For Import - Evan 10.06.2008
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE import_hdr ALTER COLUMN imp_file varchar(255) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE Conv_view_links ALTER COLUMN link_to_table_nm varchar(100) null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE Conv_view_links ALTER COLUMN link_from_table_nm varchar(100) null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_insurance ALTER COLUMN policy_number varchar(50) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE pd_address ALTER COLUMN ext varchar(10) null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select 1 from syscolumns c, sysobjects t " + &
"where c.id=t.id and c.name='backcolor' and t.name='ctx_tabpage_properties' and t.type = 'U') " + &
"ALTER TABLE ctx_tabpage_properties ADD backcolor integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select 1 from syscolumns c, sysobjects t " + &
"where c.id=t.id and c.name='tab_backcolor' and t.name='ctx_tabpage_properties' and t.type = 'U') " + &
"ALTER TABLE ctx_tabpage_properties ADD tab_backcolor integer null "

//Added by Nova.zhang on 2008-10-23
is_sql_statements[upperbound(is_sql_statements) + 1] =  &
"ALTER table pd_board_specialty alter column board_certified  numeric(10,0) null"

//Added by Nova.zhang on 2008-11-12
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select 1 from syscolumns c, sysobjects t " + &
"where c.id=t.id and c.name='set_prelod_ctx' and t.name='security_users' and t.type = 'U') " + &
"ALTER TABLE security_users ADD set_prelod_ctx integer null "

//Added by Nova.zhang on 2008-11-19
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If not exists( select 1 from sysobjects where name = 'dashboard_template' ) " + &
"	Create Table dashboard_template " + &
"	( " + &
"		id numeric(10,0) identity not null, " + &
"		template_name varchar(50) not null, " + &
"		create_user varchar(50) null, " + &
"		create_date datetime null, " + &
"		comments varchar(1000) null, " + &
"		Primary Key(id) " + &
"	) " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t    " + &
"	where c.id=t.id  and c.name='template_id' and t.name='dashboard_tabs' and t.type = 'U') " + &
"ALTER table dashboard_tabs add template_id numeric(10,0) null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t    " + &
"	where c.id=t.id  and c.name='template_id' and t.name='dashboard_tabs_settings' and t.type = 'U') " + &
"ALTER table dashboard_tabs_settings add template_id numeric(10,0) null   "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t    " + &
"	where c.id=t.id  and c.name='default_dashboard_id' and t.name='security_users'	and t.type = 'U') " + &
"ALTER table security_users add default_dashboard_id numeric(10,0) null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t    " + &
"	where c.id=t.id  and c.name='set_dashb' and t.name='icred_settings'	and t.type = 'U') " + &
"ALTER table icred_settings add set_dashb integer null   "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t      " + & 
"where c.id=t.id  and c.name='ie_maxscript' and t.name='icred_settings' and t.type = 'U')    " + &
"ALTER table icred_settings add ie_maxscript integer null      "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t " + &
	"  where c.id=t.id  and c.name='win_backcolor' and t.name='data_view' and t.type = 'U') " + &
	"alter table data_view add win_backcolor integer null "
//Added by Nova.zhang on 2008-11-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  " + &
   "select 1 from syscolumns c, sysobjects t " + &
   "where c.id=t.id " + &
   "  and c.name='splash_picture' " + &
   "  and t.name='ids' " + &
   "  and t.type = 'U') " + &
"ALTER table ids add splash_picture image null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"ALTER TABLE conv_view_fields ALTER COLUMN field_name Varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(	select 1 from syscolumns c, sysobjects t   " + & 
	"where c.id=t.id  and c.name='clock_face_id' and t.name='dashboard_tabs'	and t.type = 'U') " + &
"ALTER table dashboard_tabs add clock_face_id integer null   " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(	select 1 from syscolumns c, sysobjects t      " + & 
	"where c.id=t.id  and c.name='height_ier' and t.name='dashboard_tab_gadgets'	and t.type = 'U')   " + & 
"ALTER table dashboard_tab_gadgets add height_ier decimal(2,1) null     "


of_execute_sqls("of_ver85_release_table1")

RETURN 1

end function

public function integer of_ver85_release_view1 ();is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_Document' and type = 'V')  " + &
"  drop view v_ctx_Document "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"CREATE VIEW  v_ctx_Document " + &
	"  as  select  top 100 percent" + &
"     Ctx_am_document.Doc_id,   " + &
"           Ctx_am_document.ctx_id,   " + &
"           Ctx_am_document.doc_name,   " + &
"           Ctx_am_document.Revision,   " + &
"           case when doc_type='S' then 'Sell' when doc_type='B' then 'Buy' else 'Other' end as doc_type,  " + &
"           Ctx_am_document.doc_ext,  " + &
"           code_lookup_1.code AS category,  " + &
"           Ctx_am_document.Create_by,   " + &
"           Ctx_am_document.Create_date,   " + &
"           code_lookup.code as Status,   " + &
"		     Ctx_am_document.Status_by,   " + &
"           Ctx_am_document.Status_date,   " + &
"           Ctx_am_document.Doc_from_name,    " + &
"           Ctx_am_document.checkout_by,   " + &
"           Ctx_am_document.checkout_date,   " + &
"           case when checkout_status=1 then 'Check out' else  'Normal' end as checkout_status,  " + &
"           (SELECT     COUNT(*) AS Expr1  " + &
"             FROM          Ctx_am_doc_audit  " + &
"             WHERE      (Doc_id = Ctx_am_document.Doc_id)) AS audit_count  " + &
"FROM         Ctx_am_document INNER JOIN  " + &
"             code_lookup ON Ctx_am_document.Status = code_lookup.lookup_code INNER JOIN  " + &
"             code_lookup AS code_lookup_1 ON Ctx_am_document.category = code_lookup_1.lookup_code  " + &
"ORDER BY Ctx_am_document.ctx_id  " 


of_execute_sqls("of_ver85_release_view1")
RETURN 1
end function

public function integer of_ver85_updates ();//Update SQL for ver 8.5 - Alfee 07.11.2008

//String ls_dev_type, ls_from_version

//ls_dev_type = of_get_development()
//ls_from_version = of_get_from_version()

//IF ls_dev_type = '0' and gs_current_version = ls_from_version THEN
//	of_ver85_patch_table1()
//ELSE

   //of_ver85_release_dropfulltext1()
	of_ver85_release_table1()
	//update view 
	of_ver70_release_view1()
	of_ver70_release_view2()	
	of_ver80_release_view1()
	of_ver80_patch_view1()
	of_ver85_release_view1()
//END IF

//if of_get_app_set()=1 then
//	of_ver85_release_createfulltext1()
//end if	

RETURN 1

end function

public function integer of_ver85_release_dropfulltext1 ();of_enable_fulltext()						

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'notes','IsFulltextIndexed' ) = 1) " + &
	"begin " + &
	"	exec sp_fulltext_column 'ctx_basic_info','notes','drop' " + &
	"end "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_document'),'image_text','IsFulltextIndexed' ) = 1) " + &  
	"begin   " + &
	"	exec sp_fulltext_column 'ctx_acp_document','image_text','drop'   " + &
	"end "  

of_execute_sqls("of_ver85_release_dropfulltext1")


return 1
end function

public function integer of_ver85_release_createfulltext1 ();of_enable_fulltext()						

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_basic_info_catalog') " + &
	"begin " + &
	"	exec sp_fulltext_column 'ctx_basic_info','notes','add' " + &
	"end "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_basic_info','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_basic_info','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_basic_info','start_background_updateindex' "

	
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_document_catalog') " + &  
"begin   " + &
"	exec sp_fulltext_column 'ctx_acp_document','image_text','add'   " + &
"end 	 " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_acp_document','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_acp_document','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_acp_document','start_background_updateindex' "

of_execute_sqls("of_ver85_release_createfulltext1")
return 1
end function

public function integer of_ver90_release_table1 ();is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t   " + &
	"   where c.id=t.id  and c.name='tab_position' and t.name='dashboard_tabs_settings'	and t.type = 'U') " + &
	" ALTER table dashboard_tabs_settings add tab_position integer null "  

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t   " + &
	"	 where c.id=t.id  and c.name='custom_colors' and t.name='security_users'	and t.type = 'U') " + &
	" ALTER table security_users add custom_colors varchar(200) null  "

//Added by Scofield on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(~r~n" + &
	"   select 1 from syscolumns c, sysobjects t~r~n" + &
	"   where c.id=t.id~r~n" + &
	"     and c.name='User_Type'~r~n" + &
	"     and t.name='tdl_detail'~r~n" + &
	"     and t.type = 'U')~r~n" + &
	"ALTER table tdl_detail add User_Type int null "

//Added By Alan on 2009-1-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if not exists(select 1 from syscolumns c, sysobjects t   " + &
	"   where c.id=t.id  and c.name='set_autoret' and t.name='security_users'	and t.type = 'U') " + &
	" alter table security_users add set_autoret int default 1 " 

//Added By Ken.Guo on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists(	select 1 from syscolumns c, sysobjects t   " + &
" where c.id=t.id  and c.name='group_access' and t.name='icred_settings'	and t.type = 'U')   " + &
"	 ALTER table icred_settings add group_access integer null     " 

//Added By Ken.Guo on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'security_groups' ) " + &
"	Create Table security_groups  " + &
"	( " + &
"		id  numeric(10,0) identity  not null, " + &
"		group_name varchar(50) not null, " + &
"		group_des varchar(200) null " + &
"		Primary Key(id) " + &
"	) " 

//Added By Ken.Guo on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from sysobjects where name = 'security_group_users' ) " + &
"	Create Table security_group_users  " + &
"	( " + &
"		id  numeric(10,0) identity  not null, " + &
"		group_id numeric(10,0) not null, " + &
"		user_id varchar(10) not null	 " + &
"		Primary Key(id) " + &
"	) " 

//Added By Ken.Guo on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from sysobjects where name = 'ctx_group_access' ) " + &
"	Create Table ctx_group_access  " + &
"	( " + &
"		ctx_id numeric(10,0) not null, " + &
"		group_id numeric(10,0) not null,	 " + &
"		access varchar(1) not null, " + &
"		view_id numeric(10,0) null, 	 " + &
"		notes varchar(100) null " + &
"		Primary Key(ctx_id,group_id) " + &
"	) " 


//Auto Generate Email Signature by jervis 01.20.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='auto_sign'    "+&
	"  and t.name='wf_email'    "+&
	"  and t.type = 'U')    "+&
	"ALTER table wf_email add auto_sign varchar(1) null   "


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='auto_sign'    "+&
	"  and t.name='ctx_notification'    "+&
	"  and t.type = 'U')    "+&
	"ALTER table CTX_NOTIFICATION add auto_sign varchar(1) null   "
	
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='auto_sign'    "+&
	"  and t.name='ctx_ai_notification'    "+&
	"  and t.type = 'U')    "+&
	"ALTER table CTX_ai_NOTIFICATION add auto_sign varchar(1) null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='auto_sign'    "+&
	"  and t.name='ctx_am_ai_notification'    "+&
	"  and t.type = 'U')    "+&
	"ALTER table CTX_am_ai_NOTIFICATION add auto_sign varchar(1) null   "
	
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If not exists( select 1 from sysobjects where name = 'ctx_report_syntax' )  " + &
"	CREATE TABLE ctx_report_syntax	" + &
"	( " + &
"		id numeric(18, 0) IDENTITY(1,1) NOT NULL,	" + &
"		view_id numeric(8, 0) NULL,	" + &
"		dw_sql text NULL,	" + &
"		dw_syntax image NULL,	" + &
"		modify_date datetime NULL,	" + &
" 		PRIMARY KEY CLUSTERED(id)	" + &
"	)	" 	
	

//Add by Jervis 02.17.2009
//Add Send Flag for action item
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='reminder_last'    "+&
	"  and t.name='ctx_action_items'    "+&
	"  and t.type = 'U')    "+&
	"Alter table ctx_action_items add reminder_last datetime null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='escalation_last'    "+&
	"  and t.name='ctx_action_items'    "+&
	"  and t.type = 'U')    "+&
	"Alter table ctx_action_items add escalation_last datetime null   "
	
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='reminder_last'    "+&
	"  and t.name='ctx_am_action_item'    "+&
	"  and t.type = 'U')    "+&
	"Alter table ctx_am_action_item add reminder_last datetime null   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='escalation_last'    "+&
	"  and t.name='ctx_am_action_item'    "+&
	"  and t.type = 'U')    "+&
	"Alter table ctx_am_action_item add escalation_last datetime null   "
//Added By Alan on 2009-2-20
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='ctx_id'    "+&
	"  and t.name='em_sent_items'    "+&
	"  and t.type = 'U')    "+&
	"Alter table em_sent_items add ctx_id int null   "
	
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='doc_id'    "+&
	"  and t.name='em_sent_items'    "+&
	"  and t.type = 'U')    "+&
	"Alter table em_sent_items add doc_id int null   "	
	
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(  "+&
	"select TOP 1 1 from syscolumns c, sysobjects t    "+&
	"where c.id=t.id     "+&
	"  and c.name='action_item_id'    "+&
	"  and t.name='em_sent_items'    "+&
	"  and t.type = 'U')    "+&
	"Alter table em_sent_items add action_item_id int null   "		

//Added by Ken.Guo on 2009-02-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &	
	"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"	where c.id=t.id  and c.name='use_graph' and t.name='tdl_detail'	and t.type = 'U')~r~n" + &
	"ALTER table tdl_detail add use_graph integer null~r~n" 
	
//Added by Ken.Guo on 2009-02-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"	where c.id=t.id  and c.name='graph_category' and t.name='tdl_detail'	and t.type = 'U')~r~n" + &
	"ALTER table tdl_detail add graph_category varchar(50) null~r~n" 

//Added by Scofield on 2009-02-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1~r~n" + &
"                 from sysobjects~r~n" + &
"                where name='wf_email_attachment' and type = 'U')~r~n" + &
"CREATE TABLE wf_email_attachment~r~n" + &
"(	email_id             int,~r~n" + &
"	attach_id            int,~r~n" + &
"  attach_name          varchar(100),~r~n" + &
"	attachment           image~r~n" + &
"	CONSTRAINT PK_ATTACHMENT PRIMARY KEY (email_id,attach_id),~r~n" + &
"	CONSTRAINT FK_ATTACHMENT_EMAIL FOREIGN KEY (email_id) REFERENCES wf_email(email_id)~r~n" + &
")"

//Added by Scofield on 2009-02-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1~r~n" + &
"                 from sysobjects~r~n" + &
"                where name='ctx_alarm_attachment' and type = 'U')~r~n" + &
"CREATE TABLE ctx_alarm_attachment~r~n" + &
"(	ctx_id               int,~r~n" + &
"  alm_table            varchar(40),~r~n" + &
"  alm_column           varchar(40),~r~n" + &
"  attach_id            int,~r~n" + &
"  alm_attachment_name  varchar(100),~r~n" + &
"	alm_attachment       image~r~n" + &
"	CONSTRAINT PK_ALARM_ATTACHMENT PRIMARY KEY (ctx_id,alm_table,alm_column,attach_id),~r~n" + &
"	CONSTRAINT FK_ALARM_ATTACHMENT_NOTIFICATION FOREIGN KEY (ctx_id,alm_table,alm_column) REFERENCES ctx_notification(ctx_id,alm_table,alm_column)~r~n" + &
")"

//Added by Scofield on 2009-02-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1~r~n" + &
"                 from sysobjects~r~n" + &
"                where name='ctx_ai_alarm_attachment' and type = 'U')~r~n" + &
"CREATE TABLE ctx_ai_alarm_attachment~r~n" + &
"(	ctx_id               int,~r~n" + &
"  item_id              int,~r~n" + &
"  alm_table            varchar(40),~r~n" + &
"  alm_column           varchar(40),~r~n" + &
"  attach_id            int,~r~n" + &
"  alm_attachment_name  varchar(100),~r~n" + &
"	alm_attachment       image~r~n" + &
"	CONSTRAINT PK_AI_ALARM_ATTACHMENT PRIMARY KEY (ctx_id,item_id,alm_table,alm_column,attach_id),~r~n" + &
"	CONSTRAINT FK_AI_ALARM_ATTACHMENT_NOTIFICATION FOREIGN KEY (ctx_id,item_id,alm_table,alm_column) REFERENCES ctx_ai_notification(ctx_id,ctx_action_item_id,alm_table,alm_column)~r~n" + &
")"

//Added by Scofield on 2009-02-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1~r~n" + &
"                 from sysobjects~r~n" + &
"                where name='ctx_am_ai_alarm_attachment' and type = 'U')~r~n" + &
"CREATE TABLE ctx_am_ai_alarm_attachment~r~n" + &
"(	doc_id               int,~r~n" + &
"  seq_id               int,~r~n" + &
"  alm_table            varchar(40),~r~n" + &
"  alm_column           varchar(40),~r~n" + &
"  attach_id            int,~r~n" + &
"  alm_attachment_name  varchar(100),~r~n" + &
"	alm_attachment       image~r~n" + &
"	CONSTRAINT PK_AM_AI_ALARM_ATTACHMENT PRIMARY KEY (doc_id,seq_id,alm_table,alm_column,attach_id),~r~n" + &
"	CONSTRAINT FK_AM_AI_ALARM_ATTACHMENT_NOTIFICATION FOREIGN KEY (doc_id,seq_id,alm_table,alm_column) REFERENCES ctx_am_ai_notification(doc_id,seq_id,alm_table,alm_column)~r~n" + &
")"

/*
//Added by Ken.Guo on 2009-02-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If not exists( select 1 from sysobjects where name = 'dashboard_todolist_summary' )~r~n" + &
"	Create Table dashboard_todolist_summary~r~n" + &
"	(~r~n" + &
"		id numeric(10) identity not null,~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		tab_id	integer not null,~r~n" + &
"		summary_id	integer null,~r~n" + &
"		tdl_user varchar(50) null,~r~n" + &
"		tdl_id integer null,~r~n" + &
"		is_graph integer null,~r~n" + &
"		graph_type integer null,	~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"
*/

//Added by Ken.Guo on 2009-02-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
" where c.id=t.id  and c.name='tdl_user' and t.name='dashboard_gadgets_summary'	and t.type = 'U')~r~n" + &
"	ALTER table dashboard_gadgets_summary add tdl_user varchar(50) null~r~n" 

//Added by Ken.Guo on 2009-02-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
" where c.id=t.id  and c.name='tdl_id' and t.name='dashboard_gadgets_summary'	and t.type = 'U')~r~n" + &
"	ALTER table dashboard_gadgets_summary add tdl_id integer null~r~n" 

//Added by Ken.Guo on 2009-02-25
/*
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
" where c.id=t.id  and c.name='tdli_id' and t.name='dashboard_gadgets_summary'	and t.type = 'U')~r~n" + &
"	ALTER table dashboard_gadgets_summary add tdli_id integer null~r~n" 
*/

//Added by jervis on 02.27.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
" where c.id=t.id  and c.name='Prompt_flag' and t.name='wf_action_status'	and t.type = 'U')~r~n" + &
"Alter table wf_action_status add Prompt_flag varchar(1) not null default 'N'"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
" where c.id=t.id  and c.name='Prompt_message' and t.name='wf_action_status'	and t.type = 'U')~r~n" + &
"Alter table wf_action_status add Prompt_message varchar(255) null"

//Added bu jervis on 03.06.2009
//Get Parent level Data in export painter
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
" where c.id=t.id  and c.name='record_level' and t.name='export_fields'	and t.type = 'U')~r~n" + &
"Alter table export_fields add record_level varchar(1) null"

//Added by Scofield on 2009-03-12
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists(~r~n" + &
"   select 1 from syscolumns c, sysobjects t~r~n" + &
"    where c.id=t.id~r~n" + &
"      and c.name='view_id'~r~n" + &
"      and t.name='wf_workflow'~r~n" + &
"      and t.type = 'U')~r~n" + &
"ALTER table wf_workflow add view_id int null~r~n"

//Added by Scofield on 2009-03-13
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if NOT EXISTS (SELECT TOP 1 1~r~n" + &
"                 FROM sysobjects~r~n" + &
"                WHERE name='ctx_tabpage_screen' and type = 'U')~r~n" + &
"CREATE TABLE ctx_tabpage_screen~r~n" + &
"(	ts_id          int,~r~n" + &
"	ts_type        int,~r~n" + &
"	parent_id      int,~r~n" + &
"	tabpage_name   varchar(200),~r~n" + &
"	screen_id      int,~r~n" + &
"	default_text   varchar(200)~r~n" + &
"	CONSTRAINT PK_ctx_tabpage_screen PRIMARY KEY (ts_id)~r~n" + &
")"

//Added by Scofield on 2009-03-24
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Dynamic_Search_Tab'~r~n" + &
"      AND sysobjects.name = 'security_users'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE security_users ADD Dynamic_Search_Tab int null"

//Added by Ken on 2009-03-26
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"IF Not EXISTS(SELECT name 	  FROM 	 sysobjects WHERE  name = 'ctx_am_image_weblink'  AND 	 type = 'U')~r~n" + &
"	CREATE TABLE ctx_am_image_weblink~r~n" + &
"	(~r~n" + &
"	Ctx_id integer not null,~r~n" + &
"	Doc_id integer not null,~r~n" + &
"	Revision numeric(5,1) not null,~r~n" + &
"	Org_Image_file image null,~r~n" + &
"	New_Image_file image null,~r~n" + &
"	file_size integer null,~r~n" + &
"	file_name varchar(100) null,~r~n" + &
"	file_path varchar(300) null,~r~n" + &
"	sender_user varchar(50) null,~r~n" + &
"	sender_email varchar(100) null, ~r~n" + &
"	sent_time datetime null,~r~n" + &
"	download_time datetime null,~r~n" + &
"	upload_time datetime null,~r~n" + &
"	Replied_email integer null,~r~n" + &
"	flag int not null~r~n" + &
"	Primary Key(Doc_id,Revision)~r~n" + &
"	)~r~n" 

//Added by Ken on 2009-03-26
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"	Declare @li_id int " + &
"	if not exists (select 1 from code_lookup where lookup_name = 'Contract Action Type' and code = 'DocCheckIN') AND not exists (select 1 from sys_code_lookup_audit where lookup_name = 'Contract Action Type' and code = 'DocCheckIN' and lookup_type='C') " + &
"	begin " + &
"	  select @li_id = max(lookup_code) + 1 from code_lookup " + &
"	  INSERT INTO code_lookup (lookup_code,lookup_name,code,description,type,custom_1,modify_date) VALUES ( @li_id  ,'Contract Action Type' , 'DocCheckIN','Document Check In','S', 'DocCheckIN',getdate())  " + &
"	end "

//Added by Ken on 2009-03-30
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='web_link_name' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"	ALTER table icred_settings add web_link_name varchar(100) null  ~r~n" 

//Added by Ken on 2009-03-30
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='cache_name' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"	ALTER table icred_settings add cache_name varchar(100) null  ~r~n" 

//Added by Ken on 2009-04-15
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='web_link_name' and t.name='ctx_am_image_weblink'	and t.type = 'U')~r~n" + &
"	ALTER table ctx_am_image_weblink add web_link_name varchar(200) null  ~r~n" 

//Added by Ken on 2009-04-16
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ctx_link_name' and t.name='ctx_am_image_weblink'	and t.type = 'U')~r~n" + &
"	ALTER table ctx_am_image_weblink add ctx_link_name varchar(200) null  ~r~n" 

//Added by Ken on 2009-04-20
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='reports_use_access' and t.name='icred_settings' and t.type = 'U')~r~n" + &
"	ALTER table icred_settings add reports_use_access integer null  ~r~n" 

//Added by Ken on 2009-04-20
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'reports_except_roles' )~r~n" + &
"	Create Table reports_except_roles ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		roles_id numeric(10) not null,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)~r~n"

//Added by Ken on 2009-04-20
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'reports_except_users' )~r~n" + &
"	Create Table reports_except_users ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)~r~n" 

//Added by jervis on 2009-04-24
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'wf_advanced_update' and type = 'U')~r~n" + &
"	Create Table wf_advanced_update ~r~n" + &
"	(~r~n" + &
"	wf_id	int	not null, ~r~n"	+ &
"	wf_step_id	int not null, ~r~n"	+ &
"	wf_status_id	int not null, ~r~n"	+ &
"	key_id	int IDENTITY(1,1) not null, ~r~n"	+ &
"	view_id	int not null, ~r~n"	+ &
"	screen_id	int not null, ~r~n"	+ &
"	table_name	varchar(150)	not null, ~r~n"	+ &
"	field_name	varchar(255)	not null, ~r~n"	+ &
"	Field_label	varchar(255)	not null, ~r~n"	+ &
"	field_type	varchar(2)	null, ~r~n"	+ &	
"	operator	varchar(20)	null default '=', ~r~n"	+ &
"	field_value	varchar(255)	null, ~r~n"	+ &
"	field_display_value	varchar(255)	null, ~r~n"	+ &
"	lookup_name	varchar(40)	null, ~r~n"	+ &
"	Field_flag	char(1) null default 'V', ~r~n"	+ &	
"	field_expression	varchar(1000) null ~r~n"	+ &
"	CONSTRAINT pk_wf_advanced_update PRIMARY KEY(wf_id, wf_step_id, wf_status_id,Key_id) ~r~n"	+ &
"	)~r~n" 

/*
drop table wf_advanced_update
go
Create table wf_advanced_update
(
	wf_id	int	not null,
	wf_step_id	int not null,
	wf_status_id	int not null,
	key_id	int IDENTITY(1,1) not null,
	view_id	int not null,
	screen_id	int not null,
	table_name	varchar(150)	not null,
	field_name	varchar(255)	not null,
	--Field_colName	varchar(255)	not null,
	Field_label	varchar(255)	not null,
	field_type	varchar(2)	null,	/*C-String, D-Date, N-Number */
	operator	varchar(20)	null default '=',
	field_value	varchar(255)	null,
	field_display_value	varchar(255)	null,
	lookup_name	varchar(40)	null,
	Field_flag	char(1) null default 'V',	/*V-Value, L- Lookup , E- Expression*/
	field_expression	varchar(1000) null
	CONSTRAINT pk_wf_advanced_update PRIMARY KEY(wf_id, wf_step_id, wf_status_id,Key_id)
)
*/

//BEGIN---Modify by Scofield on 2009-05-12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'MaxContractCnt'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD MaxContractCnt int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"UPDATE icred_settings SET MaxContractCnt = 0 WHERE MaxContractCnt is Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'MaxFullUserCnt'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD MaxFullUserCnt int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"UPDATE icred_settings SET MaxFullUserCnt = 0 WHERE MaxFullUserCnt is Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'MaxReadOnlyUserCnt'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD MaxReadOnlyUserCnt int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"UPDATE icred_settings SET MaxReadOnlyUserCnt = 0 WHERE MaxReadOnlyUserCnt is Null"
//END---Modify by Scofield on 2009-05-12

//Added By Ken.Guo 2009-05-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table em_sent_items alter column mail_from varchar(200)" 

//Added By Ken.Guo 2009-05-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table em_sent_items alter column mail_to varchar(200)" 

//Added By Ken.Guo 2009-05-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table em_sent_items alter column mail_cc varchar(200)" 

//Added By Ken.Guo 2009-05-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table em_sent_items alter column mail_bcc varchar(200)"

//Add By Jervis 05.22.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table ctx_am_action_item alter column notes varchar(2000)"

//Added By Ken.Guo 2009-05-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table Wf_email alter column attach_name varchar(500)"

//Added By Ken.Guo 2009-05-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table wf_email_attachment alter column attach_name varchar(500)"

//Added By Ken.Guo 2009-05-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF NOT EXISTS (SELECT 1 FROM sysindexes  WHERE name = 'index_em_sent_items_ctx_id')~r~n" + &
"	CREATE INDEX index_em_sent_items_ctx_id  ON em_sent_items (ctx_id)"

//Added By Ken.Guo 2009-06-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='file_type' and t.name='ctx_am_image_weblink'	and t.type = 'U')~r~n" + &
"		ALTER table ctx_am_image_weblink add file_type varchar(50) null  "

//Added by Scofield on 2009-06-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'image_file'~r~n" + &
"      AND sysobjects.name = 'ctx_elements'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_elements ADD image_file image Null"

//Added by Scofield on 2009-06-25
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'modify_date'~r~n" + &
"      AND sysobjects.name = 'ctx_elements'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_elements ADD modify_date datetime Null"

//Added By Ken.Guo 2009-06-30.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_ref_requirement' )~r~n" + &
"	Create Table ctx_ref_requirement ~r~n" + &
"	(~r~n" + &
"		id numeric(10,0) identity  not null,~r~n" + &
"		doc_or_template_id int not null,~r~n" + &
"		reqmnt_element_id int not null,~r~n" + &
"		reqmnt_type char(1) not null,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)~r~n" 

//Added By Ken.Guo 2009-07-07.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='used_master_ctx' and t.name='ctx_acp_template_clause_rules'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_template_clause_rules add used_master_ctx integer null"


of_execute_sqls("of_ver90_release_table1")

Return 1

end function

public function integer of_ver90_release_view1 ();//Added by Ken.Guo on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If exists( select 1 from sysobjects where name = 'v_ctx_user_access' ) ~r~n" + &
"	Drop view v_ctx_user_access~r~n"

//Added by Ken.Guo on 2009-02-12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE VIEW v_ctx_user_access AS~r~n" + &
"SELECT DISTINCT TOP 100 Percent  ctx_id = ctx_contract_contacts.ctx_id, user_id = ctx_contacts.user_d, access = (CASE ctx_contract_contacts.owner WHEN 'Y' THEN 'F' ELSE ctx_contract_contacts.access END)~r~n" + &
"	FROM ctx_contract_contacts Left Outer Join~r~n" + &
"	(~r~n" + &
"	Select ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d ~r~n" + &
"	From ctx_contract_contacts ctx_contract_contacts1 ,ctx_contacts ctx_contacts1~r~n" + &
"	Where ctx_contract_contacts1.contact_id = ctx_contacts1.contact_id ~r~n" + &
"	Group By ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d~r~n" + &
"	Having Count(ctx_contract_contacts1.ctx_id) > 1~r~n" + &
"	) ccc~r~n" + &
"	On ctx_contract_contacts.ctx_id = ccc.ctx_id~r~n" + &
"	,ctx_contacts~r~n" + &
"	WHERE 	NOT ctx_contacts.user_d is null~r~n" + &
"		AND (ccc.ctx_id is null or ctx_contract_contacts.access = 'F' )~r~n" + &
"		AND ctx_contract_contacts.contact_id = ctx_contacts.contact_id ~r~n" + &
"		AND ( ctx_contract_contacts.access IN ('F','R') ~r~n" + &
"		OR ctx_contract_contacts.owner = 'Y' )~r~n" + &
"		AND ctx_contract_contacts.ic_area = 'I'~r~n" + &
"	~r~n" + &
"	UNION ~r~n" + &
"	~r~n" + &
"	SELECT DISTINCT TOP 100 Percent ctx_id = ctx_group_access.ctx_id,user_id = security_group_users.user_id, access =  ctx_group_access.access~r~n" + &
"	FROM ctx_group_access Left Outer Join ~r~n" + &
"	(~r~n" + &
"	Select ctx_group_access1.ctx_id, security_group_users1.user_id ~r~n" + &
"	From ctx_group_access ctx_group_access1,security_group_users security_group_users1~r~n" + &
"	Where ctx_group_access1.group_id = security_group_users1.group_id ~r~n" + &
"	Group by ctx_group_access1.ctx_id, security_group_users1.user_id~r~n" + &
"	Having count(ctx_group_access1.ctx_id) > 1 ~r~n" + &
"	) cga On ctx_group_access.ctx_id = cga.ctx_id ,~r~n" + &
"	security_group_users,~r~n" + &
"	icred_settings~r~n" + &
"	WHERE	NOT security_group_users.user_id is null~r~n" + &
"		AND (cga.ctx_id is null or ctx_group_access.access = 'F')~r~n" + &
"		AND icred_settings.group_access = 1~r~n" + &
"		AND ctx_group_access.group_id = security_group_users.group_id~r~n" + &
"		AND ctx_group_access.access in ('F','R')~r~n" + &
"		AND NOT EXISTS	(SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"				WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"				AND ( ctx_contacts.user_d = security_group_users.user_id )~r~n" + &
"				AND ( ctx_contract_contacts.ic_area = 'I' )~r~n" + &
"				AND ( ctx_contract_contacts.ctx_id = ctx_group_access.ctx_id )~r~n" + &
"				)~r~n" + &
"	~r~n" + &
"	UNION~r~n" + &
"	~r~n" + &
"	SELECT DISTINCT TOP 100 Percent ctx_id = ctx_basic_info.ctx_id, user_id = security_users.user_id, access = (CASE ctx_acp_contract_management_right.rights WHEN '11' THEN 'F' WHEN '12' THEN 'R' ELSE 'N' END)~r~n" + &
"	FROM ctx_acp_contract_management_right, security_users, ctx_basic_info~r~n" + &
"	WHERE 	NOT security_users.user_id is null~r~n" + &
"		AND ctx_acp_contract_management_right.types = 1~r~n" + &
"		AND ctx_acp_contract_management_right.role_id = security_users.role_id~r~n" + &
"		AND ctx_acp_contract_management_right.category = ctx_basic_info.category~r~n" + &
"		AND ctx_acp_contract_management_right.rights In ('11','12')~r~n" + &
"		AND NOT EXISTS (SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"				WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"				AND ( ctx_contacts.user_d = security_users.user_id AND ctx_contract_contacts.ic_area = 'I') ~r~n" + &
"				AND ( ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"				UNION~r~n" + &
"				SELECT 1 FROM ctx_group_access,security_group_users,icred_settings~r~n" + &
"				WHERE icred_settings.group_access = 1~r~n" + &
"				AND (ctx_group_access.group_id = security_group_users.group_id )~r~n" + &
"				AND ( security_group_users.user_id = security_users.user_id )	~r~n" + &
"				AND ( ctx_group_access.ctx_id = ctx_basic_info.ctx_id )~r~n" + &
"				)~r~n" + &
""


//Added by Ken.Guo on 2009-01-21
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If exists( select 1 from sysobjects where name = 'v_ctx_default_external_contacts' )~r~n" + &
"	Drop view v_ctx_default_external_contacts~r~n" 

//Added by Ken.Guo on 2009-01-21
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"~r~n" + &
"Create View v_ctx_default_external_contacts~r~n" + &
"As~r~n" + &
"~r~n" + &
"Select  ~r~n" + &
"aa.ctx_id,~r~n" + &
"cc.contact_id,~r~n" + &
"cc.full_name,~r~n" + &
"cc.contact_title,~r~n" + &
"cc.contact_department,~r~n" + &
"cc.contact_type,~r~n" + &
"cc.user_d,~r~n" + &
"cc.Email,~r~n" + &
"full_phone = cc.Phone + (Case when cc.Phone_Ext is null or cc.Phone_Ext = '' Then '' Else ' Ext.'+cc.Phone_Ext End ),~r~n" + &
"full_fax = cc.Fax + (Case when cc.Fax_Ext is null or cc.Fax_Ext = '' Then '' Else ' Ext.'+cc.Fax_Ext End )~r~n" + &
"From 	~r~n" + &
"	(Select ~r~n" + &
"	ctx_id,~r~n" + &
"	contact_id = (Select top 1 contact_id from ctx_contract_contacts~r~n" + &
"			where ic_area = 'E' and default_email = 'Y' and ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id~r~n" + &
"			Order By contact_id)~r~n" + &
"	~r~n" + &
"	From ~r~n" + &
"	ctx_basic_info~r~n" + &
"	) aa~r~n" + &
"Left Outer Join~r~n" + &
"	(~r~n" + &
"	Select ~r~n" + &
"	contact_id,~r~n" + &
"	user_d,~r~n" + &
"	full_name = last_name + ',' + first_name + ',' + middle_name,~r~n" + &
"	contact_title = (CASE WHEN  a.Code IS NULL THEN Convert(Varchar(50),ctx_contacts.contact_title) ELSE  a.Code END),~r~n" + &
"	contact_department = b.code,~r~n" + &
"	contact_type = c.code,~r~n" + &
"	Email = (select top 1 ccn.contact_email ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Email'))~r~n" + &
"	,~r~n" + &
"	Phone = (select top 1 ccn.phone ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Phone')~r~n" + &
"			order by ccn.contact_num_id)~r~n" + &
"	,~r~n" + &
"	Phone_Ext = (select top 1 ccn.ext ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Phone')~r~n" + &
"			order by ccn.contact_num_id )~r~n" + &
"	,~r~n" + &
"	Fax = (select top 1 ccn.phone ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Fax')~r~n" + &
"			order by ccn.contact_num_id	)~r~n" + &
"	,~r~n" + &
"	Fax_Ext = (select top 1 ccn.ext ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Fax') ~r~n" + &
"			order by ccn.contact_num_id	)~r~n" + &
"	~r~n" + &
"	From ctx_contacts~r~n" + &
"	Left Outer Join code_lookup a on Convert(Varchar,a.lookup_code) = Convert(Varchar,ctx_contacts.contact_title)~r~n" + &
"	Left Outer Join code_lookup b on b.lookup_code = ctx_contacts.contact_department~r~n" + &
"	Left Outer Join code_lookup c on c.lookup_code = ctx_contacts.contact_type~r~n" + &
"	) cc~r~n" + &
"On aa.contact_id = cc.contact_id"

//Added by Ken.Guo on 2009-01-22
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If exists( select 1 from sysobjects where name = 'v_ctx_default_our_contacts' )~r~n" + &
"	Drop view v_ctx_default_our_contacts~r~n" 

//Added by Ken.Guo on 2009-01-22
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"~r~n" + &
"Create View v_ctx_default_our_contacts~r~n" + &
"As~r~n" + &
"~r~n" + &
"Select  ~r~n" + &
"aa.ctx_id,~r~n" + &
"cc.contact_id,~r~n" + &
"cc.full_name,~r~n" + &
"cc.contact_title,~r~n" + &
"cc.contact_department,~r~n" + &
"cc.contact_type,~r~n" + &
"cc.user_d,~r~n" + &
"cc.Email,~r~n" + &
"full_phone = cc.Phone + (Case when cc.Phone_Ext is null or cc.Phone_Ext = '' Then '' Else ' Ext.'+cc.Phone_Ext End ),~r~n" + &
"full_fax = cc.Fax + (Case when cc.Fax_Ext is null or cc.Fax_Ext = '' Then '' Else ' Ext.'+cc.Fax_Ext End )~r~n" + &
"From 	~r~n" + &
"	(Select ~r~n" + &
"	ctx_id,~r~n" + &
"	contact_id = (Select top 1 contact_id from ctx_contract_contacts~r~n" + &
"			where ic_area = 'I' and default_email = 'Y' and ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id~r~n" + &
"			Order By contact_id)~r~n" + &
"	~r~n" + &
"	From ~r~n" + &
"	ctx_basic_info~r~n" + &
"	) aa~r~n" + &
"Left Outer Join~r~n" + &
"	(~r~n" + &
"	Select ~r~n" + &
"	contact_id,~r~n" + &
"	user_d,~r~n" + &
"	full_name = last_name + ',' + first_name + ',' + middle_name,~r~n" + &
"	contact_title = (CASE WHEN  a.Code IS NULL THEN Convert(Varchar(50),ctx_contacts.contact_title) ELSE  a.Code END),~r~n" + &
"	contact_department = b.code,~r~n" + &
"	contact_type = c.code,~r~n" + &
"	Email = (select top 1 ccn.contact_email ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Email'))~r~n" + &
"	,~r~n" + &
"	Phone = (select top 1 ccn.phone ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Phone')~r~n" + &
"			order by ccn.contact_num_id)~r~n" + &
"	,~r~n" + &
"	Phone_Ext = (select top 1 ccn.ext ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Phone')~r~n" + &
"			order by ccn.contact_num_id )~r~n" + &
"	,~r~n" + &
"	Fax = (select top 1 ccn.phone ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Fax')~r~n" + &
"			order by ccn.contact_num_id	)~r~n" + &
"	,~r~n" + &
"	Fax_Ext = (select top 1 ccn.ext ~r~n" + &
"			from ctx_contacts_numbers ccn ~r~n" + &
"			where ccn.contact_id =  ctx_contacts.contact_id and~r~n" + &
"				ccn.via = (select top 1 lookup_code from code_lookup where lookup_name = 'Contract Contact Via' and code = 'Fax') ~r~n" + &
"			order by ccn.contact_num_id	)~r~n" + &
"	~r~n" + &
"	From ctx_contacts~r~n" + &
"	Left Outer Join code_lookup a on Convert(Varchar,a.lookup_code) = Convert(Varchar,ctx_contacts.contact_title)~r~n" + &
"	Left Outer Join code_lookup b on b.lookup_code = ctx_contacts.contact_department~r~n" + &
"	Left Outer Join code_lookup c on c.lookup_code = ctx_contacts.contact_type~r~n" + &
"	) cc~r~n" + &
"On aa.contact_id = cc.contact_id"

//Added by Scofield on 2009-06-19
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_requirement') ~r~n" + &
"  drop view v_ctx_requirement"

//Added by Scofield on 2009-06-19
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create view v_ctx_requirement as~r~n" + &
"select top 100 percent~r~n" + &
"       ctx_req_profile_hdr_1.ctx_id,~r~n" + &
"       ctx_req_profile.rqmnt_name,~r~n" + &
"       ctx_req_profile.rqmnt_description,~r~n" + &
"       ctx_rqmnt_category.category_name,~r~n" + &
"       ctx_req_tmplt_element.element_name,~r~n" + &
"       datavalue = (case ctx_req_tmplt_element.value_type~r~n" + &
"                         when 1 then convert(varchar,ctx_elements.date_value)~r~n" + &
"                         when 2 then ctx_elements.field_value~r~n" + &
"                         when 3 then ctx_elements.char_value~r~n" + &
"                         when 4 then convert(varchar,ctx_elements.integer_value)~r~n" + &
"                         when 5 then ctx_elements.field_value end),~r~n" + &
"       ctx_elements.clause~r~n" + &
"  from ctx_req_profile~r~n" + &
"       inner join ctx_req_profile_hdr as ctx_req_profile_hdr_1 on ctx_req_profile.ctx_req_profile_id = ctx_req_profile_hdr_1.ctx_req_profile_id~r~n" + &
"       inner join ctx_rqmnt_category on ctx_rqmnt_category.ctx_req_profile_id = ctx_req_profile_hdr_1.ctx_req_profile_id~r~n" + &
"       inner join ctx_req_tmplt_element on ctx_rqmnt_category.ctx_req_profile_id = ctx_req_tmplt_element.ctx_req_profile_id and ctx_rqmnt_category.ctx_rqmnt_category_id = ctx_req_tmplt_element.ctx_rqmnt_category_id~r~n" + &
"       inner join ctx_elements on ctx_elements.ctx_req_tmplt_element_id = ctx_req_tmplt_element.ctx_req_tmplt_element_id and ctx_req_profile_hdr_1.ctx_req_profile_hdr_id = ctx_elements.ctx_req_profile_hdr_id~r~n" + &
"order by ctx_req_profile_hdr_1.ctx_id"

//Added by Scofield on 2009-07-27
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_basic_info') ~r~n" + &
" drop view v_ctx_basic_info"

//Added by Scofield on 2009-07-27
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info AS~r~n" + &
"SELECT TOP 100 percent~r~n" + &
"       app_facility.facility_name AS Company_Name,~r~n" + &
"       app_facility.street AS Company_street_1,~r~n" + &
"       app_facility.street_2 AS Company_street_2,~r~n" + &
"       app_facility.city AS Company_city,~r~n" + &
"       app_facility.state AS Company_state,~r~n" + &
"       app_facility.zip AS Company_zip,~r~n" + &
"       app_facility.country AS Company_country,~r~n" + &
"       app_facility.phone AS Company_phone,~r~n" + &
"       app_facility.fax AS Company_fax,~r~n" + &
"       app_facility.web_address AS Company_web_address,~r~n" + &
"       app_facility.contact_type2 AS Company_contact_type2,~r~n" + &
"       app_facility.corp_office_flag AS Company_corp_office_flag,~r~n" + &
"       app_facility.corp_office_link AS Company_corp_office_link,~r~n" + &
"       code_lookup.code AS Contract_Category_code,~r~n" + &
"       code_lookup.description AS Contract_Category_description,~r~n" + &
"       code_lookup_1.code AS Contract_Status_code,~r~n" + &
"       code_lookup_2.code AS contract_type_code,~r~n" + &
"       code_lookup_2.description AS contract_type_Description,~r~n" + &
"       code_lookup_3.code AS term_reason_code,~r~n" + &
"       code_lookup_3.description AS term_Reason_Desciption,~r~n" + &
"       code_lookup_4.description AS product_type_desc,~r~n" + &
"       code_lookup_4.code AS product_type_code,~r~n" + &
"       code_lookup_5.code AS product_code,~r~n" + &
"       code_lookup_5.description AS product_description,~r~n" + &
"       ctx_basic_info.ctx_id,~r~n" + &
"       ctx_basic_info.category,~r~n" + &
"       ctx_basic_info.status,~r~n" + &
"       ctx_basic_info.facility_id,~r~n" + &
"       ctx_basic_info.contract_type,~r~n" + &
"       ctx_basic_info.product_type,~r~n" + &
"       ctx_basic_info.product_name,~r~n" + &
"       ctx_basic_info.reimbursment_menth,~r~n" + &
"       ctx_basic_info.file_location,~r~n" + &
"       ctx_basic_info.effective_date,~r~n" + &
"       ctx_basic_info.expriation_date,~r~n" + &
"       ctx_basic_info.review_date,~r~n" + &
"       ctx_basic_info.review_by,~r~n" + &
"       ctx_basic_info.term_date,~r~n" + &
"       ctx_basic_info.term_reason,~r~n" + &
"       ctx_basic_info.last_revis_date,~r~n" + &
"       ctx_basic_info.other_date_1,~r~n" + &
"       ctx_basic_info.other_date_2,~r~n" + &
"       ctx_basic_info.oc_signed_by,~r~n" + &
"       ctx_basic_info.oc_title,~r~n" + &
"       ctx_basic_info.oc_department,~r~n" + &
"       ctx_basic_info.oc_legal_rep,~r~n" + &
"       ctx_basic_info.cc_signed_by,~r~n" + &
"       ctx_basic_info.cc_title,~r~n" + &
"       ctx_basic_info.cc_department,~r~n" + &
"       ctx_basic_info.cc_legal_rep,~r~n" + &
"       ctx_basic_info.keyword,~r~n" + &
"       ctx_basic_info.dvision,~r~n" + &
"       ctx_basic_info.custom_1,~r~n" + &
"       ctx_basic_info.custom_2,~r~n" + &
"       ctx_basic_info.custom_3,~r~n" + &
"       ctx_basic_info.custom_4,~r~n" + &
"       ctx_basic_info.custom_5,~r~n" + &
"       ctx_basic_info.custom_6,~r~n" + &
"       ctx_basic_info.custom_7,~r~n" + &
"       ctx_basic_info.custom_8,~r~n" + &
"       ctx_basic_info.custom_9,~r~n" + &
"       ctx_basic_info.custom_10,~r~n" + &
"       ctx_basic_info.group_multi_loc_id,~r~n" + &
"       ctx_basic_info.revision_reason,~r~n" + &
"       ctx_basic_info.group_id,~r~n" + &
"       ctx_basic_info.record_id,~r~n" + &
"       ctx_basic_info.custom_11,~r~n" + &
"       ctx_basic_info.custom_12,~r~n" + &
"       ctx_basic_info.custom_13,~r~n" + &
"       ctx_basic_info.custom_14,~r~n" + &
"       ctx_basic_info.custom_15,~r~n" + &
"       ctx_basic_info.custom_16,~r~n" + &
"       ctx_basic_info.custom_17,~r~n" + &
"       ctx_basic_info.custom_18,~r~n" + &
"       ctx_basic_info.custom_19,~r~n" + &
"       ctx_basic_info.custom_20,~r~n" + &
"       ctx_basic_info.custom_date1,~r~n" + &
"       ctx_basic_info.custom_date2,~r~n" + &
"       ctx_basic_info.custom_date3,~r~n" + &
"       ctx_basic_info.custom_date4,~r~n" + &
"       ctx_basic_info.custom_date5,~r~n" + &
"       ctx_basic_info.custom_date6,~r~n" + &
"       ctx_basic_info.custom_date7,~r~n" + &
"       ctx_basic_info.custom_date8,~r~n" + &
"       ctx_basic_info.custom_date9,~r~n" + &
"       ctx_basic_info.custom_date10,~r~n" + &
"       ctx_basic_info.custom_n1,~r~n" + &
"       ctx_basic_info.custom_n2,~r~n" + &
"       ctx_basic_info.custom_n3,~r~n" + &
"       ctx_basic_info.custom_n4,~r~n" + &
"       ctx_basic_info.custom_n5,~r~n" + &
"       ctx_basic_info.custom_n6,~r~n" + &
"       ctx_basic_info.custom_n7,~r~n" + &
"       ctx_basic_info.custom_n8,~r~n" + &
"       ctx_basic_info.custom_n9,~r~n" + &
"       ctx_basic_info.custom_n10,~r~n" + &
"       ctx_basic_info.custom_n11,~r~n" + &
"       ctx_basic_info.custom_n12,~r~n" + &
"       ctx_basic_info.custom_n13,~r~n" + &
"       ctx_basic_info.custom_n14,~r~n" + &
"       ctx_basic_info.custom_n15,~r~n" + &
"       ctx_basic_info.custom_n16,~r~n" + &
"       ctx_basic_info.custom_n17,~r~n" + &
"       ctx_basic_info.custom_n18,~r~n" + &
"       ctx_basic_info.custom_n19,~r~n" + &
"       ctx_basic_info.custom_n20,~r~n" + &
"       ctx_basic_info.custom_n21,~r~n" + &
"       ctx_basic_info.custom_n22,~r~n" + &
"       ctx_basic_info.custom_n23,~r~n" + &
"       ctx_basic_info.custom_n24,~r~n" + &
"       ctx_basic_info.custom_n25,~r~n" + &
"       ctx_basic_info.version_number,~r~n" + &
"       ctx_basic_info.version_date,~r~n" + &
"       ctx_basic_info.notes,~r~n" + &
"       ctx_basic_info.app_facility,~r~n" + &
"       ctx_basic_info.master_contract_id AS master_ctx_id,~r~n" + &
"       ctx_basic_info.master_contract_name,~r~n" + &
"       code_lookup_6.code AS dvision_code,~r~n" + &
"       code_lookup_6.description AS dvision_description~r~n" + &
"  FROM (((((((ctx_basic_info LEFT OUTER JOIN code_lookup ON ctx_basic_info.category = code_lookup.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_basic_info.status = code_lookup_1.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_basic_info.contract_type = code_lookup_2.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_basic_info.term_reason = code_lookup_3.lookup_code)~r~n" + &
"       INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id)~r~n" + &
"       INNER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_6 ON ctx_basic_info.dvision = code_lookup_6.lookup_code~r~n" + &
"ORDER BY ctx_basic_info.ctx_id"

//Added by Scofield on 2009-07-27
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_custom') ~r~n" + &
" drop view v_ctx_custom"

//Added by Scofield on 2009-07-27
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_custom AS ~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       ctx_id,~r~n" + &
"       custom_1,~r~n" + &
"       custom_2,~r~n" + &
"       custom_3,~r~n" + &
"       custom_4,~r~n" + &
"       custom_5,~r~n" + &
"       custom_6,~r~n" + &
"       custom_7,~r~n" + &
"       custom_8,~r~n" + &
"       custom_9,~r~n" + &
"       custom_10,~r~n" + &
"       custom_11,~r~n" + &
"       custom_12,~r~n" + &
"       custom_13,~r~n" + &
"       custom_14,~r~n" + &
"       custom_15,~r~n" + &
"       custom_16,~r~n" + &
"       custom_17,~r~n" + &
"       custom_18,~r~n" + &
"       custom_19,~r~n" + &
"       custom_20,~r~n" + &
"       custom_date1,~r~n" + &
"       custom_date2,~r~n" + &
"       custom_date3,~r~n" + &
"       custom_date4,~r~n" + &
"       custom_date5,~r~n" + &
"       custom_date6,~r~n" + &
"       custom_date7,~r~n" + &
"       custom_date8,~r~n" + &
"       custom_date9,~r~n" + &
"       custom_date10,~r~n" + &
"       custom_date11,~r~n" + &
"       custom_date12,~r~n" + &
"       custom_date13,~r~n" + &
"       custom_date14,~r~n" + &
"       custom_date15,~r~n" + &
"       custom_n1,~r~n" + &
"       custom_n2,~r~n" + &
"       custom_n3,~r~n" + &
"       custom_n4,~r~n" + &
"       custom_n5,~r~n" + &
"       custom_n6,~r~n" + &
"       custom_n7,~r~n" + &
"       custom_n8,~r~n" + &
"       custom_n9,~r~n" + &
"       custom_n10,~r~n" + &
"       custom_n11,~r~n" + &
"       custom_n12,~r~n" + &
"       custom_n13,~r~n" + &
"       custom_n14,~r~n" + &
"       custom_n15,~r~n" + &
"       custom_n16,~r~n" + &
"       custom_n17,~r~n" + &
"       custom_n18,~r~n" + &
"       custom_n19,~r~n" + &
"       custom_n20,~r~n" + &
"       custom_n21,~r~n" + &
"       custom_n22,~r~n" + &
"       custom_n23,~r~n" + &
"       custom_n24,~r~n" + &
"       custom_n25~r~n" + &
"  FROM ctx_basic_info~r~n" + &
"ORDER BY ctx_id"

of_execute_sqls("of_ver90_release_view1")

Return 1

end function

public function integer of_ver90_updates ();
of_ver90_release_table1()
of_ver90_release_table2()
of_ver90_release_view1()
of_ver90_release_storeprocedure1()
Return 1
end function

public function integer of_ver90_release_storeprocedure1 ();//Added by Scofield on 2009-01-14
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_ImportView' AND type = 'P') " + &
"    DROP PROCEDURE up_ImportView"

//Added by Scofield on 2009-01-14
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_ImportView~r~n" + &
"	@SourceDBName nvarchar(100),~r~n" + &
"	@TargetDBName nvarchar(100),~r~n" + &
"	@ViewID nvarchar(100)~r~n" + &
"As~r~n" + &
"Begin~r~n" + &
"	declare @MaxViewID	nvarchar(100)~r~n" + &
"	declare @SqlString nvarchar(4000)~r~n" + &
"	declare @ParmDefinition nvarchar(100)~r~n" + &
"		~r~n" + &
"	/*Get Seq No*/~r~n" + &
"	select @SqlString = 'select @MaxViewIDOUT = isnull(max(data_view_id),0) + 1  from ' + @TargetDBName + '.dbo.data_view'~r~n" + &
"	select @ParmDefinition = '@MaxViewIDOUT int Output'~r~n" + &
"	exec sp_executesql @SqlString,@ParmDefinition,@MaxViewIDOUT=@MaxViewID output~r~n" + &
"~r~n" + &
"	/*Insert Data_View Table*/~r~n" + &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.data_view (data_view_id,data_view_name,type,type_c)'~r~n" + &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',data_view_name,type,type_c from ' + @SourceDBName + '.dbo.data_view where data_view_id = ' + @ViewID~r~n" + &
"	~r~n" + &
"	exec sp_executesql @SqlString~r~n" + &
"~r~n" + &
"	/*Insert Ctx_Screen Table*/~r~n" + &
"	select  @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen (data_view_id,screen_id,tab_name,screen_name,dw_name,dataobject,description,dw_sql,create_date,modify_date,force_update,titlebar_visible,titlebar_text,boarder_style)'~r~n" + &
"	select 	@SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id,'   ~r~n" + &
"	select  @SqlString = @SqlString + '  tab_name,   '~r~n" + &
"	select  @SqlString = @SqlString + 'screen_name,   '~r~n" + &
"	select  @SqlString = @SqlString + '         dw_name,   '~r~n" + &
"	select  @SqlString = @SqlString + '         dataobject, '  ~r~n" + &
"	select  @SqlString = @SqlString + '         description, '  ~r~n" + &
"	select  @SqlString = @SqlString + '         dw_sql,   '~r~n" + &
"	select  @SqlString = @SqlString + '         create_date,   '~r~n" + &
"	select  @SqlString = @SqlString + '         modify_date,   '~r~n" + &
"	select  @SqlString = @SqlString + '         force_update,   '~r~n" + &
"	select  @SqlString = @SqlString + '         titlebar_visible,'   ~r~n" + &
"	select  @SqlString = @SqlString + '         titlebar_text,   '~r~n" + &
"	select  @SqlString = @SqlString + '         boarder_style  '~r~n" + &
"	select  @SqlString = @SqlString + '	from ' + @SourceDBName + '.dbo.ctx_screen'~r~n" + &
"	select  @SqlString = @SqlString + '	where data_view_id = ' + @ViewID~r~n" + &
"	exec sp_executesql @SqlString~r~n" + &
"	select Cast(@MaxViewID as int)~r~n" + &
"end~r~n"

//Added by Ken.Guo on 2009-01-15
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_contract_search' AND type = 'P') " + &
"    DROP PROCEDURE sp_contract_search"

//Added by Ken.Guo on 2009-02-11
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE  PROCEDURE sp_contract_search(  @user_d VARCHAR(10)   )~r~n" + &
" AS    ~r~n" + &
"BEGIN      ~r~n" + &
"SELECT DISTINCT ~r~n" + &
"	ctx_basic_info.app_facility,    ~r~n" + &
"	ctx_products.product_id product_code,     ~r~n" + &
"	code_lookup.code product_name,       ~r~n" + &
"	ctx_basic_info.effective_date,      ~r~n" + &
"	ctx_basic_info.expriation_date,       ~r~n" + &
"	ctx_basic_info.status,     ~r~n" + &
"	ctx_basic_info.group_multi_loc_id,       ~r~n" + &
"	ctx_basic_info.ctx_id,~r~n" + &
" 	ctx_basic_info.master_contract_id,                             ~r~n" + &
"	master_cnt = (SELECT Count(ctx_basic_info1.ctx_id) ~r~n" + &
"			FROM ctx_basic_info ctx_basic_info1 ~r~n" + &
"			WHERE ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id),  ~r~n" + &
"	ctx_basic_info.category,        ~r~n" + &
"	ctx_basic_info.facility_id,     ~r~n" + &
"	ctx_basic_info.contract_type,       ~r~n" + &
"	code_lookup1.code product_type, ~r~n" + &
"	ctx_basic_info.reimbursment_menth,       ~r~n" + &
"	ctx_basic_info.file_location,    ~r~n" + &
"	ctx_basic_info.review_date,       ~r~n" + &
"	ctx_basic_info.review_by,     ~r~n" + &
"	ctx_basic_info.term_date,       ~r~n" + &
"	ctx_basic_info.term_reason,     ~r~n" + &
"	ctx_basic_info.last_revis_date,       ~r~n" + &
"	ctx_basic_info.other_date_1,       ~r~n" + &
"	ctx_basic_info.other_date_2,     ~r~n" + &
"	ctx_basic_info.oc_signed_by,       ~r~n" + &
"	ctx_basic_info.oc_title,      ~r~n" + &
"	ctx_basic_info.oc_department,       ~r~n" + &
"	ctx_basic_info.oc_legal_rep,       ~r~n" + &
"	ctx_basic_info.cc_signed_by,     ~r~n" + &
"	ctx_basic_info.cc_title,       ~r~n" + &
"	ctx_basic_info.cc_department,       ~r~n" + &
"	ctx_basic_info.cc_legal_rep,     ~r~n" + &
"	ctx_basic_info.notes,       ~r~n" + &
"	ctx_basic_info.keyword,       ~r~n" + &
"	ctx_basic_info.dvision,   ~r~n" + &
"	ctx_basic_info.custom_1,       ~r~n" + &
"	ctx_basic_info.custom_2,       ~r~n" + &
"	ctx_basic_info.custom_3,       ~r~n" + &
"	ctx_basic_info.custom_4,       ~r~n" + &
"	ctx_basic_info.custom_5,     ~r~n" + &
"	ctx_basic_info.custom_6,       ~r~n" + &
"	ctx_basic_info.custom_7,       ~r~n" + &
"	ctx_basic_info.custom_8, ~r~n" + &
"	ctx_basic_info.custom_9,       ~r~n" + &
"	ctx_basic_info.custom_10,    ~r~n" + &
"	ctx_basic_info.group_id,~r~n" + &
"	ctx_basic_info.revision_reason,       ~r~n" + &
"	ctx_basic_info.record_id ,   ~r~n" + &
"	owner = upper((SELECT top 1 ctx_contacts.user_d       ~r~n" + &
"			FROM ctx_contacts,ctx_contract_contacts       ~r~n" + &
"			WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) ~r~n" + &
"			AND (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			  AND ( ctx_contract_contacts.owner = 'Y' ) ~r~n" + &
"			  AND ( ctx_contract_contacts.ic_area = 'I' ) )),   ~r~n" + &
"	contracted_entity = (SELECT top 1 group_multi_loc.rec_id              ~r~n" + &
"	  			FROM ctx_loc,                  group_multi_loc              ~r~n" + &
"				WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) ~r~n" + &
"				AND ( ctx_loc.ctx_id = ctx_basic_info.ctx_id) ~r~n" + &
"				AND ctx_loc.loc_id = 0),    ~r~n" + &
"	app_facility.facility_name facility_name,   ~r~n" + &
"	ctx_basic_info.custom_date1,      ~r~n" + &
"	ctx_basic_info.custom_date2,      ~r~n" + &
"	ctx_basic_info.custom_date3,      ~r~n" + &
"	ctx_basic_info.custom_date4,  ~r~n" + &
"	ctx_basic_info.custom_date5,      ~r~n" + &
"	ctx_basic_info.inserted_by_user,    ~r~n" + &
"	ctx_basic_info.inserted_at_date_time,      ~r~n" + &
"	ctx_basic_info.updated_by_user,   ~r~n" + &
"	ctx_basic_info.~r~n" + &
"	updated_at_date_time,      ~r~n" + &
"	ctx_basic_info.custom_11,      ~r~n" + &
"	ctx_basic_info.custom_12,   ~r~n" + &
"	ctx_basic_info.custom_13,      ~r~n" + &
"	ctx_basic_info.custom_14,      ~r~n" + &
"	ctx_basic_info.custom_15,  ~r~n" + &
"	ctx_basic_info.custom_16,      ~r~n" + &
"	ctx_basic_info.custom_17,      ~r~n" + &
"	ctx_basic_info.custom_18,      ~r~n" + &
"	ctx_basic_info.custom_19,      ~r~n" + &
"	ctx_basic_info.custom_20,     ~r~n" + &
"	ctx_basic_info.custom_date6,      ~r~n" + &
"	ctx_basic_info.custom_date7,      ~r~n" + &
"	ctx_basic_info.custom_date8,  ~r~n" + &
"	ctx_basic_info.custom_date9,      ~r~n" + &
"	ctx_basic_info.custom_date10,      ~r~n" + &
"	ctx_basic_info.custom_date11,      ~r~n" + &
"	ctx_basic_info.custom_date12,      ~r~n" + &
"	ctx_basic_info.custom_date13,  ~r~n" + &
"	ctx_basic_info.custom_date14,      ~r~n" + &
"	ctx_basic_info.custom_date15,      ~r~n" + &
"	ctx_basic_info.custom_n1, ~r~n" + &
"	ctx_basic_info.custom_n2,      ~r~n" + &
"	ctx_basic_info.custom_n3,      ~r~n" + &
"	ctx_basic_info.custom_n4,      ~r~n" + &
"	ctx_basic_info.custom_n5,      ~r~n" + &
"	ctx_basic_info.custom_n6,  ~r~n" + &
"	ctx_basic_info.custom_n7,      ~r~n" + &
"	ctx_basic_info.custom_n8,      ~r~n" + &
"	ctx_basic_info.custom_n9,    ~r~n" + &
"	ctx_basic_info.custom_n10,      ~r~n" + &
"	ctx_basic_info.version_number,      ~r~n" + &
"	ctx_basic_info.version_date,      ~r~n" + &
"	ctx_basic_info.master_contract_name ,~r~n" + &
"	access = AA.access    ~r~n" + &
"FROM  ctx_basic_info  ~r~n" + &
"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id  ~r~n" + &
"LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code  ~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code~r~n" + &
"LEFT OUTER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id, ~r~n" + &
"(~r~n" + &
"SELECT DISTINCT TOP 100 Percent  ctx_id = ctx_contract_contacts.ctx_id, user_id = ctx_contacts.user_d, access = (CASE ctx_contract_contacts.owner WHEN 'Y' THEN 'F' ELSE ctx_contract_contacts.access END)~r~n" + &
"FROM ctx_contract_contacts Left Outer Join~r~n" + &
"(~r~n" + &
"Select ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d ~r~n" + &
"From ctx_contract_contacts ctx_contract_contacts1 ,ctx_contacts ctx_contacts1~r~n" + &
"Where ctx_contract_contacts1.contact_id = ctx_contacts1.contact_id And ctx_contacts1.user_d = @user_d~r~n" + &
"Group By ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d~r~n" + &
"Having Count(ctx_contract_contacts1.ctx_id) > 1~r~n" + &
") ccc~r~n" + &
"On ctx_contract_contacts.ctx_id = ccc.ctx_id~r~n" + &
",ctx_contacts~r~n" + &
"WHERE ctx_contacts.user_d = @user_d~r~n" + &
"	AND (ccc.ctx_id is null or ctx_contract_contacts.access = 'F' )~r~n" + &
"	AND ctx_contract_contacts.contact_id = ctx_contacts.contact_id ~r~n" + &
"	AND ( ctx_contract_contacts.access IN ('F','R') ~r~n" + &
"	OR ctx_contract_contacts.owner = 'Y' )~r~n" + &
"	AND ctx_contract_contacts.ic_area = 'I'~r~n" + &
"~r~n" + &
"UNION ~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_group_access.ctx_id,user_id = security_group_users.user_id, access =  ctx_group_access.access~r~n" + &
"FROM ctx_group_access Left Outer Join ~r~n" + &
"(~r~n" + &
"Select ctx_group_access1.ctx_id, security_group_users1.user_id ~r~n" + &
"From ctx_group_access ctx_group_access1,security_group_users security_group_users1~r~n" + &
"Where ctx_group_access1.group_id = security_group_users1.group_id And security_group_users1.user_id = @user_d~r~n" + &
"Group by ctx_group_access1.ctx_id, security_group_users1.user_id~r~n" + &
"Having count(ctx_group_access1.ctx_id) > 1 ~r~n" + &
") cga On ctx_group_access.ctx_id = cga.ctx_id ,~r~n" + &
"security_group_users,~r~n" + &
"icred_settings~r~n" + &
"WHERE security_group_users.user_id = @user_d~r~n" + &
"	AND (cga.ctx_id is null or ctx_group_access.access = 'F')~r~n" + &
"	AND icred_settings.group_access = 1~r~n" + &
"	AND ctx_group_access.group_id = security_group_users.group_id~r~n" + &
"	AND ctx_group_access.access in ('F','R')~r~n" + &
"	AND NOT EXISTS	(SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_group_users.user_id )~r~n" + &
"			AND ( ctx_contract_contacts.ic_area = 'I' )~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_group_access.ctx_id )~r~n" + &
"			)~r~n" + &
"~r~n" + &
"UNION~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_basic_info.ctx_id, user_id = security_users.user_id, access = (CASE ctx_acp_contract_management_right.rights WHEN '11' THEN 'F' WHEN '12' THEN 'R' ELSE 'N' END)~r~n" + &
"FROM ctx_acp_contract_management_right, security_users, ctx_basic_info~r~n" + &
"WHERE security_users.user_id = @user_d~r~n" + &
"	AND ctx_acp_contract_management_right.types = 1~r~n" + &
"	AND ctx_acp_contract_management_right.role_id = security_users.role_id~r~n" + &
"	AND ctx_acp_contract_management_right.category = ctx_basic_info.category~r~n" + &
"	AND ctx_acp_contract_management_right.rights In ('11','12')~r~n" + &
"	AND NOT EXISTS (SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_users.user_id AND ctx_contract_contacts.ic_area = 'I') ~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			UNION~r~n" + &
"			SELECT 1 FROM ctx_group_access,security_group_users,icred_settings~r~n" + &
"			WHERE icred_settings.group_access = 1~r~n" + &
"			AND (ctx_group_access.group_id = security_group_users.group_id )~r~n" + &
"			AND ( security_group_users.user_id = security_users.user_id )	~r~n" + &
"			AND ( ctx_group_access.ctx_id = ctx_basic_info.ctx_id )~r~n" + &
"			)~r~n" + &
") AA ~r~n" + &
"WHERE ctx_basic_info.ctx_id = AA.ctx_id ~r~n" + &
"ORDER BY ctx_basic_info.master_contract_id Asc, ctx_basic_info.ctx_id  Asc    ~r~n" + &				
"~r~n" + &
"END"

of_execute_sqls("of_ver90_release_storeprocedure1")
Return 1
end function

public function integer of_ver90_release_table2 ();//Added By Ken.Guo 2009-07-13.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='get_parent_data' and t.name='ctx_ref_requirement'	and t.type = 'U')~r~n" + &
"ALTER table ctx_ref_requirement add get_parent_data integer null " 

//Add by jervis.zhang 07.15.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n11' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n11 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n12' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n12 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n13' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n13 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n14' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n14 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n15' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n15 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n16' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n16 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n17' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n17 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n18' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n18 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n19' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n19 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n20' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n20 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n21' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n21 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n22' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n22 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n23' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n23 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n24' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n24 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n25' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_n25 numeric(12,2) null"


//Added By Ken.Guo 2009-07-23. ctx_action_items 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n1' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_n1 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n2' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_n2 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n3' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_n3 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n4' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_n4 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n1' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_n1 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n5' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_n5 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_1' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_1 varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_2' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_2 varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_3' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_3 varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_4' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add custom_4 varchar(100) null"


//Added By Ken.Guo 2009-07-23. ctx_am_action_item 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n1' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_n1 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n2' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_n2 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n3' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_n3 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n4' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_n4 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n1' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_n1 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n5' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_n5 numeric(12,2) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_1' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_1 varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_2' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_2 varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_3' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_3 varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_4' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add custom_4 varchar(100) null"


//Added By Ken.Guo 2009-07-31.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='email_encoding' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add email_encoding varchar(50) null~r~n" 

//Added by Scofield on 2009-08-13
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'local'~r~n" + &
"      AND sysobjects.name = 'ctx_loc'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_loc ALTER COLUMN local varchar(255)"

//Added by Scofield on 2009-08-14
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'location'~r~n" + &
"      AND sysobjects.name = 'ctx_fee_sched_locations'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_fee_sched_locations ALTER COLUMN location varchar(255)"

//Added by Scofield on 2009-08-14
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'description'~r~n" + &
"      AND sysobjects.name = 'ctx_fee_sched_data'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_fee_sched_data ADD description text Null"

of_execute_sqls("of_ver90_release_table2")

Return 1
end function

public function integer of_ver95_release_table1 ();//BEGIN---Modify by Scofield on 2009-08-12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_21'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_21 varchar(255) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_22'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_22 varchar(255) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n26'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_n26 numeric(12,2) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n27'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_n27 numeric(12,2) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date16'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_date16 datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date17'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_date17 datetime Null"
//END---Modify by Scofield on 2009-08-12

//Add by jervis 09.08.14
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'unit_type'~r~n" + &
"      AND sysobjects.name = 'ctx_cpt_codes'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_cpt_codes add unit_type int null "

//Added By Ken.Guo 2009-08-17.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_templates_info' )~r~n" + &
"	Create Table ctx_templates_info ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		template_name varchar(50) not null,~r~n" + &
"		create_date datetime null,~r~n" + &
"		create_by varchar(50) null,~r~n" + &
"		ctx_id numeric(10,0) null,~r~n" + &
"		original_ctx_id numeric(10,0) null,~r~n" + &
"		ib_contract_detail bit null,~r~n" + &
"		ib_contract_dates bit null,~r~n" + &
"		ib_custom_data bit null,~r~n" + &
"		ib_notes bit null,~r~n" + &
"		ib_contract_contacts bit null,~r~n" + &
"		ib_group_access bit null,~r~n" + &
"		ib_products bit null,~r~n" + &
"		ib_our_contacts bit null,~r~n" + &
"		ib_requirements bit null,~r~n" + &
"		ib_other_contacts bit null,~r~n" + &
"		ib_locations bit null,~r~n" + &
"		ib_organizations bit null,~r~n" + &
"		ib_fee_schedule bit null,~r~n" + &
"		ib_document_manager bit null,~r~n" + &
"		ib_action_items bit null,~r~n" + &
"		notes varchar(200) null~r~n" + &
"		Primary Key(id)~r~n" + &
"	)~r~n" 

//Add by jervis 08.20.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'money_value'~r~n" + &
"      AND sysobjects.name = 'ctx_elements'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_elements add money_value numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'char_value'~r~n" + &
"      AND sysobjects.name = 'ctx_req_tmplt_element'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_req_tmplt_element add char_value char(1) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'integer_value'~r~n" + &
"      AND sysobjects.name = 'ctx_req_tmplt_element'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_req_tmplt_element add integer_value numeric(8,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'money_value'~r~n" + &
"      AND sysobjects.name = 'ctx_req_tmplt_element'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_req_tmplt_element add money_value numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'date_value'~r~n" + &
"      AND sysobjects.name = 'ctx_req_tmplt_element'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_req_tmplt_element add date_value datetime null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'field_value'~r~n" + &
"      AND sysobjects.name = 'ctx_req_tmplt_element'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_req_tmplt_element add field_value varchar(50) null "

//Added By Ken.Guo 2009-08-24.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='is_template' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add is_template integer null  "

//Added By Zhangxingren 2009-08-24. 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists( SELECT 1~r~n" + &
"    FROM syscolumns, sysobjects~r~n" + &
"  WHERE syscolumns.id   = sysobjects.id~r~n" + &
"    AND syscolumns.name = 'view_id'~r~n" + &
"    AND sysobjects.name = 'export_header'~r~n" + &
"    AND sysobjects.type = 'U')~r~n" + &
"alter table export_header add view_id int null"

//Added By Ken.Guo 2009-08-24.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ctx_template_id' and t.name='ids'	and t.type = 'U')~r~n" + &
"ALTER table ids add ctx_template_id numeric(10,0) null  "

//Added By Ken.Guo 2009-08-28.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='located_tab_index' and t.name='ctx_templates_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_templates_info add located_tab_index integer null  ~r~n" 

//Added By Ken.Guo 2009-08-28.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='clear_company' and t.name='ctx_templates_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_templates_info add clear_company bit null  ~r~n" 

//Added By Ken.Guo 2009-08-28.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='add_contact' and t.name='ctx_templates_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_templates_info add add_contact bit null  "

//Added By Ken.Guo 2009-08-28.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='trigger_workflow' and t.name='ctx_templates_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_templates_info add trigger_workflow numeric(10) null  "

//Added by Scofield on 2009-08-28
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'DisplayLocation'~r~n" + &
"      AND sysobjects.name = 'wf_action_types'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE wf_action_types ADD DisplayLocation int Null"

//Added By Ken.Guo 2009-09-01.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'dashboard_gadget_other_properties' )~r~n" + &
"	Create Table dashboard_gadget_other_properties ~r~n" + &
"	(~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		tab_id  numeric(10,0) not null,~r~n" + &
"		gadget_id numeric(10,0) not null,~r~n" + &
"		property_name varchar(50) not null,~r~n" + &
"		property_value	varchar(200) null,~r~n" + &
"		Primary Key(user_id,tab_id,gadget_id,property_name)~r~n" + &
"	)~r~n" 

//Added by Scofield on 2009-09-08
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Relative_Days'~r~n" + &
"      AND sysobjects.name = 'ctx_screen_datafill'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_screen_datafill ADD Relative_Days int Null"

//Added By Ken.Guo 2009-09-10.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"~r~n" + &
"if not exists( select 1 from sysobjects where name = 'ctx_notification_templates' )~r~n" + &
"	Create Table ctx_notification_templates ~r~n" + &
"	(~r~n" + &
"		view_id numeric(10) not null,~r~n" + &
"		alm_table varchar(40) not null,~r~n" + &
"		alm_column varchar(40) not null,~r~n" + &
"		alm_message varchar(255) null,~r~n" + &
"		alm_enabled char(1) null,~r~n" + &
"		alm_notification_days integer null,~r~n" + &
"		alm_last_notification_sent datetime null,~r~n" + &
"		alm_post_notification_days integer null,~r~n" + &
"		alm_total_tries integer null,~r~n" + &
"		alm_action_item_posted integer null,~r~n" + &
"		alm_total_tries_counter integer null,~r~n" + &
"		alm_frequency integer null,~r~n" + &
"		create_action_item char(1) null,~r~n" + &
"		record_id numeric(10) null,~r~n" + &
"		alm_auto_increment_years integer null,~r~n" + &
"		alm_action_title varchar(40) null,~r~n" + &
"		wf_id integer null,~r~n" + &
"		alm_auto_increment_unit char(1) null,~r~n" + &
"		alm_last_wf_trigger datetime null,~r~n" + &
"		alm_email_template_id integer null,~r~n" + &
"		alm_message_blob image null,~r~n" + &
"		alm_attachment_name varchar(100) null,~r~n" + &
"		alm_attachment image null,~r~n" + &
"		alm_mailto varchar(2000) null,~r~n" + &
"		auto_sign varchar(1) null,~r~n" + &
"		Primary Key(view_id,alm_table,alm_column)		~r~n" + &
"	)~r~n" + &
""

//Added By Ken.Guo 2009-09-11.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_notification_templates_attachments' )~r~n" + &
"	Create Table ctx_notification_templates_attachments ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0)  not null,~r~n" + &
"		view_id numeric(10) not null,~r~n" + &
"		alm_table varchar(40) not null,~r~n" + &
"		alm_column varchar(40) not null,~r~n" + &
"		alm_attachment_name varchar(100) null,~r~n" + &
"		alm_attachment image null,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)~r~n" + &
""

//Added By Ken.Guo 2009-09-14.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='attach_from_template' and t.name='ctx_notification_templates'	and t.type = 'U')~r~n" + &
"ALTER table ctx_notification_templates add attach_from_template integer null  ~r~n" + &
""

//Added By Ken.Guo 2009-09-15.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_alm_snooze' )~r~n" + &
"	Create Table ctx_alm_snooze ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		ctx_id numeric(10) not null,	~r~n" + &
"		alm_table varchar(40) not null,~r~n" + &
"		alm_column varchar(40) not null,~r~n" + &
"		increment_value integer  null,~r~n" + &
"		increment_unit char(1)  null,~r~n" + &
"		asnooze_executed integer null,~r~n" + &
"		snooze_loop integer null,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"

//Added By Ken.Guo 2009-09-16.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='view_id' and t.name='ctx_alm_snooze'	and t.type = 'U')~r~n" + &
"ALTER table ctx_alm_snooze add view_id numeric(10,0) null  "

//Added by Scofield on 2009-09-18
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'set_autoresize'~r~n" + &
"      AND sysobjects.name = 'security_users'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE security_users ADD set_autoresize int Null"

//Added by jervis 09.22.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	" if exists(select 1 from syscolumns c, sysobjects t   " + &
	"   where c.id=t.id  and c.name='code' and t.name='export_equiv_code'	and t.type = 'U') " + &
	"	alter table export_equiv_code alter column code varchar(30) null "

//Added by Scofield on 2009-09-22
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists (select 1 from sysobjects where name = 'DF_ctx_basic_info_is_template')~r~n" + &
"   ALTER TABLE ctx_basic_info ADD CONSTRAINT DF_ctx_basic_info_is_template DEFAULT 0 FOR is_template"


//Addby jervis 09.27.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_screen_field_depend' )~r~n" + &
"	create table ctx_screen_field_depend(~r~n" + &
"		rec_id int identity not null,~r~n" + &
"		view_id	int not null,~r~n" + &
"		base_field	varchar(100)	not null,~r~n" + &
"		depend_field	varchar(100) not null~r~n" + &
"		CONSTRAINT PK_ctx_screen_field_depend  PRIMARY KEY(rec_id)~r~n" + &
"	)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_lookup_depend' )~r~n" + &
"	create table ctx_lookup_depend(~r~n" + &
"		rec_id int identity not null,~r~n" + &
"		base_lookup_code	numeric(6,0) not null,~r~n" + &
"		depend_lookup_code	numeric(6,0) not null,~r~n" + &
"		depend_type	int not null default 1~r~n" + &
"		CONSTRAINT PK_ctx_lookup_depend  PRIMARY KEY(rec_id)~r~n" + &
"	)"

//Add by jervis 09.30.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'screen_visible'~r~n" + &
"      AND sysobjects.name = 'ctx_screen'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_screen ADD screen_visible varchar(1) Null default 'Y'"

//Added By Ken.Guo 2009-10-12.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'db_upgrade_log' )~r~n" + &
"	Create Table db_upgrade_log ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		upgrade_by varchar(50) null,~r~n" + &
"		upgrade_date datetime null,~r~n" + &
"		old_db_version varchar(50) null,~r~n" + &
"		new_db_version varchar(50) null,	~r~n" + &
"		app_version varchar(50) null, ~r~n" + &
"		from_cache_name varchar(50) null,~r~n" + &
"		upgrade_result varchaR(20) null,~r~n" + &
"		comment varchar(500) null,			~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"

//Add by jervis 10.12.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'alm_create'~r~n" + &
"      AND sysobjects.name = 'ctx_notification'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_notification add alm_create varchar(2000) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'alm_create'~r~n" + &
"      AND sysobjects.name = 'ctx_ai_notification'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_ai_notification add alm_create varchar(2000) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'alm_create'~r~n" + &
"      AND sysobjects.name = 'ctx_am_ai_notification'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_am_ai_notification add alm_create varchar(2000) null"

//Added By Ken.Guo 2009-10-19.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ocr_language' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add ocr_language integer null  ~r~n" 

//Added By Ken.Guo 2009-10-19.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ocr_mode' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add ocr_mode integer null  ~r~n" 

//Added by jervis 2009-10-21
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'doc_ext_full'~r~n" + &
"      AND sysobjects.name = 'ctx_am_doc_image'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_doc_image ADD doc_ext_full varchar(10) Null"

//Added By Ken.Guo 2009-10-28.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ctx_browse_style' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add ctx_browse_style integer null  ~r~n"

//BEGIN---Modify by Scofield on 2009-10-30
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table ctx_am_document alter column doc_type varchar(30) not null"
//END---Modify by Scofield on 2009-10-30

//BEGIN---Modify by Scofield on 2009-11-02
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Received_By'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD Received_By varchar(20) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Received_Date'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD Received_Date datetime Null"
//END---Modify by Scofield on 2009-11-02

//Add by jervis 11.3.2009
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'base_screen_id'~r~n" + &
"      AND sysobjects.name = 'ctx_screen_field_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend Add base_screen_id int not null default 0"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'depend_screen_id'~r~n" + &
"      AND sysobjects.name = 'ctx_screen_field_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend add depend_screen_id int not null default 0"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'base_field_dispaly'~r~n" + &
"      AND sysobjects.name = 'ctx_screen_field_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend add base_field_dispaly	varchar(255) not null default ''"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'depend_field_dispaly'~r~n" + &
"      AND sysobjects.name = 'ctx_screen_field_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend add depend_field_dispaly	varchar(255) not null default ''"

//Update data before drop column screen_id
int li_exists
SELECT 1 into :li_exists  FROM syscolumns, sysobjects 	
WHERE syscolumns.id   = sysobjects.id 		AND syscolumns.name = 'screen_id' 		
	AND sysobjects.name = 'ctx_screen_field_depend' 		AND sysobjects.type = 'U';

if li_exists = 1 then
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if Exists(~r~n" + &
	"   SELECT 1 ~r~n" + &
	"     FROM syscolumns, sysobjects~r~n" + &
	"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
	"      AND syscolumns.name = 'screen_id'~r~n" + &
	"      AND sysobjects.name = 'ctx_screen_field_depend'~r~n" + &
	"      AND sysobjects.type = 'U')~r~n" + &
	"Begin~r~n" + &
	"	update ctx_screen_field_depend set base_screen_id = screen_id where base_screen_id = 0 ~r~n" + &	
	"	update ctx_screen_field_depend set depend_screen_id = screen_id where depend_screen_id = 0  ~r~n" + &
	"End"
	
	
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"alter table ctx_screen_field_depend drop column screen_id"
end if

li_exists = 0
SELECT 1 into :li_exists  FROM syscolumns, sysobjects 	
WHERE syscolumns.id   = sysobjects.id 		AND syscolumns.name = 'base_lookup_name' 		
	AND sysobjects.name = 'ctx_lookup_depend' 		AND sysobjects.type = 'U';
if li_exists = 1 then
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"alter table ctx_lookup_depend drop column base_lookup_name"
end if


li_exists = 0
SELECT 1 into :li_exists  FROM syscolumns, sysobjects 	
WHERE syscolumns.id   = sysobjects.id 		AND syscolumns.name = 'depend_lookup_name' 		
	AND sysobjects.name = 'ctx_lookup_depend' 		AND sysobjects.type = 'U';
if li_exists = 1 then
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"alter table ctx_lookup_depend drop column depend_lookup_name"
end if

/*
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'screen_id'~r~n" + &
"      AND sysobjects.name = 'ctx_screen_field_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend drop column screen_id"


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'base_lookup_name'~r~n" + &
"      AND sysobjects.name = 'ctx_lookup_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_lookup_depend drop column base_lookup_name"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'depend_lookup_name'~r~n" + &
"      AND sysobjects.name = 'ctx_lookup_depend'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"alter table ctx_lookup_depend drop column depend_lookup_name"
*/

//Added By Ken.Guo 2009-11-11.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='auto_ocr' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add auto_ocr integer null  "


//Add by jervis 2009-11-12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='base_screen_type' and t.name='ctx_screen_field_depend'	and t.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend add base_screen_type char(1) not null default 'M'  "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='base_table' and t.name='ctx_screen_field_depend'	and t.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend add base_table varchar(128) null  "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='depend_table' and t.name='ctx_screen_field_depend'	and t.type = 'U')~r~n" + &
"alter table ctx_screen_field_depend add depend_table varchar(128) null  "


//Add by jervis 2009-11-24
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'conv_view_pic' )~r~n" + &
"create table conv_view_pic~r~n" + &
"(~r~n" + &
"	view_id int  not null,~r~n" + &
"	Screen_id int not null default 0,~r~n" + &
"	pic_id	int identity not null,~r~n" + &
"	pic_type	varchar(10) null,~r~n" + &
"	pic_band	varchar(50) null,~r~n" + &
"	pic_name	varchar(50) null,~r~n" + &
"	pic_filename	varchar(100) null,~r~n" + &
"	pic_bitmap	image null,~r~n" + &
"	pic_x	int null,~r~n" + &
"	pic_y	int null,~r~n" + &
"	pic_width int null,~r~n" + &
"	pic_height int null,~r~n" + &
"	pic_tag	varchar(100)~r~n" + &
"	CONSTRAINT   pk_conv_view_pic primary key(view_id,Screen_id,pic_id)	~r~n" + &
")"

//Add by jervis 2009-12-02
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table conv_view_where alter column table_field_name varchar(1200)"

//BEGIN---Modify by Scofield on 2009-12-03
//ctx_action_items
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Subject'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD Subject varchar(255) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Start_Date'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD Start_Date datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Start_Time'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD Start_Time datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Duration'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD Duration int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Duration_Type'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD Duration_Type int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'End_Date'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD End_Date datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'End_Time'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD End_Time datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Priority'~r~n" + &
"      AND sysobjects.name = 'ctx_action_items'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_action_items ADD Priority int Null"

//ctx_am_action_item
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Subject'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD Subject varchar(255) Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Start_Date'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD Start_Date datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Start_Time'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD Start_Time datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Duration'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD Duration int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Duration_Type'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD Duration_Type int Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'End_Date'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD End_Date datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'End_Time'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD End_Time datetime Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'Priority'~r~n" + &
"      AND sysobjects.name = 'ctx_am_action_item'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_action_item ADD Priority int Null"
//END---Modify by Scofield on 2009-12-03

//Added By Ken.Guo 2009-12-16.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='doc_auto_retrieve' and t.name='security_users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add doc_auto_retrieve integer null  "

//Added By Ken.Guo 2009-12-18.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_user_tv_settings' )~r~n" + &
"	Create Table ctx_user_tv_settings ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		show_group integer null,~r~n" + &
"		group_by varchar(50) null,~r~n" + &
"		group_sort_type varchar(1) null,~r~n" + &
"		display_col1 varchar(50) null,~r~n" + &
"		display_col2 varchar(50) null,~r~n" + &
"		display_col3 varchar(50) null,~r~n" + &
"		display_col4 varchar(50) null,~r~n" + &
"		display_col5 varchar(50) null,~r~n" + &
"		display_sort_by varchar(50) null,~r~n" + &
"		display_sort_type varchar(1) null, ~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"

//Added By Ken.Guo 2009-12-22.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='displaycount' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add displaycount integer null ~r~n" 

//Added By Ken.Guo 2009-12-24.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='contract_display_mode' and t.name='security_users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add contract_display_mode integer null~r~n" 

//Added By Ken.Guo 2009-12-29.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='hide_browse' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add hide_browse integer null ~r~n" 

//Added By Ken.Guo 2009-12-29.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='max_width' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add max_width integer null ~r~n" 


//Added By Jervis.zhang 2009.12.30
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='comment_disp' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add comment_disp bit null default 0 ~r~n" 

//BEGIN---Modify by Scofield on 2010-01-06
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists (SELECT TOP 1 1~r~n" + &
"                 FROM sysobjects~r~n" + &
"                WHERE name='ctx_acp_clause_attribute' and type = 'U')~r~n" + &
"CREATE TABLE ctx_acp_clause_attribute~r~n" + &
"(	ctx_acp_clause_id         numeric(6,0),~r~n" + &
"	clause_attribute_id       numeric(6,0),~r~n" + &
"	clause_attribute_alias    varchar(255)~r~n" + &
"	CONSTRAINT PK_CTX_ACP_CLAUSE_ATTRIBUTE PRIMARY KEY (ctx_acp_clause_id,clause_attribute_id),~r~n" + &
"	CONSTRAINT FK_CLAUSE_ATTRIBUTE_CTX_ACP_CLAUSE FOREIGN KEY (ctx_acp_clause_id) REFERENCES ctx_acp_clause(ctx_acp_clause_id),~r~n" + &
"    CONSTRAINT FK_CLAUSE_ATTRIBUTE_CODE_LOOKUP FOREIGN KEY (clause_attribute_id) REFERENCES code_lookup(lookup_code)~r~n" + &
")"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists (SELECT TOP 1 1~r~n" + &
"                 FROM sysobjects~r~n" + &
"                WHERE name='ctx_acp_clause_attr_value' and type = 'U')~r~n" + &
"CREATE TABLE ctx_acp_clause_attr_value~r~n" + &
"(	ctx_acp_clause_id         numeric(6,0),~r~n" + &
"	clause_attribute_id       numeric(6,0),~r~n" + &
"	clause_attribute_value_id numeric(6,0)~r~n" + &
"	CONSTRAINT PK_CTX_ACP_CLAUSE_ATTR_VALUE PRIMARY KEY (ctx_acp_clause_id,clause_attribute_id,clause_attribute_value_id),~r~n" + &
"	CONSTRAINT FK_CLAUSE_ATTR_VALUE_ACP_CLAUSE FOREIGN KEY (ctx_acp_clause_id,clause_attribute_id) REFERENCES ctx_acp_clause_attribute(ctx_acp_clause_id,clause_attribute_id),~r~n" + &
"	CONSTRAINT FK_CLAUSE_ATTR_VALUE_CODE_LOOKUP FOREIGN KEY (clause_attribute_value_id) REFERENCES code_lookup(lookup_code)~r~n" + &
")"
//END---Modify by Scofield on 2010-01-06

//BEGIN---Modify by Scofield on 2010-01-09
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalActItemFilter_0'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalActItemFilter_0 text Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalActItemFilter_1'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalActItemFilter_1 text Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalActItemFilter_2'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalActItemFilter_2 text Null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalActItemFilter_3'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalActItemFilter_3 text Null"

//END---Modify by Scofield on 2010-01-09

//Added By Ken.Guo 2010-01-11.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_acp_clause_audit' )~r~n" + &
"	Create Table ctx_acp_clause_audit ~r~n" + &
"	(~r~n" + &
"		audit_id numeric(10,0) identity not null,~r~n" + &
"		clause_id  numeric(10,0) not null,~r~n" + &
"		revision numeric(5,1) not null,~r~n" + &
"		actions varchar(200) not null,~r~n" + &
"		action_by varchar(50) null,~r~n" + &
"		action_date datetime null,~r~n" + &
"		notes varchar(255) null,~r~n" + &
"		Primary Key(audit_id)~r~n" + &
"	)" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_acp_clause_image' )~r~n" + &
"	Create Table ctx_acp_clause_image ~r~n" + &
"	(~r~n" + &
"		clause_id  numeric(10,0) not null,~r~n" + &
"		revision numeric(5,1) not null,~r~n" + &
"		image_file image null,~r~n" + &
"		modify_date datetime null,~r~n" + &
"		id_forcatalog int identity not null,~r~n" + &
"		Primary Key(clause_id,revision)~r~n" + &
"	)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='revision' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add revision numeric(5,1) null  ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='checkout_by' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add checkout_by varchar(50) null  ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='checkout_date' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add checkout_date datetime null  ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='checkout_status' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add checkout_status varchar(1) null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='revision_control' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add revision_control varchar(1) null ~r~n" 
//End Ken.Guo 2010-01-11.

//Added By Ken.Guo 2010-01-19.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='doc_type' and t.name='ctx_acp_clause_image'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause_image add doc_type varchar(10) null  "

//Added By Ken.Guo 2010-02-04.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='doc_name_format' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add doc_name_format integer null  ~r~n" 



of_execute_sqls("of_ver95_release_table1")

Return 1

end function

public function integer of_ver95_updates ();//of_ver95_release_dropfulltext1()	//jervis 10.21.2009
	
of_ver95_release_table1()
of_ver95_release_table2()
of_ver95_release_view1()
of_ver95_release_storeprocedure1()

//if of_get_app_set()=1 then
//	of_ver95_release_createfulltext1() //jervis 10.21.2009
//end if	
Return 1

end function

public function integer of_ver95_release_view1 ();//Added by Scofield on 2009-08-12
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_basic_info') ~r~n" + &
" drop view v_ctx_basic_info"

//Added by Scofield on 2009-08-12
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info AS~r~n" + &
"SELECT TOP 100 percent~r~n" + &
"       app_facility.facility_name AS Company_Name,~r~n" + &
"       app_facility.street AS Company_street_1,~r~n" + &
"       app_facility.street_2 AS Company_street_2,~r~n" + &
"       app_facility.city AS Company_city,~r~n" + &
"       app_facility.state AS Company_state,~r~n" + &
"       app_facility.zip AS Company_zip,~r~n" + &
"       app_facility.country AS Company_country,~r~n" + &
"       app_facility.phone AS Company_phone,~r~n" + &
"       app_facility.fax AS Company_fax,~r~n" + &
"       app_facility.web_address AS Company_web_address,~r~n" + &
"       app_facility.contact_type2 AS Company_contact_type2,~r~n" + &
"       app_facility.corp_office_flag AS Company_corp_office_flag,~r~n" + &
"       app_facility.corp_office_link AS Company_corp_office_link,~r~n" + &
"       code_lookup.code AS Contract_Category_code,~r~n" + &
"       code_lookup.description AS Contract_Category_description,~r~n" + &
"       code_lookup_1.code AS Contract_Status_code,~r~n" + &
"       code_lookup_2.code AS contract_type_code,~r~n" + &
"       code_lookup_2.description AS contract_type_Description,~r~n" + &
"       code_lookup_3.code AS term_reason_code,~r~n" + &
"       code_lookup_3.description AS term_Reason_Desciption,~r~n" + &
"       code_lookup_4.description AS product_type_desc,~r~n" + &
"       code_lookup_4.code AS product_type_code,~r~n" + &
"       code_lookup_5.code AS product_code,~r~n" + &
"       code_lookup_5.description AS product_description,~r~n" + &
"       ctx_basic_info.ctx_id,~r~n" + &
"       ctx_basic_info.category,~r~n" + &
"       ctx_basic_info.status,~r~n" + &
"       ctx_basic_info.facility_id,~r~n" + &
"       ctx_basic_info.contract_type,~r~n" + &
"       ctx_basic_info.product_type,~r~n" + &
"       ctx_basic_info.product_name,~r~n" + &
"       ctx_basic_info.reimbursment_menth,~r~n" + &
"       ctx_basic_info.file_location,~r~n" + &
"       ctx_basic_info.effective_date,~r~n" + &
"       ctx_basic_info.expriation_date,~r~n" + &
"       ctx_basic_info.review_date,~r~n" + &
"       ctx_basic_info.review_by,~r~n" + &
"       ctx_basic_info.term_date,~r~n" + &
"       ctx_basic_info.term_reason,~r~n" + &
"       ctx_basic_info.last_revis_date,~r~n" + &
"       ctx_basic_info.other_date_1,~r~n" + &
"       ctx_basic_info.other_date_2,~r~n" + &
"       ctx_basic_info.oc_signed_by,~r~n" + &
"       ctx_basic_info.oc_title,~r~n" + &
"       ctx_basic_info.oc_department,~r~n" + &
"       ctx_basic_info.oc_legal_rep,~r~n" + &
"       ctx_basic_info.cc_signed_by,~r~n" + &
"       ctx_basic_info.cc_title,~r~n" + &
"       ctx_basic_info.cc_department,~r~n" + &
"       ctx_basic_info.cc_legal_rep,~r~n" + &
"       ctx_basic_info.keyword,~r~n" + &
"       ctx_basic_info.dvision,~r~n" + &
"       ctx_basic_info.custom_1,~r~n" + &
"       ctx_basic_info.custom_2,~r~n" + &
"       ctx_basic_info.custom_3,~r~n" + &
"       ctx_basic_info.custom_4,~r~n" + &
"       ctx_basic_info.custom_5,~r~n" + &
"       ctx_basic_info.custom_6,~r~n" + &
"       ctx_basic_info.custom_7,~r~n" + &
"       ctx_basic_info.custom_8,~r~n" + &
"       ctx_basic_info.custom_9,~r~n" + &
"       ctx_basic_info.custom_10,~r~n" + &
"       ctx_basic_info.group_multi_loc_id,~r~n" + &
"       ctx_basic_info.revision_reason,~r~n" + &
"       ctx_basic_info.group_id,~r~n" + &
"       ctx_basic_info.record_id,~r~n" + &
"       ctx_basic_info.custom_11,~r~n" + &
"       ctx_basic_info.custom_12,~r~n" + &
"       ctx_basic_info.custom_13,~r~n" + &
"       ctx_basic_info.custom_14,~r~n" + &
"       ctx_basic_info.custom_15,~r~n" + &
"       ctx_basic_info.custom_16,~r~n" + &
"       ctx_basic_info.custom_17,~r~n" + &
"       ctx_basic_info.custom_18,~r~n" + &
"       ctx_basic_info.custom_19,~r~n" + &
"       ctx_basic_info.custom_20,~r~n" + &
"       ctx_basic_info.custom_21,~r~n" + &
"       ctx_basic_info.custom_22,~r~n" + &
"       ctx_basic_info.custom_date1,~r~n" + &
"       ctx_basic_info.custom_date2,~r~n" + &
"       ctx_basic_info.custom_date3,~r~n" + &
"       ctx_basic_info.custom_date4,~r~n" + &
"       ctx_basic_info.custom_date5,~r~n" + &
"       ctx_basic_info.custom_date6,~r~n" + &
"       ctx_basic_info.custom_date7,~r~n" + &
"       ctx_basic_info.custom_date8,~r~n" + &
"       ctx_basic_info.custom_date9,~r~n" + &
"       ctx_basic_info.custom_date10,~r~n" + &
"       ctx_basic_info.custom_date16,~r~n" + &
"       ctx_basic_info.custom_date17,~r~n" + &
"       ctx_basic_info.custom_n1,~r~n" + &
"       ctx_basic_info.custom_n2,~r~n" + &
"       ctx_basic_info.custom_n3,~r~n" + &
"       ctx_basic_info.custom_n4,~r~n" + &
"       ctx_basic_info.custom_n5,~r~n" + &
"       ctx_basic_info.custom_n6,~r~n" + &
"       ctx_basic_info.custom_n7,~r~n" + &
"       ctx_basic_info.custom_n8,~r~n" + &
"       ctx_basic_info.custom_n9,~r~n" + &
"       ctx_basic_info.custom_n10,~r~n" + &
"       ctx_basic_info.custom_n11,~r~n" + &
"       ctx_basic_info.custom_n12,~r~n" + &
"       ctx_basic_info.custom_n13,~r~n" + &
"       ctx_basic_info.custom_n14,~r~n" + &
"       ctx_basic_info.custom_n15,~r~n" + &
"       ctx_basic_info.custom_n16,~r~n" + &
"       ctx_basic_info.custom_n17,~r~n" + &
"       ctx_basic_info.custom_n18,~r~n" + &
"       ctx_basic_info.custom_n19,~r~n" + &
"       ctx_basic_info.custom_n20,~r~n" + &
"       ctx_basic_info.custom_n21,~r~n" + &
"       ctx_basic_info.custom_n22,~r~n" + &
"       ctx_basic_info.custom_n23,~r~n" + &
"       ctx_basic_info.custom_n24,~r~n" + &
"       ctx_basic_info.custom_n25,~r~n" + &
"       ctx_basic_info.custom_n26,~r~n" + &
"       ctx_basic_info.custom_n27,~r~n" + &
"       ctx_basic_info.version_number,~r~n" + &
"       ctx_basic_info.version_date,~r~n" + &
"       ctx_basic_info.notes,~r~n" + &
"       ctx_basic_info.app_facility,~r~n" + &
"       ctx_basic_info.master_contract_id AS master_ctx_id,~r~n" + &
"       ctx_basic_info.master_contract_name,~r~n" + &
"       code_lookup_6.code AS dvision_code,~r~n" + &
"       code_lookup_6.description AS dvision_description~r~n" + &
"  FROM (((((((ctx_basic_info LEFT OUTER JOIN code_lookup ON ctx_basic_info.category = code_lookup.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_basic_info.status = code_lookup_1.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_basic_info.contract_type = code_lookup_2.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_basic_info.term_reason = code_lookup_3.lookup_code)~r~n" + &
"       INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id)~r~n" + &
"       INNER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_6 ON ctx_basic_info.dvision = code_lookup_6.lookup_code~r~n" + &
"	WHERE ctx_basic_info.is_template = 0 ~r~n" + &
"ORDER BY ctx_basic_info.ctx_id"

//Added By Ken.Guo 2010-03-10. Add default_email column
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='V_ctx_contract_contacts' and type = 'V')  " + &
"  drop view V_ctx_contract_contacts "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  V_ctx_contract_contacts " + &
"AS SELECT     contact_id,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS contact_phone,  " + &
"          (SELECT     TOP 1 contact_email  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code   " + &
"                                         FROM          code_lookup AS code_lookup_2  " + &
"                                        WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Email')  )) ) AS contact_email,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup AS code_lookup_1  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Fax') )) ) AS contact_Fax,   " + &
"          (SELECT     TOP 1 ext  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"           WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id)  AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS ext,   " + &
"            association, notes, owner, access, ctx_id, ic_area,default_email  " + &
"FROM         CTX_CONTRACT_CONTACTS  "

//Added by jervis on 2009-08-25
//Add money_value field. 
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_requirement') ~r~n" + &
" drop view v_ctx_requirement"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create view v_ctx_requirement as~r~n" + &
"select top 100 percent~r~n" + &
"       ctx_req_profile_hdr_1.ctx_id,~r~n" + &
"       ctx_req_profile.rqmnt_name,~r~n" + &
"       ctx_req_profile.rqmnt_description,~r~n" + &
"       ctx_rqmnt_category.category_name,~r~n" + &
"       ctx_req_tmplt_element.element_name,~r~n" + &
"       datavalue = (case ctx_req_tmplt_element.value_type~r~n" + &
"                         when 1 then convert(varchar,ctx_elements.date_value)~r~n" + &
"                         when 2 then ctx_elements.field_value~r~n" + &
"                         when 3 then ctx_elements.char_value~r~n" + &
"                         when 4 then convert(varchar,ctx_elements.integer_value)~r~n" + &
"                         when 6 then convert(varchar,ctx_elements.money_value)~r~n" + &
"                         when 5 then ctx_elements.field_value end),~r~n" + &
"       ctx_elements.clause~r~n" + &
"  from ctx_req_profile~r~n" + &
"       inner join ctx_req_profile_hdr as ctx_req_profile_hdr_1 on ctx_req_profile.ctx_req_profile_id = ctx_req_profile_hdr_1.ctx_req_profile_id~r~n" + &
"       inner join ctx_rqmnt_category on ctx_rqmnt_category.ctx_req_profile_id = ctx_req_profile_hdr_1.ctx_req_profile_id~r~n" + &
"       inner join ctx_req_tmplt_element on ctx_rqmnt_category.ctx_req_profile_id = ctx_req_tmplt_element.ctx_req_profile_id and ctx_rqmnt_category.ctx_rqmnt_category_id = ctx_req_tmplt_element.ctx_rqmnt_category_id~r~n" + &
"       inner join ctx_elements on ctx_elements.ctx_req_tmplt_element_id = ctx_req_tmplt_element.ctx_req_tmplt_element_id and ctx_req_profile_hdr_1.ctx_req_profile_hdr_id = ctx_elements.ctx_req_profile_hdr_id~r~n" + &
"order by ctx_req_profile_hdr_1.ctx_id"

//Added by jervis 08.28.2009
//Modify Contract_type to Contact_type
//Delete V_ctx_contract_contacts.association
//Add default_email column By Ken.Guo 2010-03-10
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_external' and type = 'V')  " + &
"  drop view v_ctx_contacts_external "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_external " + &
"as SELECT     TOP 100 PERCENT CTX_BASIC_INFO.ctx_id, app_facility.facility_name, code_lookup.code AS contact_type_code,   " + &
"                      code_lookup.description AS contact_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name,   " + &
"                      CTX_CONTACTS.middle_name, code_lookup_4.description AS contact_title, code_lookup_1.code AS contract_department_code,   " + &
"                      code_lookup_1.description AS contract_department_des, app_facility.street, app_facility.street_2, app_facility.street_3,   " + &
"                      app_facility.city, app_facility.zip, app_facility.state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2,   " + &
"                      CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6,   " + &
"                      CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10,   " + &
"                      V_ctx_contract_contacts.access, V_ctx_contract_contacts.owner, V_ctx_contract_contacts.notes,    " + &
"                      V_ctx_contract_contacts.ext, V_ctx_contract_contacts.contact_Fax, V_ctx_contract_contacts.contact_email,   " + &
"                      V_ctx_contract_contacts.contact_phone AS phone, NULL AS Phone_Type_code, NULL AS Phone_type_Description,   " + &
"                      V_ctx_contract_contacts.contact_id,  " + &
"                      V_ctx_contract_contacts.default_email as default_to  " + &
"FROM         CTX_CONTACTS INNER JOIN  " + &
"                      V_ctx_contract_contacts ON CTX_CONTACTS.contact_id = V_ctx_contract_contacts.contact_id INNER JOIN  " + &
"                      CTX_BASIC_INFO INNER JOIN  " + &
"                      app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON   " + &
"                      V_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id LEFT OUTER JOIN  " + &
 "                     code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code LEFT OUTER JOIN  " + &
 "                     code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code LEFT OUTER JOIN  " + &
 "                     code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code  " + &
"where V_ctx_contract_contacts.ic_area='e'  " + &
"ORDER BY CTX_BASIC_INFO.ctx_id  " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_internal' and type = 'V')  " + &
"  drop view v_ctx_contacts_internal "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_contacts_internal " + &
"as SELECT     TOP 100 PERCENT CTX_BASIC_INFO.ctx_id, app_facility.facility_name, code_lookup.code AS contact_type_code,  " + &
"                      code_lookup.description AS contact_type_description, CTX_CONTACTS.first_name, CTX_CONTACTS.last_name,  " + &
"                      CTX_CONTACTS.middle_name, code_lookup_4.description AS contact_title, code_lookup_1.code AS contract_department_code,  " + &
"                      code_lookup_1.description AS contract_department_des, app_facility.street, app_facility.street_2, app_facility.street_3,  " + &
"                      app_facility.city, app_facility.zip, app_facility.state, CTX_CONTACTS.custom_1, CTX_CONTACTS.custom_2,  " + &
"                      CTX_CONTACTS.custom_3, CTX_CONTACTS.custom_4, CTX_CONTACTS.custom_5, CTX_CONTACTS.custom_6,  " + &
"                      CTX_CONTACTS.custom_7, CTX_CONTACTS.custom_8, CTX_CONTACTS.custom_9, CTX_CONTACTS.custom_10,  " + &
"                      V_ctx_contract_contacts.access, V_ctx_contract_contacts.owner, V_ctx_contract_contacts.notes,   " + &
"                      V_ctx_contract_contacts.ext, V_ctx_contract_contacts.contact_Fax, V_ctx_contract_contacts.contact_email,  " + &
"                      V_ctx_contract_contacts.contact_phone AS phone, NULL AS Phone_Type_code, NULL AS Phone_type_Description,  " + &
"                      V_ctx_contract_contacts.contact_id, " + &
"                      V_ctx_contract_contacts.default_email as default_to  " + &
"FROM         CTX_CONTACTS INNER JOIN " + &
"                      V_ctx_contract_contacts ON CTX_CONTACTS.contact_id = V_ctx_contract_contacts.contact_id INNER JOIN " + &
"                      CTX_BASIC_INFO INNER JOIN " + &
"                      app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON  " + &
"                      V_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id LEFT OUTER JOIN " + &
"                      code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code LEFT OUTER JOIN " + &
"                      code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = code_lookup_4.lookup_code " + &
"where V_ctx_contract_contacts.ic_area='i'  " + &
"ORDER BY CTX_BASIC_INFO.ctx_id " 

//BEGIN---Modify by Scofield on 2009-11-03
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists(SELECT TOP 1 1 FROM sysobjects WHERE name='v_ctx_Document' AND type = 'V')~r~n" + &
"   DROP VIEW v_ctx_document"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_document AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       ctx_am_document.Doc_id,~r~n" + &
"       ctx_am_document.ctx_id,~r~n" + &
"       ctx_am_document.doc_name,~r~n" + &
"       ctx_am_document.Revision,~r~n" + &
"       ctx_am_document.doc_type,~r~n" + &
"       ctx_am_document.doc_ext,~r~n" + &
"       code_lookup_1.code AS category,~r~n" + &
"       ctx_am_document.Create_by,~r~n" + &
"       ctx_am_document.Create_date,~r~n" + &
"       code_lookup.code AS Status,~r~n" + &
"       ctx_am_document.Status_by,~r~n" + &
"       ctx_am_document.Status_date,~r~n" + &
"       ctx_am_document.Doc_from_name,~r~n" + &
"       ctx_am_document.checkout_by,~r~n" + &
"       ctx_am_document.checkout_date,~r~n" + &
"       CASE WHEN checkout_status=1 THEN 'Check out' ELSE 'Normal' END AS checkout_status,~r~n" + &
"       (SELECT COUNT(*) AS Expr1 FROM ctx_am_doc_audit WHERE (Doc_id = ctx_am_document.Doc_id)) AS audit_count~r~n" + &
"  FROM ctx_am_document INNER JOIN code_lookup ON ctx_am_document.Status = code_lookup.lookup_code~r~n" + &
"                       INNER JOIN code_lookup AS code_lookup_1 ON ctx_am_document.category = code_lookup_1.lookup_code~r~n" + &
"ORDER BY ctx_am_document.ctx_id"
//END---Modify by Scofield on 2009-11-03


//Add by jervis -- 12.11.2009
//Drop ctx_notification_users info
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_info_alarms' and type = 'V')  " + &
"  drop view v_ctx_basic_info_alarms "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info_alarms " + &
"as SELECT  top 100 percent   " + &
"	ctx_basic_info.ctx_id,  " + &
"	app_facility.facility_name,  " + &
"	ctx_notification.alm_enabled,  " + &
"	ctx_notification.alm_notification_days,  " + &
"	ctx_notification.alm_last_notification_sent,  " + &
"	ctx_notification.alm_post_notification_days,  " + &
"	ctx_notification.alm_total_tries,  " + &
"	ctx_notification.alm_action_item_posted,  " + &
"	ctx_notification.alm_total_tries_counter,  " + &
"	ctx_notification.alm_frequency,  " + &
"	ctx_notification.create_action_item,  " + &
"	ctx_notification.alm_mailto  " + &
"FROM ctx_basic_info  " + &
"LEFT OUTER JOIN ctx_notification ON ctx_basic_info.ctx_id = ctx_notification.ctx_id  " + &
"INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id  " + &
"GROUP BY ctx_basic_info.ctx_id,  " + &
"	app_facility.facility_name,  " + &
"	ctx_notification.alm_enabled,  " + &
"	ctx_notification.alm_notification_days,  " + &
"	ctx_notification.alm_last_notification_sent,  " + &
"	ctx_notification.alm_post_notification_days,  " + &
"	ctx_notification.alm_total_tries,  " + &
"	ctx_notification.alm_action_item_posted,  " + &
"	ctx_notification.alm_total_tries_counter,  " + &
"	ctx_notification.alm_frequency,  " + &
"	ctx_notification.create_action_item,  " + &
"	ctx_notification.alm_mailto  " + &
"ORDER BY ctx_basic_info.ctx_id "

//Added By Ken.Guo 2010-02-05. Added alm_action_title from Jim
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_basic_info_alarms' and type = 'V')  " + &
"  drop view v_ctx_basic_info_alarms "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_basic_info_alarms as ~r~n" + &
"SELECT  top 100 percent    ctx_basic_info.ctx_id,   app_facility.facility_name,   ~r~n" + &
"ctx_notification.alm_enabled,   ctx_notification.alm_notification_days,   ~r~n" + &
"ctx_notification.alm_last_notification_sent,   ctx_notification.alm_post_notification_days,   ~r~n" + &
"ctx_notification.alm_total_tries,   ctx_notification.alm_action_item_posted,  ~r~n" + &
" ctx_notification.alm_total_tries_counter,   ctx_notification.alm_frequency,   ~r~n" + &
"ctx_notification.create_action_item,   ctx_notification.alm_mailto,~r~n" + &
"ctx_notification.alm_action_title~r~n" + &
"FROM ctx_basic_info  LEFT OUTER JOIN ctx_notification ~r~n" + &
"ON ctx_basic_info.ctx_id = ctx_notification.ctx_id  ~r~n" + &
"INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id  ~r~n" + &
"GROUP BY ctx_basic_info.ctx_id,   app_facility.facility_name,   ~r~n" + &
"ctx_notification.alm_enabled,   ctx_notification.alm_notification_days,   ~r~n" + &
"ctx_notification.alm_last_notification_sent,   ~r~n" + &
"ctx_notification.alm_post_notification_days,   ctx_notification.alm_total_tries,  ~r~n" + &
"ctx_notification.alm_action_item_posted,   ctx_notification.alm_total_tries_counter,  ~r~n" + &
"ctx_notification.alm_frequency,   ctx_notification.create_action_item,   ~r~n" + &
"ctx_notification.alm_mailto,  ctx_notification.alm_action_title~r~n" + &
"ORDER BY ctx_basic_info.ctx_id"



of_execute_sqls("of_ver95_release_view1")

Return 1

end function

public function integer of_ver95_release_storeprocedure1 ();//Added By Ken.Guo 2009-08-25.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_contract_search' AND type = 'P') " + &
"    DROP PROCEDURE sp_contract_search"

//Added By Ken.Guo 2009-12-21.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE  PROCEDURE sp_contract_search(  @user_d VARCHAR(10)   )~r~n" + &
" AS    ~r~n" + &
"BEGIN      ~r~n" + &
"SELECT DISTINCT ~r~n" + &
"	ctx_basic_info.app_facility,    ~r~n" + &
"	ctx_products.product_id product_code,     ~r~n" + &
"	code_lookup.code product_name,       ~r~n" + &
"	ctx_basic_info.effective_date,      ~r~n" + &
"	ctx_basic_info.expriation_date,       ~r~n" + &
"	ctx_basic_info.status,     ~r~n" + &
"	ctx_basic_info.group_multi_loc_id,       ~r~n" + &
"	ctx_basic_info.ctx_id,~r~n" + &
" 	ctx_basic_info.master_contract_id,                             ~r~n" + &
"	master_cnt = (SELECT Count(ctx_basic_info1.ctx_id) ~r~n" + &
"			FROM ctx_basic_info ctx_basic_info1 ~r~n" + &
"			WHERE ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id and ctx_basic_info.is_template = 0 ),  ~r~n" + &
"	ctx_basic_info.category,        ~r~n" + &
"	ctx_basic_info.facility_id,     ~r~n" + &
"	ctx_basic_info.contract_type,       ~r~n" + &
"	code_lookup1.code product_type, ~r~n" + &
"	ctx_basic_info.reimbursment_menth,       ~r~n" + &
"	ctx_basic_info.file_location,    ~r~n" + &
"	ctx_basic_info.review_date,       ~r~n" + &
"	ctx_basic_info.review_by,     ~r~n" + &
"	ctx_basic_info.term_date,       ~r~n" + &
"	ctx_basic_info.term_reason,     ~r~n" + &
"	ctx_basic_info.last_revis_date,       ~r~n" + &
"	ctx_basic_info.other_date_1,       ~r~n" + &
"	ctx_basic_info.other_date_2,     ~r~n" + &
"	ctx_basic_info.oc_signed_by,       ~r~n" + &
"	ctx_basic_info.oc_title,      ~r~n" + &
"	ctx_basic_info.oc_department,       ~r~n" + &
"	ctx_basic_info.oc_legal_rep,       ~r~n" + &
"	ctx_basic_info.cc_signed_by,     ~r~n" + &
"	ctx_basic_info.cc_title,       ~r~n" + &
"	ctx_basic_info.cc_department,       ~r~n" + &
"	ctx_basic_info.cc_legal_rep,     ~r~n" + &
"	ctx_basic_info.notes,       ~r~n" + &
"	ctx_basic_info.keyword,       ~r~n" + &
"	ctx_basic_info.dvision,   ~r~n" + &
"	ctx_basic_info.custom_1,       ~r~n" + &
"	ctx_basic_info.custom_2,       ~r~n" + &
"	ctx_basic_info.custom_3,       ~r~n" + &
"	ctx_basic_info.custom_4,       ~r~n" + &
"	ctx_basic_info.custom_5,     ~r~n" + &
"	ctx_basic_info.custom_6,       ~r~n" + &
"	ctx_basic_info.custom_7,       ~r~n" + &
"	ctx_basic_info.custom_8, ~r~n" + &
"	ctx_basic_info.custom_9,       ~r~n" + &
"	ctx_basic_info.custom_10,    ~r~n" + &
"	ctx_basic_info.group_id,~r~n" + &
"	ctx_basic_info.revision_reason,       ~r~n" + &
"	ctx_basic_info.record_id ,   ~r~n" + &
"	owner = upper((SELECT top 1 ctx_contacts.user_d       ~r~n" + &
"			FROM ctx_contacts,ctx_contract_contacts       ~r~n" + &
"			WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) ~r~n" + &
"			AND (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			  AND ( ctx_contract_contacts.owner = 'Y' ) ~r~n" + &
"			  AND ( ctx_contract_contacts.ic_area = 'I' ) )),   ~r~n" + &
"	contracted_entity = (SELECT top 1 group_multi_loc.rec_id              ~r~n" + &
"	  			FROM ctx_loc,                  group_multi_loc              ~r~n" + &
"				WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) ~r~n" + &
"				AND ( ctx_loc.ctx_id = ctx_basic_info.ctx_id) ~r~n" + &
"				AND ctx_loc.loc_id = 0),    ~r~n" + &
"	app_facility.facility_name facility_name,   ~r~n" + &
"	ctx_basic_info.custom_date1,      ~r~n" + &
"	ctx_basic_info.custom_date2,      ~r~n" + &
"	ctx_basic_info.custom_date3,      ~r~n" + &
"	ctx_basic_info.custom_date4,  ~r~n" + &
"	ctx_basic_info.custom_date5,      ~r~n" + &
"	ctx_basic_info.inserted_by_user,    ~r~n" + &
"	ctx_basic_info.inserted_at_date_time,      ~r~n" + &
"	ctx_basic_info.updated_by_user,   ~r~n" + &
"	ctx_basic_info.~r~n" + &
"	updated_at_date_time,      ~r~n" + &
"	ctx_basic_info.custom_11,      ~r~n" + &
"	ctx_basic_info.custom_12,   ~r~n" + &
"	ctx_basic_info.custom_13,      ~r~n" + &
"	ctx_basic_info.custom_14,      ~r~n" + &
"	ctx_basic_info.custom_15,  ~r~n" + &
"	ctx_basic_info.custom_16,      ~r~n" + &
"	ctx_basic_info.custom_17,      ~r~n" + &
"	ctx_basic_info.custom_18,      ~r~n" + &
"	ctx_basic_info.custom_19,      ~r~n" + &
"	ctx_basic_info.custom_20,     ~r~n" + &
"	ctx_basic_info.custom_date6,      ~r~n" + &
"	ctx_basic_info.custom_date7,      ~r~n" + &
"	ctx_basic_info.custom_date8,  ~r~n" + &
"	ctx_basic_info.custom_date9,      ~r~n" + &
"	ctx_basic_info.custom_date10,      ~r~n" + &
"	ctx_basic_info.custom_date11,      ~r~n" + &
"	ctx_basic_info.custom_date12,      ~r~n" + &
"	ctx_basic_info.custom_date13,  ~r~n" + &
"	ctx_basic_info.custom_date14,      ~r~n" + &
"	ctx_basic_info.custom_date15,      ~r~n" + &
"	ctx_basic_info.custom_n1, ~r~n" + &
"	ctx_basic_info.custom_n2,      ~r~n" + &
"	ctx_basic_info.custom_n3,      ~r~n" + &
"	ctx_basic_info.custom_n4,      ~r~n" + &
"	ctx_basic_info.custom_n5,      ~r~n" + &
"	ctx_basic_info.custom_n6,  ~r~n" + &
"	ctx_basic_info.custom_n7,      ~r~n" + &
"	ctx_basic_info.custom_n8,      ~r~n" + &
"	ctx_basic_info.custom_n9,    ~r~n" + &
"	ctx_basic_info.custom_n10,      ~r~n" + &
"	ctx_basic_info.custom_n11,      ~r~n" + &
"	ctx_basic_info.custom_n12,      ~r~n" + &
"	ctx_basic_info.custom_n13,      ~r~n" + &
"	ctx_basic_info.custom_n14,      ~r~n" + &
"	ctx_basic_info.custom_n15,      ~r~n" + &
"	ctx_basic_info.custom_n16,      ~r~n" + &
"	ctx_basic_info.custom_n17,      ~r~n" + &
"	ctx_basic_info.custom_n18,      ~r~n" + &
"	ctx_basic_info.custom_n19,      ~r~n" + &
"	ctx_basic_info.custom_n20,      ~r~n" + &
"	ctx_basic_info.custom_n21,      ~r~n" + &
"	ctx_basic_info.custom_n22,      ~r~n" + &
"	ctx_basic_info.custom_n23,      ~r~n" + &
"	ctx_basic_info.custom_n24,      ~r~n" + &
"	ctx_basic_info.custom_n25,      ~r~n" + &
"	ctx_basic_info.version_number,      ~r~n" + &
"	ctx_basic_info.version_date,      ~r~n" + &
"	ctx_basic_info.master_contract_name ,~r~n" + &
"	access = AA.access   ,~r~n" + &
"	code_lookup2.code status_name,~r~n" + &
"	code_lookup3.code category_name,~r~n" + &
"	code_lookup4.code contract_type_name,~r~n" + &
"	code_lookup5.code dvision_name ~r~n" + &
"FROM  ctx_basic_info  ~r~n" + &
"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id  ~r~n" + &
"LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code  ~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code~r~n" + &
"~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup2 ON ctx_basic_info.status = code_lookup2.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup3 ON ctx_basic_info.category = code_lookup3.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup4 ON ctx_basic_info.contract_type = code_lookup4.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup5 ON ctx_basic_info.dvision = code_lookup5.lookup_code~r~n" + &
"~r~n" + &
"LEFT OUTER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id, ~r~n" + &
"(~r~n" + &
"SELECT DISTINCT TOP 100 Percent  ctx_id = ctx_contract_contacts.ctx_id, user_id = ctx_contacts.user_d, access = (CASE ctx_contract_contacts.owner WHEN 'Y' THEN 'F' ELSE ctx_contract_contacts.access END)~r~n" + &
"FROM ctx_contract_contacts Left Outer Join~r~n" + &
"(~r~n" + &
"Select ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d ~r~n" + &
"From ctx_contract_contacts ctx_contract_contacts1 ,ctx_contacts ctx_contacts1~r~n" + &
"Where ctx_contract_contacts1.contact_id = ctx_contacts1.contact_id And ctx_contacts1.user_d = @user_d~r~n" + &
"Group By ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d~r~n" + &
"Having Count(ctx_contract_contacts1.ctx_id) > 1~r~n" + &
") ccc~r~n" + &
"On ctx_contract_contacts.ctx_id = ccc.ctx_id~r~n" + &
",ctx_contacts~r~n" + &
"WHERE ctx_contacts.user_d = @user_d~r~n" + &
"	AND (ccc.ctx_id is null or ctx_contract_contacts.access = 'F' )~r~n" + &
"	AND ctx_contract_contacts.contact_id = ctx_contacts.contact_id ~r~n" + &
"	AND ( ctx_contract_contacts.access IN ('F','R') ~r~n" + &
"	OR ctx_contract_contacts.owner = 'Y' )~r~n" + &
"	AND ctx_contract_contacts.ic_area = 'I'~r~n" + &
"~r~n" + &
"UNION ~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_group_access.ctx_id,user_id = security_group_users.user_id, access =  ctx_group_access.access~r~n" + &
"FROM ctx_group_access Left Outer Join ~r~n" + &
"(~r~n" + &
"Select ctx_group_access1.ctx_id, security_group_users1.user_id ~r~n" + &
"From ctx_group_access ctx_group_access1,security_group_users security_group_users1~r~n" + &
"Where ctx_group_access1.group_id = security_group_users1.group_id And security_group_users1.user_id = @user_d~r~n" + &
"Group by ctx_group_access1.ctx_id, security_group_users1.user_id~r~n" + &
"Having count(ctx_group_access1.ctx_id) > 1 ~r~n" + &
") cga On ctx_group_access.ctx_id = cga.ctx_id ,~r~n" + &
"security_group_users,~r~n" + &
"icred_settings~r~n" + &
"WHERE security_group_users.user_id = @user_d~r~n" + &
"	AND (cga.ctx_id is null or ctx_group_access.access = 'F')~r~n" + &
"	AND icred_settings.group_access = 1~r~n" + &
"	AND ctx_group_access.group_id = security_group_users.group_id~r~n" + &
"	AND ctx_group_access.access in ('F','R')~r~n" + &
"	AND NOT EXISTS	(SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_group_users.user_id )~r~n" + &
"			AND ( ctx_contract_contacts.ic_area = 'I' )~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_group_access.ctx_id )~r~n" + &
"			)~r~n" + &
"~r~n" + &
"UNION~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_basic_info.ctx_id, user_id = security_users.user_id, access = (CASE ctx_acp_contract_management_right.rights WHEN '11' THEN 'F' WHEN '12' THEN 'R' ELSE 'N' END)~r~n" + &
"FROM ctx_acp_contract_management_right, security_users, ctx_basic_info~r~n" + &
"WHERE security_users.user_id = @user_d~r~n" + &
"	AND ctx_acp_contract_management_right.types = 1~r~n" + &
"	AND ctx_acp_contract_management_right.role_id = security_users.role_id~r~n" + &
"	AND ctx_acp_contract_management_right.category = ctx_basic_info.category~r~n" + &
"  And ctx_basic_info.is_template = 0 ~r~n" + &
"	AND ctx_acp_contract_management_right.rights In ('11','12')~r~n" + &
"	AND NOT EXISTS (SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_users.user_id AND ctx_contract_contacts.ic_area = 'I') ~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			UNION~r~n" + &
"			SELECT 1 FROM ctx_group_access,security_group_users,icred_settings~r~n" + &
"			WHERE icred_settings.group_access = 1~r~n" + &
"			AND (ctx_group_access.group_id = security_group_users.group_id )~r~n" + &
"			AND ( security_group_users.user_id = security_users.user_id )	~r~n" + &
"			AND ( ctx_group_access.ctx_id = ctx_basic_info.ctx_id )~r~n" + &
"			)~r~n" + &
") AA ~r~n" + &
"WHERE ctx_basic_info.ctx_id = AA.ctx_id and ctx_basic_info.is_template = 0 ~r~n" + &
"ORDER BY ctx_basic_info.master_contract_id Asc, ctx_basic_info.ctx_id  Asc    ~r~n" + &
"END"

of_execute_sqls("of_ver95_release_storeprocedure1")

Return 1
end function

public function integer of_ver95_release_createfulltext1 ();//Add by jervis 10.21.2009
of_enable_fulltext()						

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_image'),'image_file','IsFulltextIndexed' ) = 0)  " + &
"	exec sp_fulltext_column 'ctx_am_doc_image','image_file','add',0,'doc_ext_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_am_doc_image','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_am_doc_image','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_am_doc_image') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_am_doc_image','start_background_updateindex' "

//Begin - Added By Ken.Guo 2010-01-19. Add full text for "ctx_acp_clause_image.image_file"
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_acp_clause_image' and i.name = 'index_ctx_acp_clause_image_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_acp_clause_image_id_forcatalog ON ctx_acp_clause_image(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_acp_clause_image_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_acp_clause_image_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause_image') , 'TableFulltextCatalogId' )=0) " + &
" exec sp_fulltext_table 'ctx_acp_clause_image','create','ctx_acp_clause_image_catalog','index_ctx_acp_clause_image_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause_image'),'image_file','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_acp_clause_image','image_file','add',0,'doc_type'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause_image') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_acp_clause_image','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause_image') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_acp_clause_image','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_acp_clause_image') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_acp_clause_image','start_background_updateindex' "
//End - Added By Ken.Guo 2010-01-19.







of_execute_sqls("of_ver95_release_createfulltext1")
return 1
end function

public function integer of_ver95_release_dropfulltext1 ();//Add by jervis 10.21.2009
of_enable_fulltext()					

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if (COLUMNPROPERTY (OBJECT_ID('ctx_am_doc_image'),'image_file','IsFulltextIndexed' ) = 1) " + &
	"begin " + &
	"	exec sp_fulltext_column 'ctx_am_doc_image','image_file','drop' " + &
	"end "


//Added By Ken.Guo 2010-01-19.
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if (COLUMNPROPERTY (OBJECT_ID('ctx_acp_clause_image'),'image_file','IsFulltextIndexed' ) = 1) " + &
	"begin " + &
	"	exec sp_fulltext_column 'ctx_acp_clause_image','image_file','drop' " + &
	"end "	




of_execute_sqls("of_ver95_release_dropfulltext1")
return 1
end function

public function integer of_ver95_release_table2 ();//Added By Ken.Guo 2010-02-25.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='filter_documents' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add filter_documents integer null"

//Added By Ken.Guo 2010-02-25. from Zhangxingren
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table app_facility alter column state varchar(5) null"

//BEGIN---Modify by Scofield on 2010-03-02
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists (SELECT TOP 1 1 FROM sysobjects WHERE name = 'Start_Time_def')~r~n" + &
"ALTER TABLE ctx_action_items ADD CONSTRAINT Start_Time_def DEFAULT '1900-01-01 00:00:00' FOR Start_Time"
//END---Modify by Scofield on 2010-03-02

//Added By Ken.Guo 2010-03-09.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='screen_version' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add screen_version varchar(4)~r~n" 

//BEGIN---Modify by Scofield on 2010-03-16
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalFilterName_1'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalFilterName_1 varchar(255) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalFilterName_2'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalFilterName_2 varchar(255) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalFilterName_3'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalFilterName_3 varchar(255) Null"
//END---Modify by Scofield on 2010-03-16

//BEGIN---Modify by Scofield on 2010-03-17
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'CalArrangeMode'~r~n" + &
"      AND sysobjects.name = 'icred_settings'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD CalArrangeMode int Null"
//END---Modify by Scofield on 2010-03-17



of_execute_sqls("of_ver95_release_table2")

Return 1

end function

public function integer of_ver100_release_table1 ();//Added By Ken.Guo 2010-03-26.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='is_moved' and t.name='em_sent_items'	and t.type = 'U')~r~n" + &
"ALTER table em_sent_items add is_moved integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pop3_server' and t.name='em_smtp_accounts'	and t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add pop3_server varchar(100)  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pop3_port' and t.name='em_smtp_accounts'	and t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add pop3_port integer"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pop3_sort_rule' and t.name='em_smtp_accounts'	and t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add pop3_sort_rule char(1) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'em_mail_items' )~r~n" + &
"	Create Table em_mail_items ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		folder_id integer not null,~r~n" + &
"		sub_folder_id numeric(10,0) null,~r~n" + &
"		mail_msg_id varchar(100) null,~r~n" + &
"		mail_date datetime null,~r~n" + &
"		mail_subject varchar(200) null,~r~n" + &
"		mail_importance integer null,~r~n" + &
"		mail_from varchar(200) null,~r~n" + &
"		mail_to varchar(200) null,~r~n" + &
"		mail_cc varchar(200) null,~r~n" + &
"		mail_rfc822 image null,~r~n" + &
"		mail_plaintext text null,~r~n" + &
"		mail_attach_name varchar(500) null,~r~n" + &
"		mail_ctx_id numeric(10,0) null,~r~n" + &
"		mail_doc_id numeric(10,0) null,	~r~n" + &
"		mail_action_item_id numeric(10,0) null,~r~n" + &
"		mail_fromclx integer null,~r~n" + &
"		mail_save_format char(1) null,~r~n" + &
"		last_modify_date datetime null,~r~n" + &
"		read_status integer null,~r~n" + &
"		locked integer null,~r~n" + &
"		deleted integer null,~r~n" + &
"		flag integer null,	~r~n" + &
"		notes varchar(2000) null,	~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"


//Added By Ken.Guo 2010-04-07.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_mail_items alter column mail_to varchar(1000)"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_mail_items alter column mail_from varchar(1000)"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_mail_items alter column mail_cc varchar(1000)"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_mail_items alter column mail_attach_name varchar(1000)"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='mail_save_format' and t.name='em_mail_items'	and t.type = 'U' and c.length = 10)~r~n" + &
"alter table em_mail_items alter column mail_save_format varchar(10)"

//Added By Ken.Guo 2010-03-26.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'em_user_msg_id' )~r~n" + &
"	Create Table em_user_msg_id ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		mail_msg_id varchar(100) not null,~r~n" + &
"		mail_date datetime null,~r~n" + &
"		mail_downloaded integer null,~r~n" + &
"		notes varchar(200) null,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='email_start_date' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add email_start_date datetime null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='email_tag' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add email_tag varchar(100) null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'em_user_config' )~r~n" + &
"	Create Table em_user_config ~r~n" + &
"	(~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		email_receive_start_date datetime null,~r~n" + &
"		email_receive_by_date integer null,~r~n" + &
"		email_receive_by_clx integer null,~r~n" + &
"		email_receive_by_subject integer null,~r~n" + &
"		email_receive_all integer null,~r~n" + &
"		email_log integer null,~r~n" + &
"		email_delete_from_server integer null,~r~n" + &
"		email_timer integer null,~r~n" + &
"		Primary Key(user_id)~r~n" + &
"	)"

//Added By Ken.Guo 2010-04-28.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='email_rule_type' and t.name='em_user_config'	and t.type = 'U')~r~n" + &
"ALTER table em_user_config add email_rule_type integer null  "

//Jervis 03.30.2010
//Add Subject field in Alarm Message
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_subject' and t.name='ctx_notification'	and t.type = 'U')~r~n" + &
"alter table ctx_notification add alm_subject varchar(255) null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_subject' and t.name='ctx_ai_notification'	and t.type = 'U')~r~n" + &
"alter table ctx_ai_notification add alm_subject varchar(255) null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_subject' and t.name='ctx_am_ai_notification'	and t.type = 'U')~r~n" + &
"alter table ctx_am_ai_notification add alm_subject varchar(255) null"

//BEGIN---Modify by Scofield on 2010-03-31
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"ALTER TABLE ctx_contract_contacts ALTER COLUMN association varchar(100) Null"
//END---Modify by Scofield on 2010-03-31

//Added By Ken.Guo 2010-04-12.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'em_mail_item_attachments' )~r~n" + &
"	Create Table em_mail_item_attachments ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		mail_item_id numeric(10,0) not null,~r~n" + &
"		attachment_name varchar(200) not null,~r~n" + &
"		image_file image null,~r~n" + &
"		type char(1) null,~r~n" + &
"		CONSTRAINT FK_mail_items FOREIGN KEY (mail_item_id)~r~n" + &
"		   REFERENCES em_mail_items (id) on Delete CASCADE,~r~n" + &
"		Primary Key(id)~r~n" + &
"	)"

//Added By Ken.Guo 2010-04-14.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='last_modify_date' and t.name='em_mail_item_attachments'	and t.type = 'U')~r~n" + &
"ALTER table em_mail_item_attachments add last_modify_date datetime null  ~r~n" + &
""

//BEGIN---Modify by Scofield on 2010-04-14
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'left_bracket'~r~n" + &
"      AND sysobjects.name = 'conv_view_where'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE conv_view_where ADD left_bracket varchar(5) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'right_bracket'~r~n" + &
"      AND sysobjects.name = 'conv_view_where'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE conv_view_where ADD right_bracket varchar(5) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'logical'~r~n" + &
"      AND sysobjects.name = 'conv_view_where'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE conv_view_where ADD logical varchar(5) Null"

//END---Modify by Scofield on 2010-04-14

//BEGIN---Modify by Scofield on 2010-04-19
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_1'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_1 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_2'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_2 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_3'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_3 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_4'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_4 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_5'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_5 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_6'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_6 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_7'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_7 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_8'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_8 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_9'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_9 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_10'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_10 varchar(75) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n1'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n1 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n2'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n2 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n3'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n3 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n4'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n4 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n5'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n5 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n6'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n6 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n7'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n7 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n8'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n8 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n9'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n9 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_n10'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_n10 numeric(12,2) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date1'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_date1 datetime Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date2'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_date2 datetime Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date3'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_date3 datetime Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date4'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_date4 datetime Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date5'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_date5 datetime Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_date6'~r~n" + &
"      AND sysobjects.name = 'ctx_am_document'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_am_document ADD custom_date6 datetime Null"
//END---Modify by Scofield on 2010-04-19

//Added By Ken.Guo 2010-04-21.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pop3_server' and t.name='em_user_msg_id'	and t.type = 'U')~r~n" + &
"ALTER table em_user_msg_id add pop3_server varchar(100) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pop3_account' and t.name='em_user_msg_id'	and t.type = 'U')~r~n" + &
"ALTER table em_user_msg_id add pop3_account varchar(100) null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='auto_add_ctx' and t.name='em_user_config'	and t.type = 'U')~r~n" + &
"ALTER table em_user_config add auto_add_ctx integer null  "

//BEGIN---Modify by Scofield on 2010-05-10
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_notes_1'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_notes_1 varchar(8000) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_notes_2'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_notes_2 varchar(8000) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_notes_3'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_notes_3 varchar(8000) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_notes_4'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_notes_4 varchar(8000) Null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'custom_notes_5'~r~n" + &
"      AND sysobjects.name = 'ctx_basic_info'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE ctx_basic_info ADD custom_notes_5 varchar(8000) Null"
//END---Modify by Scofield on 2010-05-10

//Added By Ken.Guo 2010-05-12.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='email_tag_mode' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD email_tag_mode integer null~r~n"

//BEGIN---Modify by Scofield on 2010-05-18
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not Exists(~r~n" + &
"   SELECT 1 ~r~n" + &
"     FROM syscolumns, sysobjects~r~n" + &
"    WHERE syscolumns.id   = sysobjects.id~r~n" + &
"      AND syscolumns.name = 'AutoExport'~r~n" + &
"      AND sysobjects.name = 'Security_Users'~r~n" + &
"      AND sysobjects.type = 'U')~r~n" + &
"ALTER TABLE Security_Users ADD AutoExport int Null"
//END---Modify by Scofield on 2010-05-18

//Added By Ken.Guo 2010-05-19.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select TOP 1 1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='getting_started' and t.name='security_users' and t.type = 'U') " + &
"alter table security_users add getting_started integer null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If not exists( select 1 from sysobjects where name = 'dashboard_gadgets_getting_started' )~r~n" + &
"	Create Table dashboard_gadgets_getting_started~r~n" + &
"	(~r~n" + &
"	id numeric(10) identity not null,~r~n" + &
"	user_id varchar(50) not null,~r~n" + &
"	sort_result varchar(100) null,~r~n" + &
"	display_columns integer null~r~n" + &
"	Primary Key(id)~r~n" + &
"	)  ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If not exists( select 1 from sysobjects where name = 'ctx_getting_started' )~r~n" + &
"	Create Table ctx_getting_started~r~n" + &
"	(~r~n" + &
"	id integer not null,~r~n" + &
"	enable_picture varchar(100) not null,~r~n" + &
"	disable_picture varchar(100) not null,~r~n" + &
"	tips varchar(100) null~r~n" + &
"	Primary Key(id)~r~n" + &
"	)  "

//Added By Ken.Guo 2010-06-03.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='id_forcelog' and t.name='ctx_fee_sched_nm'	and t.type = 'U')~r~n" + &
"ALTER table ctx_fee_sched_nm add id_forcelog integer identity not null  ~r~n"

//Added By Ken.Guo 2010-07-01.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='delete_flag' and t.name='ctx_bidq_doc'	and t.type = 'U')~r~n" + &
"ALTER table ctx_bidq_doc add delete_flag integer null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table ctx_bidq_doc alter column doc_type varchar(30)"

//Add by jervis 2010-07-19
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='fee_sched_calc_field_1' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add fee_sched_calc_field_1 money null default 0"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='fee_sched_calc_field_2' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add fee_sched_calc_field_2 money null default 0"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='fee_sched_calc_field_3' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add fee_sched_calc_field_3 money null default 0"

//Added By Ken.Guo 2010-08-06.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='default_order' and t.name='ctx_getting_started'	and t.type = 'U')~r~n" + &
"ALTER table ctx_getting_started add default_order integer null  "

//Added By Ken.Guo 2010-08-05.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='run_date_alarm' and t.name='security_users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add run_date_alarm integer null  ~r~n" 

//Add by jervis 08.09.2010
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID('FK_EXPORT_F_REFERENCE_EXPORT_H') AND parent_object_id = OBJECT_ID('export_fields')) ~r~n" + &
"ALTER TABLE export_fields DROP CONSTRAINT [FK_EXPORT_F_REFERENCE_EXPORT_H]"

//Added By Ken.Guo 2010-08-09.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='email_alarm_type' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add email_alarm_type integer null  ~r~n" 


//Added by jervis 08.09.2010
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='newpage_group' and t.name='conv_view'	and t.type = 'U')~r~n" + &
"alter table conv_view add newpage_group char(1) default 0 null " 

//Added By Ken.Guo 2010-08-12.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='group_email_template' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add group_email_template numeric(10,0) null  ~r~n" 

//Added By Ken.Guo 2010-08-16.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ctx_id_list' and t.name='em_mail_items'	and t.type = 'U')~r~n" + &
"ALTER table em_mail_items add ctx_id_list varchar(1000) null  "

//Added By Ken.Guo 2010-08-23.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ctx_id_list' and t.name='em_sent_items'	and t.type = 'U')~r~n" + &
"ALTER table em_sent_items add ctx_id_list varchar(1000) null  "

//Added By Ken.Guo 2010-08-31.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='gadget_title_font_color' and t.name='dashboard_tabs'	and t.type = 'U')~r~n" + &
"ALTER table dashboard_tabs add gadget_title_font_color numeric(10,0) null  ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='tab_text_color' and t.name='dashboard_tabs'	and t.type = 'U')~r~n" + &
"ALTER table dashboard_tabs add tab_text_color numeric(10,0) null  "

////Add by jervis 08.31.2010
////Add Trigge type fields on data value compraision
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
//"where c.id=t.id  and c.name='wf_trigger_type' and t.name='wf_workflow'	and t.type = 'U')~r~n" + &
//"alter table wf_workflow add wf_trigger_type varchar(1) default 'S' null "
//

//Add by jervis 09.14.2010
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='left_bracket' and t.name='wf_trigger_param_data_comparison'	and t.type = 'U')~r~n" + &
"alter table wf_trigger_param_data_comparison add left_bracket varchar(5)  NULL"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='right_bracket' and t.name='wf_trigger_param_data_comparison'	and t.type = 'U')~r~n" + &
"alter table wf_trigger_param_data_comparison add right_bracket varchar(5)  NULL"

//Added By Ken.Guo 2010-09-17.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t     ~r~n" + & 
"where c.id=t.id  and c.name='tv_icon' and t.name='tdl_detail'	and t.type = 'U')   ~r~n" + &
"ALTER table tdl_detail add tv_icon varchar(30) null   " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t     ~r~n" + & 
"where c.id=t.id  and c.name='tab_icon' and t.name='ctx_tabpage_properties'	and t.type = 'U')  ~r~n" + & 
"ALTER table ctx_tabpage_properties add tab_icon varchar(50) null  "


//Add by jervis 09.19.2010
//Add Trigge type fields on data value compraision
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='wf_trigger_onlogin' and t.name='wf_workflow'	and t.type = 'U')~r~n" + &
"alter table wf_workflow add wf_trigger_onlogin varchar(1) default 'N' null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='wf_trigger_onsave' and t.name='wf_workflow'	and t.type = 'U')~r~n" + &
"alter table wf_workflow add wf_trigger_onsave varchar(1) default 'Y' null "

//Add by jervis 10.13.2010
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'wf_advanced_update_criteria' )~r~n" + &
"CREATE TABLE wf_advanced_update_criteria(~r~n" + &
"	wf_id int NOT NULL,~r~n" + &
"	wf_step_id int NOT NULL,~r~n" + &
"	wf_status_id int NOT NULL,~r~n" + &
"	key_id int NOT NULL,~r~n" + &
"	seq_no	int IDENTITY(1,1) not null,~r~n" + &
"	view_id int NOT NULL,~r~n" + &
"	screen_id int NOT NULL,~r~n" + &
"	field_name varchar(50) NULL,~r~n" + &
"	field_label varchar(255) NULL,~r~n" + &
"	operator varchar(20) NULL DEFAULT ('='),~r~n" + &
"	Value varchar(255) NULL,~r~n" + &
"	logical varchar(5) NULL DEFAULT ('and'),~r~n" + &
"	module varchar(2) NULL,~r~n" + &
"	field_type varchar(2) NULL,~r~n" + &
"	table_name varchar(150) NULL,~r~n" + &
"	value_display varchar(75) NULL,~r~n" + &
"	lookup_code varchar(40) NULL,~r~n" + &
"	lookup_flag char(1) NULL DEFAULT ('V'),~r~n" + &
"	left_bracket varchar(5) NULL,~r~n" + &
"	right_bracket varchar(5) NULL~r~n" + &
"	CONSTRAINT pk_wf_advanced_update_criteria PRIMARY KEY(wf_id ,wf_step_id,wf_status_id,key_id,seq_no)~r~n" + &
")"

//Added By Ken.Guo 2010-10-20.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ocr_engine_pdf' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add ocr_engine_pdf integer null  "

//Added By Ken.Guo 2010-10-20.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='append_paragraph' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add append_paragraph integer null  " 


//Added By Jervis 2010-10-25.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='field_parent' and t.name='wf_advanced_update_criteria'	and t.type = 'U')~r~n" + &
"alter table wf_advanced_update_criteria add field_parent varchar(50) null  " 

//Added By Jervis 2010-10-25.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='wf_esign' and t.name='wf_action_status'	and t.type = 'U')~r~n" + &
"alter table wf_action_status add wf_esign char(1) default 'N' null"

//Added By Ken.Guo 2010-10-26.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='doc_id_list' and t.name='em_mail_items'	and t.type = 'U')~r~n" + &
"ALTER table em_mail_items add doc_id_list varchar(1000) null  "

//Added By Ken.Guo 2010-11-03.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_1' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_1 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_2' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_2 numeric(12,4) null  ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_3' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_3 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_4' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_4 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_5' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_5 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_6' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_6 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_7' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_7 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_8' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_8 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_9' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_9 numeric(12,4) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_percent_10' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"ALTER table ctx_basic_info add custom_percent_10 numeric(12,4) null  "


of_execute_sqls("of_ver100_release_table1")

Return 1

end function

public function integer of_ver100_release_view1 ();//BEGIN---Modify by Scofield on 2010-04-13
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if Exists(SELECT 1 FROM sysobjects WHERE name = 'v_ctx_contacts_contacts')~r~n" + &
"   DROP VIEW v_ctx_contacts_contacts"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_contacts_contacts AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       CTX_BASIC_INFO.ctx_id,~r~n" + &
"       app_facility.facility_name,~r~n" + &
"       app_facility.contact AS Company_Custom_ID#,~r~n" + &
"       v_ctx_contract_contacts.contact_id,~r~n" + &
"       v_ctx_contract_contacts.association,~r~n" + &
"       code_lookup.code AS contract_type_code,~r~n" + &
"       code_lookup.description AS contract_type_description,~r~n" + &
"       CTX_CONTACTS.first_name,~r~n" + &
"       CTX_CONTACTS.last_name,~r~n" + &
"       CTX_CONTACTS.middle_name,~r~n" + &
"       code_lookup_4.description AS contact_title,~r~n" + &
"       code_lookup_1.code AS contract_department_code,~r~n" + &
"       code_lookup_1.description AS contract_department_des,~r~n" + &
"       app_facility.street,~r~n" + &
"       app_facility.street_2,~r~n" + &
"       app_facility.street_3,~r~n" + &
"       app_facility.city,~r~n" + &
"       app_facility.zip,~r~n" + &
"       app_facility.state,~r~n" + &
"       CTX_CONTACTS.custom_1,~r~n" + &
"       CTX_CONTACTS.custom_2,~r~n" + &
"       CTX_CONTACTS.custom_3,~r~n" + &
"       CTX_CONTACTS.custom_4,~r~n" + &
"       CTX_CONTACTS.custom_5,~r~n" + &
"       CTX_CONTACTS.custom_6,~r~n" + &
"       CTX_CONTACTS.custom_7,~r~n" + &
"       CTX_CONTACTS.custom_8,~r~n" + &
"       CTX_CONTACTS.custom_9,~r~n" + &
"       CTX_CONTACTS.custom_10,~r~n" + &
"       v_ctx_contract_contacts.owner,~r~n" + &
"       v_ctx_contract_contacts.access,~r~n" + &
"       NULL AS Phone_Type_code,~r~n" + &
"       NULL AS Phone_type_Description,~r~n" + &
"       v_ctx_contract_contacts.contact_phone AS phone,~r~n" + &
"       v_ctx_contract_contacts.ext,~r~n" + &
"       v_ctx_contract_contacts.contact_email,~r~n" + &
"       v_ctx_contract_contacts.contact_Fax,~r~n" + &
"       v_ctx_contract_contacts.notes~r~n" + &
"  FROM CTX_CONTACTS~r~n" + &
"       INNER JOIN v_ctx_contract_contacts ON CTX_CONTACTS.contact_id = v_ctx_contract_contacts.contact_id~r~n" + &
"       INNER JOIN CTX_BASIC_INFO~r~n" + &
"       INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON v_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id~r~n" + &
"       LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = Convert(varchar(50),code_lookup_4.lookup_code)~r~n" + &
" WHERE v_ctx_contract_contacts.ic_area='c'~r~n" + &
"ORDER BY CTX_BASIC_INFO.ctx_id"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if Exists(SELECT 1 FROM sysobjects WHERE name = 'v_ctx_contacts_external')~r~n" + &
"   DROP VIEW v_ctx_contacts_external"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_contacts_external AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       CTX_BASIC_INFO.ctx_id,~r~n" + &
"       app_facility.facility_name,~r~n" + &
"       app_facility.contact as Company_Custom_ID#,~r~n" + &
"       code_lookup.code AS contact_type_code,~r~n" + &
"       code_lookup.description AS contact_type_description,~r~n" + &
"       CTX_CONTACTS.first_name,~r~n" + &
"       CTX_CONTACTS.last_name,~r~n" + &
"       CTX_CONTACTS.middle_name,~r~n" + &
"       code_lookup_4.description AS contact_title,~r~n" + &
"       code_lookup_1.code AS contract_department_code,~r~n" + &
"       code_lookup_1.description AS contract_department_des,~r~n" + &
"       app_facility.street,~r~n" + &
"       app_facility.street_2,~r~n" + &
"       app_facility.street_3,~r~n" + &
"       app_facility.city,~r~n" + &
"       app_facility.zip,~r~n" + &
"       app_facility.state,~r~n" + &
"       CTX_CONTACTS.custom_1,~r~n" + &
"       CTX_CONTACTS.custom_2,~r~n" + &
"       CTX_CONTACTS.custom_3,~r~n" + &
"       CTX_CONTACTS.custom_4,~r~n" + &
"       CTX_CONTACTS.custom_5,~r~n" + &
"       CTX_CONTACTS.custom_6,~r~n" + &
"       CTX_CONTACTS.custom_7,~r~n" + &
"       CTX_CONTACTS.custom_8,~r~n" + &
"       CTX_CONTACTS.custom_9,~r~n" + &
"       CTX_CONTACTS.custom_10,~r~n" + &
"       v_ctx_contract_contacts.access,~r~n" + &
"       v_ctx_contract_contacts.owner,~r~n" + &
"       v_ctx_contract_contacts.notes,~r~n" + &
"       v_ctx_contract_contacts.ext,~r~n" + &
"       v_ctx_contract_contacts.contact_Fax,~r~n" + &
"       v_ctx_contract_contacts.contact_email,~r~n" + &
"       v_ctx_contract_contacts.contact_phone AS phone,~r~n" + &
"       NULL AS Phone_Type_code,~r~n" + &
"       NULL AS Phone_type_Description,~r~n" + &
"       v_ctx_contract_contacts.contact_id,~r~n" + &
"       v_ctx_contract_contacts.default_email as default_to  ~r~n" + &
"  FROM CTX_CONTACTS~r~n" + &
"       INNER JOIN~r~n" + &
"       v_ctx_contract_contacts ON CTX_CONTACTS.contact_id = v_ctx_contract_contacts.contact_id~r~n" + &
"       INNER JOIN CTX_BASIC_INFO~r~n" + &
"       INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON v_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id~r~n" + &
"       LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = Convert(varchar(50),code_lookup_4.lookup_code)~r~n" + &
" WHERE v_ctx_contract_contacts.ic_area='e'~r~n" + &
"ORDER BY CTX_BASIC_INFO.ctx_id"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if Exists(SELECT 1 FROM sysobjects WHERE name = 'v_ctx_contacts_internal')~r~n" + &
"   DROP VIEW v_ctx_contacts_internal"

//Add 'association' -- jervis 05.05.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_contacts_internal AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       CTX_BASIC_INFO.ctx_id,~r~n" + &
"       app_facility.facility_name,~r~n" + &
"       app_facility.contact as Company_Custom_ID#,~r~n" + &
"       code_lookup.code AS contact_type_code,~r~n" + &
"       code_lookup.description AS contact_type_description,~r~n" + &
"       CTX_CONTACTS.first_name,~r~n" + &
"       CTX_CONTACTS.last_name,~r~n" + &
"       CTX_CONTACTS.middle_name,~r~n" + &
"       code_lookup_4.description AS contact_title,~r~n" + &
"       code_lookup_1.code AS contract_department_code,~r~n" + &
"       code_lookup_1.description AS contract_department_des,~r~n" + &
"       app_facility.street,~r~n" + &
"       app_facility.street_2,~r~n" + &
"       app_facility.street_3,~r~n" + &
"       app_facility.city,~r~n" + &
"       app_facility.zip,~r~n" + &
"       app_facility.state,~r~n" + &
"       CTX_CONTACTS.custom_1,~r~n" + &
"       CTX_CONTACTS.custom_2,~r~n" + &
"       CTX_CONTACTS.custom_3,~r~n" + &
"       CTX_CONTACTS.custom_4,~r~n" + &
"       CTX_CONTACTS.custom_5,~r~n" + &
"       CTX_CONTACTS.custom_6,~r~n" + &
"       CTX_CONTACTS.custom_7,~r~n" + &
"       CTX_CONTACTS.custom_8,~r~n" + &
"       CTX_CONTACTS.custom_9,~r~n" + &
"       CTX_CONTACTS.custom_10,~r~n" + &
"       v_ctx_contract_contacts.access,~r~n" + &
"       v_ctx_contract_contacts.owner,~r~n" + &
"       v_ctx_contract_contacts.notes,~r~n" + &
"       v_ctx_contract_contacts.ext,~r~n" + &
"       v_ctx_contract_contacts.contact_Fax,~r~n" + &
"       v_ctx_contract_contacts.contact_email,~r~n" + &
"       v_ctx_contract_contacts.contact_phone AS phone,~r~n" + &
"       NULL AS Phone_Type_code,~r~n" + &
"       NULL AS Phone_type_Description,~r~n" + &
"       v_ctx_contract_contacts.contact_id,~r~n" + &
"       v_ctx_contract_contacts.association,~r~n" + &
"       v_ctx_contract_contacts.default_email as default_to~r~n" + &
"  FROM CTX_CONTACTS~r~n" + &
"       INNER JOIN v_ctx_contract_contacts ON CTX_CONTACTS.contact_id = v_ctx_contract_contacts.contact_id~r~n" + &
"       INNER JOIN CTX_BASIC_INFO~r~n" + &
"       INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON v_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id~r~n" + &
"       LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = Convert(varchar(50),code_lookup_4.lookup_code)~r~n" + &
" WHERE v_ctx_contract_contacts.ic_area='i'~r~n" + &
"ORDER BY CTX_BASIC_INFO.ctx_id"
//END---Modify by Scofield on 2010-04-13

//BEGIN---Modify by Scofield on 2010-05-12
//Left OUTER JOIN ctx_products - jervis 07.14.2010
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_basic_info') ~r~n" + &
" drop view v_ctx_basic_info"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_basic_info AS~r~n" + &
"SELECT TOP 100 percent~r~n" + &
"       app_facility.facility_name AS Company_Name,~r~n" + &
"       app_facility.street AS Company_street_1,~r~n" + &
"       app_facility.street_2 AS Company_street_2,~r~n" + &
"       app_facility.city AS Company_city,~r~n" + &
"       app_facility.state AS Company_state,~r~n" + &
"       app_facility.zip AS Company_zip,~r~n" + &
"       app_facility.country AS Company_country,~r~n" + &
"       app_facility.phone AS Company_phone,~r~n" + &
"       app_facility.fax AS Company_fax,~r~n" + &
"       app_facility.web_address AS Company_web_address,~r~n" + &
"       app_facility.contact_type2 AS Company_contact_type2,~r~n" + &
"       app_facility.corp_office_flag AS Company_corp_office_flag,~r~n" + &
"       app_facility.corp_office_link AS Company_corp_office_link,~r~n" + &
"       code_lookup.code AS Contract_Category_code,~r~n" + &
"       code_lookup.description AS Contract_Category_description,~r~n" + &
"       code_lookup_1.code AS Contract_Status_code,~r~n" + &
"       code_lookup_2.code AS contract_type_code,~r~n" + &
"       code_lookup_2.description AS contract_type_Description,~r~n" + &
"       code_lookup_3.code AS term_reason_code,~r~n" + &
"       code_lookup_3.description AS term_Reason_Desciption,~r~n" + &
"       code_lookup_4.description AS product_type_desc,~r~n" + &
"       code_lookup_4.code AS product_type_code,~r~n" + &
"       code_lookup_5.code AS product_code,~r~n" + &
"       code_lookup_5.description AS product_description,~r~n" + &
"       ctx_basic_info.ctx_id,~r~n" + &
"       ctx_basic_info.category,~r~n" + &
"       ctx_basic_info.status,~r~n" + &
"       ctx_basic_info.facility_id,~r~n" + &
"       ctx_basic_info.contract_type,~r~n" + &
"       ctx_basic_info.product_type,~r~n" + &
"       ctx_basic_info.product_name,~r~n" + &
"       ctx_basic_info.reimbursment_menth,~r~n" + &
"       ctx_basic_info.file_location,~r~n" + &
"       ctx_basic_info.effective_date,~r~n" + &
"       ctx_basic_info.expriation_date,~r~n" + &
"       ctx_basic_info.review_date,~r~n" + &
"       ctx_basic_info.review_by,~r~n" + &
"       ctx_basic_info.term_date,~r~n" + &
"       ctx_basic_info.term_reason,~r~n" + &
"       ctx_basic_info.last_revis_date,~r~n" + &
"       ctx_basic_info.other_date_1,~r~n" + &
"       ctx_basic_info.other_date_2,~r~n" + &
"       ctx_basic_info.oc_signed_by,~r~n" + &
"       ctx_basic_info.oc_title,~r~n" + &
"       ctx_basic_info.oc_department,~r~n" + &
"       ctx_basic_info.oc_legal_rep,~r~n" + &
"       ctx_basic_info.cc_signed_by,~r~n" + &
"       ctx_basic_info.cc_title,~r~n" + &
"       ctx_basic_info.cc_department,~r~n" + &
"       ctx_basic_info.cc_legal_rep,~r~n" + &
"       ctx_basic_info.keyword,~r~n" + &
"       ctx_basic_info.dvision,~r~n" + &
"       ctx_basic_info.custom_1,~r~n" + &
"       ctx_basic_info.custom_2,~r~n" + &
"       ctx_basic_info.custom_3,~r~n" + &
"       ctx_basic_info.custom_4,~r~n" + &
"       ctx_basic_info.custom_5,~r~n" + &
"       ctx_basic_info.custom_6,~r~n" + &
"       ctx_basic_info.custom_7,~r~n" + &
"       ctx_basic_info.custom_8,~r~n" + &
"       ctx_basic_info.custom_9,~r~n" + &
"       ctx_basic_info.custom_10,~r~n" + &
"       ctx_basic_info.group_multi_loc_id,~r~n" + &
"       ctx_basic_info.revision_reason,~r~n" + &
"       ctx_basic_info.group_id,~r~n" + &
"       ctx_basic_info.record_id,~r~n" + &
"       ctx_basic_info.custom_11,~r~n" + &
"       ctx_basic_info.custom_12,~r~n" + &
"       ctx_basic_info.custom_13,~r~n" + &
"       ctx_basic_info.custom_14,~r~n" + &
"       ctx_basic_info.custom_15,~r~n" + &
"       ctx_basic_info.custom_16,~r~n" + &
"       ctx_basic_info.custom_17,~r~n" + &
"       ctx_basic_info.custom_18,~r~n" + &
"       ctx_basic_info.custom_19,~r~n" + &
"       ctx_basic_info.custom_20,~r~n" + &
"       ctx_basic_info.custom_21,~r~n" + &
"       ctx_basic_info.custom_22,~r~n" + &
"       ctx_basic_info.custom_date1,~r~n" + &
"       ctx_basic_info.custom_date2,~r~n" + &
"       ctx_basic_info.custom_date3,~r~n" + &
"       ctx_basic_info.custom_date4,~r~n" + &
"       ctx_basic_info.custom_date5,~r~n" + &
"       ctx_basic_info.custom_date6,~r~n" + &
"       ctx_basic_info.custom_date7,~r~n" + &
"       ctx_basic_info.custom_date8,~r~n" + &
"       ctx_basic_info.custom_date9,~r~n" + &
"       ctx_basic_info.custom_date10,~r~n" + &
"       ctx_basic_info.custom_date16,~r~n" + &
"       ctx_basic_info.custom_date17,~r~n" + &
"       ctx_basic_info.custom_n1,~r~n" + &
"       ctx_basic_info.custom_n2,~r~n" + &
"       ctx_basic_info.custom_n3,~r~n" + &
"       ctx_basic_info.custom_n4,~r~n" + &
"       ctx_basic_info.custom_n5,~r~n" + &
"       ctx_basic_info.custom_n6,~r~n" + &
"       ctx_basic_info.custom_n7,~r~n" + &
"       ctx_basic_info.custom_n8,~r~n" + &
"       ctx_basic_info.custom_n9,~r~n" + &
"       ctx_basic_info.custom_n10,~r~n" + &
"       ctx_basic_info.custom_n11,~r~n" + &
"       ctx_basic_info.custom_n12,~r~n" + &
"       ctx_basic_info.custom_n13,~r~n" + &
"       ctx_basic_info.custom_n14,~r~n" + &
"       ctx_basic_info.custom_n15,~r~n" + &
"       ctx_basic_info.custom_n16,~r~n" + &
"       ctx_basic_info.custom_n17,~r~n" + &
"       ctx_basic_info.custom_n18,~r~n" + &
"       ctx_basic_info.custom_n19,~r~n" + &
"       ctx_basic_info.custom_n20,~r~n" + &
"       ctx_basic_info.custom_n21,~r~n" + &
"       ctx_basic_info.custom_n22,~r~n" + &
"       ctx_basic_info.custom_n23,~r~n" + &
"       ctx_basic_info.custom_n24,~r~n" + &
"       ctx_basic_info.custom_n25,~r~n" + &
"       ctx_basic_info.custom_n26,~r~n" + &
"       ctx_basic_info.custom_n27,~r~n" + &
"       ctx_basic_info.custom_notes_1,~r~n" + &
"       ctx_basic_info.custom_notes_2,~r~n" + &
"       ctx_basic_info.custom_notes_3,~r~n" + &
"       ctx_basic_info.custom_notes_4,~r~n" + &
"       ctx_basic_info.custom_notes_5,~r~n" + &
"       ctx_basic_info.version_number,~r~n" + &
"       ctx_basic_info.version_date,~r~n" + &
"       ctx_basic_info.notes,~r~n" + &
"       ctx_basic_info.app_facility,~r~n" + &
"       ctx_basic_info.master_contract_id AS master_ctx_id,~r~n" + &
"       ctx_basic_info.master_contract_name,~r~n" + &
"       code_lookup_6.code AS dvision_code,~r~n" + &
"       code_lookup_6.description AS dvision_description~r~n" + &
"  FROM (((((((ctx_basic_info LEFT OUTER JOIN code_lookup ON ctx_basic_info.category = code_lookup.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_basic_info.status = code_lookup_1.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_basic_info.contract_type = code_lookup_2.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_basic_info.term_reason = code_lookup_3.lookup_code)~r~n" + &
"       INNER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id)~r~n" + &
"       Left OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_6 ON ctx_basic_info.dvision = code_lookup_6.lookup_code~r~n" + &
"	WHERE ctx_basic_info.is_template = 0 ~r~n" + &
"ORDER BY ctx_basic_info.ctx_id"
//END---Modify by Scofield on 2010-05-12


//Modify v_ctx_action_items,add subject... fields - jervis 07.29.2010
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_action_items' and type = 'V')  " + &
"  drop view v_ctx_action_items "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  v_ctx_action_items " + &
"as SELECT  top 100 percent  " + &
"	ctx_action_items.ctx_action_item_id, " + &
"	ctx_action_items.ctx_id, " + &
"	ctx_action_items.action_type, " + &
"	ctx_action_items.action_date, " + &
"	ctx_action_items.due_date, " + &
"	ctx_action_items.action_user, " + &
"	ctx_action_items.action_status, " + &
"	ctx_action_items.notes, " + &
"	ctx_action_items.ALARMED, " + &
"	ctx_action_items.first_attempt, " + &
"	ctx_action_items.last_attempt, " + &
"	ctx_action_items.no_attempts, " + &
"	ctx_action_items.assigned_to, " + &
"	ctx_action_items.print_flag, " + &
"	ctx_action_items.inserted_by_user, " + &
"	ctx_action_items.inserted_at_date_time, " + &
"	ctx_action_items.updated_by_user, " + &
"	ctx_action_items.updated_at_date_time, " + &
"	ctx_action_items.record_id, " + &
"	ctx_action_items.Letter_flag, " + &
"	ctx_action_items.letter_to, " + &
"	ctx_action_items.letter_from, " + &
"	ctx_action_items.wf_step, " + &
"	ctx_action_items.letter_id, " + &
"	ctx_action_items.wf_id, " + &
"	ctx_action_items.Wf_action_type_id, " + &
"	ctx_action_items.wf_assigned_by, " + &
"	ctx_action_items.active_status, " + &
"	ctx_action_items.wf_complete_flag, " + &
"	ctx_action_items.alm_table, " + &
"	ctx_action_items.alm_column, " + &
"  custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_1, custom_2, custom_3, custom_4, Subject, Start_Date, Start_Time, " + &
"  Duration, Duration_Type, End_Date, End_Time, Priority  " + &
"FROM 	ctx_action_items " + &
"ORDER BY ctx_action_items.ctx_action_item_id, " + &
"	 ctx_action_items.ctx_id "


//Modify by jervis -- 12.21.2010
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_custom') ~r~n" + &
" drop view v_ctx_custom"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_custom AS ~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       ctx_id,~r~n" + &
"       custom_1,~r~n" + &
"       custom_2,~r~n" + &
"       custom_3,~r~n" + &
"       custom_4,~r~n" + &
"       custom_5,~r~n" + &
"       custom_6,~r~n" + &
"       custom_7,~r~n" + &
"       custom_8,~r~n" + &
"       custom_9,~r~n" + &
"       custom_10,~r~n" + &
"       custom_11,~r~n" + &
"       custom_12,~r~n" + &
"       custom_13,~r~n" + &
"       custom_14,~r~n" + &
"       custom_15,~r~n" + &
"       custom_16,~r~n" + &
"       custom_17,~r~n" + &
"       custom_18,~r~n" + &
"       custom_19,~r~n" + &
"       custom_20,~r~n" + &
"       custom_date1,~r~n" + &
"       custom_date2,~r~n" + &
"       custom_date3,~r~n" + &
"       custom_date4,~r~n" + &
"       custom_date5,~r~n" + &
"       custom_date6,~r~n" + &
"       custom_date7,~r~n" + &
"       custom_date8,~r~n" + &
"       custom_date9,~r~n" + &
"       custom_date10,~r~n" + &
"       custom_date11,~r~n" + &
"       custom_date12,~r~n" + &
"       custom_date13,~r~n" + &
"       custom_date14,~r~n" + &
"       custom_date15,~r~n" + &
"       custom_n1,~r~n" + &
"       custom_n2,~r~n" + &
"       custom_n3,~r~n" + &
"       custom_n4,~r~n" + &
"       custom_n5,~r~n" + &
"       custom_n6,~r~n" + &
"       custom_n7,~r~n" + &
"       custom_n8,~r~n" + &
"       custom_n9,~r~n" + &
"       custom_n10,~r~n" + &
"       custom_n11,~r~n" + &
"       custom_n12,~r~n" + &
"       custom_n13,~r~n" + &
"       custom_n14,~r~n" + &
"       custom_n15,~r~n" + &
"       custom_n16,~r~n" + &
"       custom_n17,~r~n" + &
"       custom_n18,~r~n" + &
"       custom_n19,~r~n" + &
"       custom_n20,~r~n" + &
"       custom_n21,~r~n" + &
"       custom_n22,~r~n" + &
"       custom_n23,~r~n" + &
"       custom_n24,~r~n" + &
"       custom_n25,~r~n" + &
"       custom_percent_1, custom_percent_2, " + &
"       custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_9, custom_percent_10, " + &
"		  custom_percent_8, custom_21, custom_22, custom_n26, custom_n27, custom_date16, custom_date17" + &
"  FROM ctx_basic_info~r~n" + &
"ORDER BY ctx_id"

//Alte view v_ctx_statusaudit add field name - jervis 04.20.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Alter VIEW v_ctx_stausaudit  " + &
"AS  " + &
"SELECT     a.ctx_id, a.seq_no, a.status, c.code AS status_code, c.description AS status_description, a.start_time, a.delay_days, a.user_id,a.field_name " + &
"FROM         sys_StatusAudit AS a LEFT OUTER JOIN  " + &
"             code_lookup AS c ON a.status = c.lookup_code " 





of_execute_sqls("of_ver100_release_view1")

Return 1

end function

public function integer of_ver100_release_storeprocedure1 ();//Added By Ken.Guo 2010-07-16.
//Modify By Jervis 08.26.2010 -- Add fee_sched_calc_field_1, fee_sched_calc_field_2 and fee_sched_calc_field_3 fileds
//Modified By Ken.Guo 2010-11-03 -- Add email_cnt, custom_percent_1 ~ custom_percent_10
//Modified By Ken.Guo 2010-11-05
//for performance reason, comment below script 
/*
"	unread_email_cnt =  ~r~n" + &
"		( ~r~n" + &
"		Select count(1)  ~r~n" + &
"		From em_mail_items  ~r~n" + &
"		Where em_mail_items.user_id = @user_d  ~r~n" + &
"		And (em_mail_items.read_status = 0 or em_mail_items.read_status is null) ~r~n" + &
"		And (em_mail_items.folder_id = 2 and em_mail_items.deleted = 0 ) ~r~n" + &
"		And charindex(',' + Convert(varchar(10),ctx_basic_info.ctx_id)+',', ',' + em_mail_items.ctx_id_list + ',',0) > 0 ~r~n" + &
"		), ~r~n" 
*/
//Modified by Jervis 12.28.2010 -- Add work_flow_n1 - work_flow_n5 fields
//Modified by jervis 02.10.2011 -- Add App_facility.city,state,zip...etc.
//Modified by jervis 04.19.2011  -- add custom_status...
//Modified By Ken.Guo 2011-06-30 --Add custom_21 ~ custom_date17
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_contract_search' AND type = 'P') " + &
"    DROP PROCEDURE sp_contract_search"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE  PROCEDURE sp_contract_search(  @user_d VARCHAR(10)   )~r~n" + &
" AS    ~r~n" + &
"BEGIN      ~r~n" + &
"SELECT DISTINCT ~r~n" + &
"	ctx_basic_info.app_facility,    ~r~n" + &
"	ctx_products.product_id product_code,     ~r~n" + &
"	code_lookup.code product_name,       ~r~n" + &
"	ctx_basic_info.effective_date,      ~r~n" + &
"	ctx_basic_info.expriation_date,       ~r~n" + &
"	ctx_basic_info.status,     ~r~n" + &
"	ctx_basic_info.group_multi_loc_id,       ~r~n" + &
"	ctx_basic_info.ctx_id,~r~n" + &
" 	ctx_basic_info.master_contract_id,                             ~r~n" + &
"	master_cnt = (SELECT Count(ctx_basic_info1.ctx_id) ~r~n" + &
"			FROM ctx_basic_info ctx_basic_info1 ~r~n" + &
"			WHERE ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id and ctx_basic_info.is_template = 0 ),  ~r~n" + &
"	ctx_basic_info.category,        ~r~n" + &
"	ctx_basic_info.facility_id,     ~r~n" + &
"	ctx_basic_info.contract_type,       ~r~n" + &
"	code_lookup1.code product_type, ~r~n" + &
"	ctx_basic_info.reimbursment_menth,       ~r~n" + &
"	ctx_basic_info.file_location,    ~r~n" + &
"	ctx_basic_info.review_date,       ~r~n" + &
"	ctx_basic_info.review_by,     ~r~n" + &
"	ctx_basic_info.term_date,       ~r~n" + &
"	ctx_basic_info.term_reason,     ~r~n" + &
"	ctx_basic_info.last_revis_date,       ~r~n" + &
"	ctx_basic_info.other_date_1,       ~r~n" + &
"	ctx_basic_info.other_date_2,     ~r~n" + &
"	ctx_basic_info.oc_signed_by,       ~r~n" + &
"	ctx_basic_info.oc_title,      ~r~n" + &
"	ctx_basic_info.oc_department,       ~r~n" + &
"	ctx_basic_info.oc_legal_rep,       ~r~n" + &
"	ctx_basic_info.cc_signed_by,     ~r~n" + &
"	ctx_basic_info.cc_title,       ~r~n" + &
"	ctx_basic_info.cc_department,       ~r~n" + &
"	ctx_basic_info.cc_legal_rep,     ~r~n" + &
"	ctx_basic_info.notes,       ~r~n" + &
"	ctx_basic_info.keyword,       ~r~n" + &
"	ctx_basic_info.dvision,   ~r~n" + &
"	ctx_basic_info.custom_1,       ~r~n" + &
"	ctx_basic_info.custom_2,       ~r~n" + &
"	ctx_basic_info.custom_3,       ~r~n" + &
"	ctx_basic_info.custom_4,       ~r~n" + &
"	ctx_basic_info.custom_5,     ~r~n" + &
"	ctx_basic_info.custom_6,       ~r~n" + &
"	ctx_basic_info.custom_7,       ~r~n" + &
"	ctx_basic_info.custom_8, ~r~n" + &
"	ctx_basic_info.custom_9,       ~r~n" + &
"	ctx_basic_info.custom_10,    ~r~n" + &
"	ctx_basic_info.group_id,~r~n" + &
"	ctx_basic_info.revision_reason,       ~r~n" + &
"	ctx_basic_info.record_id ,   ~r~n" + &
"	owner = upper((SELECT top 1 ctx_contacts.user_d       ~r~n" + &
"			FROM ctx_contacts,ctx_contract_contacts       ~r~n" + &
"			WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) ~r~n" + &
"			AND (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			  AND ( ctx_contract_contacts.owner = 'Y' ) ~r~n" + &
"			  AND ( ctx_contract_contacts.ic_area = 'I' ) )),   ~r~n" + &
"	contracted_entity = (SELECT top 1 group_multi_loc.rec_id              ~r~n" + &
"	  			FROM ctx_loc,                  group_multi_loc              ~r~n" + &
"				WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) ~r~n" + &
"				AND ( ctx_loc.ctx_id = ctx_basic_info.ctx_id) ~r~n" + &
"				AND ctx_loc.loc_id = 0),    ~r~n" + &
"	app_facility.facility_name facility_name,   ~r~n" + &
"	ctx_basic_info.custom_date1,      ~r~n" + &
"	ctx_basic_info.custom_date2,      ~r~n" + &
"	ctx_basic_info.custom_date3,      ~r~n" + &
"	ctx_basic_info.custom_date4,  ~r~n" + &
"	ctx_basic_info.custom_date5,      ~r~n" + &
"	ctx_basic_info.inserted_by_user,    ~r~n" + &
"	ctx_basic_info.inserted_at_date_time,      ~r~n" + &
"	ctx_basic_info.updated_by_user,   ~r~n" + &
"	ctx_basic_info.~r~n" + &
"	updated_at_date_time,      ~r~n" + &
"	ctx_basic_info.custom_11,      ~r~n" + &
"	ctx_basic_info.custom_12,   ~r~n" + &
"	ctx_basic_info.custom_13,      ~r~n" + &
"	ctx_basic_info.custom_14,      ~r~n" + &
"	ctx_basic_info.custom_15,  ~r~n" + &
"	ctx_basic_info.custom_16,      ~r~n" + &
"	ctx_basic_info.custom_17,      ~r~n" + &
"	ctx_basic_info.custom_18,      ~r~n" + &
"	ctx_basic_info.custom_19,      ~r~n" + &
"	ctx_basic_info.custom_20,     ~r~n" + &
"	ctx_basic_info.custom_date6,      ~r~n" + &
"	ctx_basic_info.custom_date7,      ~r~n" + &
"	ctx_basic_info.custom_date8,  ~r~n" + &
"	ctx_basic_info.custom_date9,      ~r~n" + &
"	ctx_basic_info.custom_date10,      ~r~n" + &
"	ctx_basic_info.custom_date11,      ~r~n" + &
"	ctx_basic_info.custom_date12,      ~r~n" + &
"	ctx_basic_info.custom_date13,  ~r~n" + &
"	ctx_basic_info.custom_date14,      ~r~n" + &
"	ctx_basic_info.custom_date15,      ~r~n" + &
"	ctx_basic_info.custom_n1, ~r~n" + &
"	ctx_basic_info.custom_n2,      ~r~n" + &
"	ctx_basic_info.custom_n3,      ~r~n" + &
"	ctx_basic_info.custom_n4,      ~r~n" + &
"	ctx_basic_info.custom_n5,      ~r~n" + &
"	ctx_basic_info.custom_n6,  ~r~n" + &
"	ctx_basic_info.custom_n7,      ~r~n" + &
"	ctx_basic_info.custom_n8,      ~r~n" + &
"	ctx_basic_info.custom_n9,   ~r~n" + &
"	ctx_basic_info.custom_n10,      ~r~n" + &
"	ctx_basic_info.custom_n11,      ~r~n" + &
"	ctx_basic_info.custom_n12,      ~r~n" + &
"	ctx_basic_info.custom_n13,      ~r~n" + &
"	ctx_basic_info.custom_n14,      ~r~n" + &
"	ctx_basic_info.custom_n15,      ~r~n" + &
"	ctx_basic_info.custom_n16,      ~r~n" + &
"	ctx_basic_info.custom_n17,      ~r~n" + &
"	ctx_basic_info.custom_n18,      ~r~n" + &
"	ctx_basic_info.custom_n19,      ~r~n" + &
"	ctx_basic_info.custom_n20,      ~r~n" + &
"	ctx_basic_info.custom_n21,      ~r~n" + &
"	ctx_basic_info.custom_n22,      ~r~n" + &
"	ctx_basic_info.custom_n23,      ~r~n" + &
"	ctx_basic_info.custom_n24,      ~r~n" + &
"	ctx_basic_info.custom_n25,      ~r~n" + &
"	ctx_basic_info.version_number,      ~r~n" + &
"	ctx_basic_info.version_date,      ~r~n" + &
"	ctx_basic_info.master_contract_name ,~r~n" + &
"	ctx_basic_info.fee_sched_calc_field_1 ,~r~n" + &
"	ctx_basic_info.fee_sched_calc_field_2 ,~r~n" + &
"	ctx_basic_info.fee_sched_calc_field_3 ,~r~n" + &
"	access = AA.access   ,~r~n" + &
"	code_lookup2.code status_name,~r~n" + &
"	code_lookup3.code category_name,~r~n" + &
"	code_lookup4.code contract_type_name,~r~n" + &
"	code_lookup5.code dvision_name ,~r~n" + &
"	unread_email_cnt = 0, ~r~n" + &
"	ctx_basic_info.custom_percent_1,~r~n" + &
"	ctx_basic_info.custom_percent_2,~r~n" + &
"	ctx_basic_info.custom_percent_3,~r~n" + &
"	ctx_basic_info.custom_percent_4,~r~n" + &
"	ctx_basic_info.custom_percent_5,~r~n" + &
"	ctx_basic_info.custom_percent_6,~r~n" + &
"	ctx_basic_info.custom_percent_7,~r~n" + &
"	ctx_basic_info.custom_percent_8,~r~n" + &
"	ctx_basic_info.custom_percent_9,~r~n" + &
"	ctx_basic_info.custom_percent_10,~r~n" + &
"	ctx_basic_info.work_flow_n1,~r~n" + &
"	ctx_basic_info.work_flow_n2,~r~n" + &
"	ctx_basic_info.work_flow_n3,~r~n" + &
"	ctx_basic_info.work_flow_n4,~r~n" + &
"	ctx_basic_info.work_flow_n5,~r~n" + &
"	ctx_basic_info.custom_status1,~r~n" + &
"	ctx_basic_info.custom_status2,~r~n" + &
"	ctx_basic_info.custom_21,~r~n" + &
"	ctx_basic_info.custom_22,~r~n" + &
"	ctx_basic_info.custom_n26,~r~n" + &
"	ctx_basic_info.custom_n27,~r~n" + &
"	ctx_basic_info.custom_date16,~r~n" + &
"	ctx_basic_info.custom_date17,~r~n" + &
"	app_facility.city,~r~n" + &
"	app_facility.state,~r~n" + &
"	app_facility.country,~r~n" + &
"	app_facility.zip,~r~n" + &
"	app_facility.street~r~n" + &
"FROM  ctx_basic_info  ~r~n" + &
"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id  ~r~n" + &
"LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code  ~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code~r~n" + &
"~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup2 ON ctx_basic_info.status = code_lookup2.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup3 ON ctx_basic_info.category = code_lookup3.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup4 ON ctx_basic_info.contract_type = code_lookup4.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup5 ON ctx_basic_info.dvision = code_lookup5.lookup_code~r~n" + &
"~r~n" + &
"LEFT OUTER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id, ~r~n" + &
"(~r~n" + &
"SELECT DISTINCT TOP 100 Percent  ctx_id = ctx_contract_contacts.ctx_id, user_id = ctx_contacts.user_d, access = (CASE ctx_contract_contacts.owner WHEN 'Y' THEN 'F' ELSE ctx_contract_contacts.access END)~r~n" + &
"FROM ctx_contract_contacts Left Outer Join~r~n" + &
"(~r~n" + &
"Select ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d ~r~n" + &
"From ctx_contract_contacts ctx_contract_contacts1 ,ctx_contacts ctx_contacts1~r~n" + &
"Where ctx_contract_contacts1.contact_id = ctx_contacts1.contact_id And ctx_contacts1.user_d = @user_d~r~n" + &
"Group By ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d~r~n" + &
"Having Count(ctx_contract_contacts1.ctx_id) > 1~r~n" + &
") ccc~r~n" + &
"On ctx_contract_contacts.ctx_id = ccc.ctx_id~r~n" + &
",ctx_contacts~r~n" + &
"WHERE ctx_contacts.user_d = @user_d~r~n" + &
"	AND (ccc.ctx_id is null or ctx_contract_contacts.access = 'F' )~r~n" + &
"	AND ctx_contract_contacts.contact_id = ctx_contacts.contact_id ~r~n" + &
"	AND ( ctx_contract_contacts.access IN ('F','R') ~r~n" + &
"	OR ctx_contract_contacts.owner = 'Y' )~r~n" + &
"	AND ctx_contract_contacts.ic_area = 'I'~r~n" + &
"~r~n" + &
"UNION ~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_group_access.ctx_id,user_id = security_group_users.user_id, access =  ctx_group_access.access~r~n" + &
"FROM ~r~n" + &
"ctx_group_access ,~r~n" + &
"security_group_users,~r~n" + &
"icred_settings~r~n" + &
"WHERE	security_group_users.user_id = @user_d~r~n" + &
"	AND ctx_group_access.group_id = security_group_users.group_id~r~n" + &
"	AND ctx_group_access.access = ~r~n" + &
"		(Case When Exists (Select u1.user_id,a1.ctx_id,a1.access ~r~n" + &
"		From ctx_group_access a1,security_group_users u1~r~n" + &
"		Where a1.group_id = u1.group_id ~r~n" + &
"		And a1.ctx_id = ctx_group_access.ctx_id~r~n" + &
"		And u1.user_id = security_group_users.user_id	~r~n" + &
"		And a1.access = 'F') Then 'F' Else 'R' End) ~r~n" + &
"	AND icred_settings.group_access = 1~r~n" + &
"	AND ctx_group_access.access in ('F','R')~r~n" + &
"	AND NOT EXISTS	(SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_group_users.user_id )~r~n" + &
"			AND ( ctx_contract_contacts.ic_area = 'I' )~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_group_access.ctx_id )~r~n" + &
"			)~r~n" + &
"~r~n" + &
"UNION~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_basic_info.ctx_id, user_id = security_users.user_id, access = (CASE ctx_acp_contract_management_right.rights WHEN '11' THEN 'F' WHEN '12' THEN 'R' ELSE 'N' END)~r~n" + &
"FROM ctx_acp_contract_management_right, security_users, ctx_basic_info~r~n" + &
"WHERE security_users.user_id = @user_d~r~n" + &
"	AND ctx_acp_contract_management_right.types = 1~r~n" + &
"	AND ctx_acp_contract_management_right.role_id = security_users.role_id~r~n" + &
"	AND ctx_acp_contract_management_right.category = ctx_basic_info.category~r~n" + &
"  And ctx_basic_info.is_template = 0 ~r~n" + &
"	AND ctx_acp_contract_management_right.rights In ('11','12')~r~n" + &
"	AND NOT EXISTS (SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_users.user_id AND ctx_contract_contacts.ic_area = 'I') ~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			UNION~r~n" + &
"			SELECT 1 FROM ctx_group_access,security_group_users,icred_settings~r~n" + &
"			WHERE icred_settings.group_access = 1~r~n" + &
"			AND (ctx_group_access.group_id = security_group_users.group_id )~r~n" + &
"			AND ( security_group_users.user_id = security_users.user_id )	~r~n" + &
"			AND ( ctx_group_access.ctx_id = ctx_basic_info.ctx_id )~r~n" + &
"			)~r~n" + &
") AA ~r~n" + &
"WHERE ctx_basic_info.ctx_id = AA.ctx_id and ctx_basic_info.is_template = 0 ~r~n" + &
"ORDER BY ctx_basic_info.master_contract_id Asc, ctx_basic_info.ctx_id  Asc    ~r~n" + &
"END"


//Added by Jervis on 03.07.2011 -- Add Data fill and field depent ...
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_ImportView' AND type = 'P') " + &
"    DROP PROCEDURE up_ImportView"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_ImportView~r~n" +  &
"	@SourceDBName nvarchar(100),~r~n" +  &
"	@TargetDBName nvarchar(100),~r~n" +  &
"	@ViewID nvarchar(100),~r~n" +  &
"	@NewViewName nvarchar(50)~r~n" +  &
"As~r~n" +  &
"Begin~r~n" +  &
"	declare @MaxViewID	nvarchar(100)~r~n" +  &
"	declare @SqlString nvarchar(4000)~r~n" +  &
"	declare @ParmDefinition nvarchar(100)~r~n" +  &
"		~r~n" +  &
"	/*Get Seq No*/~r~n" +  &
"	select @SqlString = 'select @MaxViewIDOUT = isnull(max(data_view_id),0) + 1  from ' + ~r~n" +  &
"						@TargetDBName + '.dbo.data_view'~r~n" +  &
"	select @ParmDefinition = '@MaxViewIDOUT int Output'~r~n" +  &
"	exec sp_executesql @SqlString,@ParmDefinition,@MaxViewIDOUT=@MaxViewID output~r~n" +  &
"	/*Insert Data_View Table*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.data_view (data_view_id,data_view_name,type,type_c)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',~'~'' + @NewViewName + '~'~' ,type,type_c from '  ~r~n" +  &
"			+ @SourceDBName + '.dbo.data_view where data_view_id = ' + @ViewID~r~n" +  &
"	~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*Insert Tab Properties Table*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_tabpage_properties (data_view_id~r~n" +  &
"						,tabpage_name ,text,text_color ,icon_visible,icon_update_date,icon,backcolor,~r~n" +  &
"						tab_backcolor,tab_icon)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',tabpage_name ,text,text_color ,icon_visible,~r~n" +  &
"						icon_update_date,icon,backcolor,tab_backcolor,tab_icon from ' + @SourceDBName + ~r~n" +  &
"						'.dbo.ctx_tabpage_properties where data_view_id = ' + @ViewID~r~n" +  &
"	~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*Insert Ctx_Screen Table*/~r~n" +  &
"	select  @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen (data_view_id,screen_id,tab_name,screen_name,~r~n" +  &
"						dw_name,dataobject,description,dw_sql,create_date,modify_date,force_update,titlebar_visible,~r~n" +  &
"						titlebar_text,boarder_style,screen_visible)'~r~n" +  &
"	select 	@SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id,'   ~r~n" +  &
"	select  @SqlString = @SqlString + '  tab_name,   '~r~n" +  &
"	select  @SqlString = @SqlString + 'screen_name,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         dw_name,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         dataobject, '  ~r~n" +  &
"	select  @SqlString = @SqlString + '         description, '  ~r~n" +  &
"	select  @SqlString = @SqlString + '         dw_sql,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         create_date,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         modify_date,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         force_update,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         titlebar_visible,'   ~r~n" +  &
"	select  @SqlString = @SqlString + '         titlebar_text,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         boarder_style,  '~r~n" +  &
"	select  @SqlString = @SqlString + '         screen_visible  '~r~n" +  &
"	select  @SqlString = @SqlString + '	from ' + @SourceDBName + '.dbo.ctx_screen'~r~n" +  &
"	select  @SqlString = @SqlString + '	where data_view_id = ' + @ViewID~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	~r~n" +  &
"	/*insert Data Fill Settings*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_datafill (data_view_id~r~n" +  &
"      ,screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_name_fill~r~n" +  &
"      ,field_name_map~r~n" +  &
"      ,modify_by~r~n" +  &
"      ,modify_date~r~n" +  &
"      ,Relative_Days)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_name_fill~r~n" +  &
"      ,field_name_map~r~n" +  &
"      ,modify_by~r~n" +  &
"      ,modify_date~r~n" +  &
"      ,Relative_Days from ' + @SourceDBName + '.dbo.ctx_screen_datafill where data_view_id = ' + @ViewID ~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*insert Field Depent Settings*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_field_depend (view_id~r~n" +  &
"      ,base_field~r~n" +  &
"      ,depend_field~r~n" +  &
"      ,base_screen_id~r~n" +  &
"      ,depend_screen_id~r~n" +  &
"      ,base_field_dispaly~r~n" +  &
"      ,depend_field_dispaly~r~n" +  &
"      ,base_screen_type~r~n" +  &
"      ,base_table~r~n" +  &
"      ,depend_table)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',base_field~r~n" +  &
"      ,depend_field~r~n" +  &
"      ,base_screen_id~r~n" +  &
"      ,depend_screen_id~r~n" +  &
"      ,base_field_dispaly~r~n" +  &
"      ,depend_field_dispaly~r~n" +  &
"      ,base_screen_type~r~n" +  &
"      ,base_table~r~n" +  &
"      ,depend_table from ' + @SourceDBName + '.dbo.ctx_screen_field_depend where view_id = ' + @ViewID ~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*isnert field extend property*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_field_ex (data_view_id~r~n" +  &
"      ,screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_add)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_add from ' + @SourceDBName + '.dbo.ctx_screen_field_ex where data_view_id = ' + @ViewID ~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	select Cast(@MaxViewID as int)~r~n" +  &
"end~r~n" 


//Copy Report Writer - Added by Jervis on 03.09.2011 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_copy_reportwriter' AND type = 'P') " + &
"    DROP PROCEDURE up_copy_reportwriter"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_copy_reportwriter ~r~n" +  &
"	@SourceDBName nvarchar(100), ~r~n" +  &
"	@TargetDBName nvarchar(100), ~r~n" +  &
"	@ReportID	nvarchar(100), ~r~n" +  &
"	@NewReportName nvarchar(50), ~r~n" +  &
"	@NewDataViewID nvarchar(100), ~r~n" +  &
"	@NewCategroy nvarchar(50), ~r~n" +  &
"	@NewModuser nvarchar(50), ~r~n" +  &
"	@CreateBy nvarchar(50) ~r~n" +  &
"As ~r~n" +  &
"Begin ~r~n" +  &
"	declare @MaxReportID	nvarchar(100) ~r~n" +  &
"	declare @SqlString nvarchar(4000) ~r~n" +  &
"	declare @ParmDefinition nvarchar(100) ~r~n" +  &
"		 ~r~n" +  &
"	/*Get Seq No*/ ~r~n" +  &
"	select @SqlString = 'select @MaxReportIDOUT = isnull(max(view_id),0) + 1  from ' +  ~r~n" +  &
"						@TargetDBName + '.dbo.conv_view' ~r~n" +  &
"	select @ParmDefinition = '@MaxReportIDOUT int Output' ~r~n" +  &
"	exec sp_executesql @SqlString,@ParmDefinition,@MaxReportIDOUT=@MaxReportID output ~r~n" +  &
"	/*Insert conv_View Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view (view_id ~r~n" +  &
"      ,view_name ~r~n" +  &
"      ,category ~r~n" +  &
"      ,mod_user ~r~n" +  &
"      ,created_by ~r~n" +  &
"      ,data_view_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,add_rec_id_fld ~r~n" +  &
"      ,distinct_sql ~r~n" +  &
"      ,orientation ~r~n" +  &
"      ,font_size ~r~n" +  &
"      ,post_import_sql ~r~n" +  &
"      ,create_date ~r~n" +  &
"      ,detail_height ~r~n" +  &
"      ,report_type ~r~n" +  &
"      ,profile_title ~r~n" +  &
"      ,header_height ~r~n" +  &
"      ,footer_height ~r~n" +  &
"      ,summary_height ~r~n" +  &
"      ,module ~r~n" +  &
"      ,advanced_linking ~r~n" +  &
"      ,newpage_group)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID +  ~r~n" +  &
"	  ',~'~'' + @NewReportName +  ~r~n" +  &
"	  '~'~',~'~'' +  @NewCategroy +  ~r~n" +  &
"	  '~'~',~'~'' +  @NewModuser +  ~r~n" +  &
"	  '~'~',~'~'' +  @CreateBy +  ~r~n" +  &
"	  '~'~',' +  @NewDataViewID +  ~r~n" +  &
"	  ',project_id ~r~n" +  &
"      ,add_rec_id_fld ~r~n" +  &
"      ,distinct_sql ~r~n" +  &
"      ,orientation ~r~n" +  &
"      ,font_size ~r~n" +  &
"      ,post_import_sql ~r~n" +  &
"      ,create_date ~r~n" +  &
"      ,detail_height ~r~n" +  &
"      ,report_type ~r~n" +  &
"      ,profile_title ~r~n" +  &
"      ,header_height ~r~n" +  &
"      ,footer_height ~r~n" +  &
"      ,summary_height ~r~n" +  &
"      ,module ~r~n" +  &
"      ,advanced_linking ~r~n" +  &
"      ,newpage_group from '  ~r~n" +  &
"			+ @SourceDBName + '.dbo.conv_view where view_id = ' + @ReportID ~r~n" +  &
"	 ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert conv_view_table Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_table (view_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,cust_table_name ~r~n" +  &
"      ,table_id ~r~n" +  &
"      ,table_name)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',project_id ~r~n" +  &
"      ,cust_table_name ~r~n" +  &
"      ,table_id ~r~n" +  &
"      ,table_name from ' + @SourceDBName + '.dbo.conv_view_table where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert conv_view_links Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_links (view_id ~r~n" +  &
"      ,link_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,link_from_table ~r~n" +  &
"      ,link_from_field ~r~n" +  &
"      ,link_type ~r~n" +  &
"      ,link_to_table ~r~n" +  &
"      ,link_to_field ~r~n" +  &
"      ,link_from_table_nm ~r~n" +  &
"      ,link_from_field_nm ~r~n" +  &
"      ,link_to_table_nm ~r~n" +  &
"      ,link_to_field_nm)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',link_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,link_from_table ~r~n" +  &
"      ,link_from_field ~r~n" +  &
"      ,link_type ~r~n" +  &
"      ,link_to_table ~r~n" +  &
"      ,link_to_field ~r~n" +  &
"      ,link_from_table_nm ~r~n" +  &
"      ,link_from_field_nm ~r~n" +  &
"      ,link_to_table_nm ~r~n" +  &
"      ,link_to_field_nm from ' + @SourceDBName + '.dbo.conv_view_links where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert conv_view_fields Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_fields (view_id ~r~n" +  &
"      ,field_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,table_name ~r~n" +  &
"      ,field_name ~r~n" +  &
"      ,field_options ~r~n" +  &
"      ,field_alias ~r~n" +  &
"      ,sel_table_id ~r~n" +  &
"      ,sel_field_id ~r~n" +  &
"      ,field_order ~r~n" +  &
"      ,field_display_width ~r~n" +  &
"      ,field_x ~r~n" +  &
"      ,field_wizard_name ~r~n" +  &
"      ,field_wizard_type ~r~n" +  &
"      ,field_align ~r~n" +  &
"      ,label_align ~r~n" +  &
"      ,label_text ~r~n" +  &
"      ,group_by_field ~r~n" +  &
"      ,aggregate_type ~r~n" +  &
"      ,avg_fld ~r~n" +  &
"      ,sum_fld ~r~n" +  &
"      ,count_fld ~r~n" +  &
"      ,label_font_style ~r~n" +  &
"      ,field_font_style ~r~n" +  &
"      ,field_y ~r~n" +  &
"      ,label_x ~r~n" +  &
"      ,label_y ~r~n" +  &
"      ,label_width ~r~n" +  &
"      ,field_height ~r~n" +  &
"      ,label_height ~r~n" +  &
"      ,lu_field_name ~r~n" +  &
"      ,lookup_type ~r~n" +  &
"      ,Filter_by_field)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',field_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,table_name ~r~n" +  &
"      ,field_name ~r~n" +  &
"      ,field_options ~r~n" +  &
"      ,field_alias ~r~n" +  &
"      ,sel_table_id ~r~n" +  &
"      ,sel_field_id ~r~n" +  &
"      ,field_order ~r~n" +  &
"      ,field_display_width ~r~n" +  &
"      ,field_x ~r~n" +  &
"      ,field_wizard_name ~r~n" +  &
"      ,field_wizard_type ~r~n" +  &
"      ,field_align ~r~n" +  &
"      ,label_align ~r~n" +  &
"      ,label_text ~r~n" +  &
"      ,group_by_field ~r~n" +  &
"      ,aggregate_type ~r~n" +  &
"      ,avg_fld ~r~n" +  &
"      ,sum_fld ~r~n" +  &
"      ,count_fld ~r~n" +  &
"      ,label_font_style ~r~n" +  &
"      ,field_font_style ~r~n" +  &
"      ,field_y ~r~n" +  &
"      ,label_x ~r~n" +  &
"      ,label_y ~r~n" +  &
"      ,label_width ~r~n" +  &
"      ,field_height ~r~n" +  &
"      ,label_height ~r~n" +  &
"      ,lu_field_name ~r~n" +  &
"      ,lookup_type ~r~n" +  &
"      ,Filter_by_field from ' + @SourceDBName + '.dbo.conv_view_fields where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert conv_view_where Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_where (view_id ~r~n" +  &
"      ,where_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,table_field_name ~r~n" +  &
"      ,field_name ~r~n" +  &
"      ,operator ~r~n" +  &
"      ,value ~r~n" +  &
"      ,connector ~r~n" +  &
"      ,table_id ~r~n" +  &
"      ,field_id ~r~n" +  &
"      ,value_display ~r~n" +  &
"      ,lu_field_name ~r~n" +  &
"      ,lookup_type ~r~n" +  &
"      ,field_type ~r~n" +  &
"      ,lookup_name ~r~n" +  &
"      ,left_bracket ~r~n" +  &
"      ,right_bracket ~r~n" +  &
"      ,logical)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',where_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,table_field_name ~r~n" +  &
"      ,field_name ~r~n" +  &
"      ,operator ~r~n" +  &
"      ,value ~r~n" +  &
"      ,connector ~r~n" +  &
"      ,table_id ~r~n" +  &
"      ,field_id ~r~n" +  &
"      ,value_display ~r~n" +  &
"      ,lu_field_name ~r~n" +  &
"      ,lookup_type ~r~n" +  &
"      ,field_type ~r~n" +  &
"      ,lookup_name ~r~n" +  &
"      ,left_bracket ~r~n" +  &
"      ,right_bracket ~r~n" +  &
"      ,logical from ' + @SourceDBName + '.dbo.conv_view_where where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert conv_view_sort Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_sort (view_id ~r~n" +  &
"      ,sort_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,table_name ~r~n" +  &
"      ,field_name ~r~n" +  &
"      ,sort_dir ~r~n" +  &
"      ,sort_order)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',sort_id ~r~n" +  &
"      ,project_id ~r~n" +  &
"      ,table_name ~r~n" +  &
"      ,field_name ~r~n" +  &
"      ,sort_dir ~r~n" +  &
"      ,sort_order from ' + @SourceDBName + '.dbo.conv_view_sort where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert ctx_report_syntax Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_report_syntax (view_id ~r~n" +  &
"      ,dw_sql ~r~n" +  &
"      ,dw_syntax ~r~n" +  &
"      ,modify_date)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',dw_sql ~r~n" +  &
"      ,dw_syntax ~r~n" +  &
"      ,modify_date from ' + @SourceDBName + '.dbo.ctx_report_syntax where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	/*Insert Conv_view_pic Table*/ ~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.Conv_view_pic (view_id ~r~n" +  &
"      ,Screen_id ~r~n" +  &
"      ,pic_type ~r~n" +  &
"      ,pic_band ~r~n" +  &
"      ,pic_name ~r~n" +  &
"      ,pic_filename ~r~n" +  &
"      ,pic_bitmap ~r~n" +  &
"      ,pic_x ~r~n" +  &
"      ,pic_y ~r~n" +  &
"      ,pic_width ~r~n" +  &
"      ,pic_height ~r~n" +  &
"      ,pic_tag)' ~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxReportID + ',Screen_id ~r~n" +  &
"      ,pic_type ~r~n" +  &
"      ,pic_band ~r~n" +  &
"      ,pic_name ~r~n" +  &
"      ,pic_filename ~r~n" +  &
"      ,pic_bitmap ~r~n" +  &
"      ,pic_x ~r~n" +  &
"      ,pic_y ~r~n" +  &
"      ,pic_width ~r~n" +  &
"      ,pic_height ~r~n" +  &
"      ,pic_tag from ' + @SourceDBName + '.dbo.Conv_view_pic where view_id = ' + @ReportID  ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	select Cast(@MaxReportID as int) ~r~n" +  &
"end ~r~n" 


//Copy Users - Added by Jervis on 03.16.2011 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_copy_user' AND type = 'P') " + &
"    DROP PROCEDURE up_copy_user"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_copy_user~r~n" + &
"	@SourceDBName nvarchar(100),~r~n" + &
"	@TargetDBName nvarchar(100),~r~n" + &
"	@UserID nvarchar(30),~r~n" + &
"	@DefauleView nvarchar(30),~r~n" + &
"	@RoleID	nvarchar(30),~r~n" + &
"	@bCopyEmail char(1)~r~n" + &
"As~r~n" + &
"Begin~r~n" + &
"	declare @SqlString nvarchar(4000)~r~n" + &
"		~r~n" + &
"	/*Insert security_user Table*/~r~n" + &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.security_users (user_id~r~n" + &
"      ,role_id~r~n" + &
"	  ,contract_default_view~r~n" + &
"      ,user_password~r~n" + &
"      ,email_id~r~n" + &
"      ,iverify_temp_id~r~n" + &
"      ,default_search_facility~r~n" + &
"      ,version_build~r~n" + &
"      ,default_view~r~n" + &
"      ,prac_id~r~n" + &
"      ,pref_win_left~r~n" + &
"      ,pref_win_top~r~n" + &
"      ,last_pass_update~r~n" + &
"      ,de_status~r~n" + &
"      ,audit_type~r~n" + &
"      ,wv_role_id~r~n" + &
"      ,image_flag~r~n" + &
"      ,TDL_Rights~r~n" + &
"      ,TDL_Other_user~r~n" + &
"      ,wv_ldap_user~r~n" + &
"      ,lock_until~r~n" + &
"      ,ic_ldap_user~r~n" + &
"      ,npdb_user_id~r~n" + &
"      ,user_name~r~n" + &
"      ,set_tdl~r~n" + &
"      ,set_task~r~n" + &
"      ,set_go_on_open~r~n" + &
"      ,open_tdl~r~n" + &
"      ,set_1~r~n" + &
"      ,set_2~r~n" + &
"      ,set_3~r~n" + &
"      ,set_4~r~n" + &
"      ,npdb_password~r~n" + &
"      ,domain_name~r~n" + &
"      ,image_prompt_flag~r~n" + &
"      ,lic_agr_img~r~n" + &
"      ,lic_agr_asa~r~n" + &
"      ,Readonly~r~n" + &
"      ,set_dashboard~r~n" + &
"      ,set_prelod_ctx~r~n" + &
"      ,default_dashboard_id~r~n" + &
"      ,set_autoret~r~n" + &
"      ,custom_colors~r~n" + &
"      ,Dynamic_Search_Tab~r~n" + &
"      ,set_autoresize~r~n" + &
"      ,doc_auto_retrieve~r~n" + &
"      ,contract_display_mode~r~n" + &
"      ,AutoExport~r~n" + &
"      ,getting_started~r~n" + &
"      ,run_date_alarm~r~n" + &
"      ,req_expand_status)'~r~n" + &
"	select @SqlString = @SqlString + 'select user_id, ' +~r~n" + &
"      @RoleID + ',' +~r~n" + &
"	  @DefauleView + '~r~n" + &
"	  ,user_password~r~n" + &
"      ,email_id~r~n" + &
"      ,iverify_temp_id~r~n" + &
"      ,default_search_facility~r~n" + &
"      ,version_build~r~n" + &
"      ,default_view~r~n" + &
"      ,prac_id~r~n" + &
"      ,pref_win_left~r~n" + &
"      ,pref_win_top~r~n" + &
"      ,last_pass_update~r~n" + &
"      ,de_status~r~n" + &
"      ,audit_type~r~n" + &
"      ,wv_role_id~r~n" + &
"      ,image_flag~r~n" + &
"      ,TDL_Rights~r~n" + &
"      ,TDL_Other_user~r~n" + &
"      ,wv_ldap_user~r~n" + &
"      ,lock_until~r~n" + &
"      ,ic_ldap_user~r~n" + &
"      ,npdb_user_id~r~n" + &
"      ,user_name~r~n" + &
"      ,set_tdl~r~n" + &
"      ,set_task~r~n" + &
"      ,set_go_on_open~r~n" + &
"      ,open_tdl~r~n" + &
"      ,set_1~r~n" + &
"      ,set_2~r~n" + &
"      ,set_3~r~n" + &
"      ,set_4~r~n" + &
"      ,npdb_password~r~n" + &
"      ,domain_name~r~n" + &
"      ,image_prompt_flag~r~n" + &
"      ,lic_agr_img~r~n" + &
"      ,lic_agr_asa~r~n" + &
"      ,Readonly~r~n" + &
"      ,set_dashboard~r~n" + &
"      ,set_prelod_ctx~r~n" + &
"      ,default_dashboard_id~r~n" + &
"      ,set_autoret~r~n" + &
"      ,custom_colors~r~n" + &
"      ,Dynamic_Search_Tab~r~n" + &
"      ,set_autoresize~r~n" + &
"      ,doc_auto_retrieve~r~n" + &
"      ,contract_display_mode~r~n" + &
"      ,AutoExport~r~n" + &
"      ,getting_started~r~n" + &
"      ,run_date_alarm~r~n" + &
"      ,req_expand_status from ' + @SourceDBName + '.dbo.security_users where user_id = ~'~'' + @UserID + '~'~''~r~n" + &
"	exec sp_executesql @SqlString~r~n" + &
"	~r~n" + &
"	if @bCopyEmail = '1'~r~n" + &
"	begin~r~n" + &
"		select @SqlString = 'insert ' + @TargetDBName + '.dbo.em_smtp_accounts(user_id~r~n" + &
"      ,is_default~r~n" + &
"      ,server~r~n" + &
"      ,port~r~n" + &
"      ,authmode~r~n" + &
"      ,account~r~n" + &
"      ,password~r~n" + &
"      ,email~r~n" + &
"      ,pop3_server~r~n" + &
"      ,pop3_port~r~n" + &
"      ,pop3_sort_rule)'~r~n" + &
"		select @SqlString = @SqlString + 'select user_id~r~n" + &
"      ,is_default~r~n" + &
"      ,server~r~n" + &
"      ,port~r~n" + &
"      ,authmode~r~n" + &
"      ,account~r~n" + &
"      ,password~r~n" + &
"      ,email~r~n" + &
"      ,pop3_server~r~n" + &
"      ,pop3_port~r~n" + &
"      ,pop3_sort_rule from ' + @SourceDBName + '.dbo.em_smtp_accounts where user_id = ~'~'' + @UserID + '~'~''~r~n" + &
"		exec sp_executesql @SqlString~r~n" + &
"	end~r~n" + &
"end~r~n" 



//Copy Security Role - Added by Jervis on 03.16.2011 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_copy_role' AND type = 'P') " + &
"    DROP PROCEDURE up_copy_role"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_copy_role~r~n" + &
"	@SourceDBName nvarchar(100),~r~n" + &
"	@TargetDBName nvarchar(100),~r~n" + &
"	@RoleID nvarchar(50),~r~n" + &
"	@NewRoleName nvarchar(100)~r~n" + &
"As~r~n" + &
"Begin~r~n" + &
"	declare @MaxRoleID	nvarchar(100)~r~n" + &
"	declare @SqlString nvarchar(4000)~r~n" + &
"	declare @ParmDefinition nvarchar(100)~r~n" + &
"		~r~n" + &
"	select @SqlString = 'select @MaxRoleIDOUT = isnull(max(role_id),0) + 1  from ' + ~r~n" + &
"						@TargetDBName + '.dbo.security_roles'~r~n" + &
"	select @ParmDefinition = '@MaxRoleIDOUT int Output'~r~n" + &
"	exec sp_executesql @SqlString,@ParmDefinition,@MaxRoleIDOUT=@MaxRoleID output~r~n" + &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.security_roles (role_id,role_name)'~r~n" + &
"	select @SqlString = @SqlString + 'select ' + @MaxRoleID + ',~'~'' + @NewRoleName + '~'~' from ' ~r~n" + &
"			+ @SourceDBName + '.dbo.security_roles where role_id = ' + @RoleID~r~n" + &
"	~r~n" + &
"	exec sp_executesql @SqlString~r~n" + &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.security_roles_rights (ROLE_ID,RIGHTS_ID~r~n" + &
"      ,ACTION_ID~r~n" + &
"      ,VALUE_ID)'~r~n" + &
"	select @SqlString = @SqlString + 'select ' + @MaxRoleID + ',RIGHTS_ID~r~n" + &
"      ,ACTION_ID~r~n" + &
"      ,VALUE_ID from ' + @SourceDBName + '.dbo.security_roles_rights where role_id = ' + @RoleID ~r~n" + &
"	exec sp_executesql @SqlString~r~n" + &
"	select Cast(@MaxRoleID as int)~r~n" + &
"end~r~n" 


of_execute_sqls("of_ver100_release_storeprocedure1")

Return 1
end function

public function integer of_ver100_updates ();//of_ver100_release_dropfulltext1()	

of_ver100_release_table1()
of_ver100_release_table2()
of_ver100_release_view1()
of_ver100_release_storeprocedure1()
	
//if of_get_app_set()=1 then
//	of_ver100_release_createfulltext1() 
//end if	

Return 1

end function

public function integer of_ver100_release_createfulltext1 ();
of_enable_fulltext()					

//Added By Ken.Guo 2010-05-13. Add full text for "em_mail_items.mail_rfc822"
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='em_mail_items' and i.name = 'index_em_mail_items_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_em_mail_items_id_forcatalog ON em_mail_items(id) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'em_mail_items_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'em_mail_items_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('em_mail_items') , 'TableFulltextCatalogId' )=0) " + &
" exec sp_fulltext_table 'em_mail_items','create','em_mail_items_catalog','index_em_mail_items_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('em_mail_items'),'mail_rfc822','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'em_mail_items','mail_rfc822','add',0,'mail_save_format'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('em_mail_items') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'em_mail_items','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('em_mail_items') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'em_mail_items','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('em_mail_items') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'em_mail_items','start_background_updateindex' "


//Added By Ken.Guo 2010-06-03. Add ctx_fee_sched_nm Full Text Catalog
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_fee_sched_nm' and i.name = 'index_ctx_fee_sched_nm_catalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_fee_sched_nm_catalog ON ctx_fee_sched_nm(id_forcelog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_fee_sched_nm_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_fee_sched_nm_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_nm') , 'TableFulltextCatalogId' )=0) " + &
" exec sp_fulltext_table 'ctx_fee_sched_nm','create','ctx_fee_sched_nm_catalog','index_ctx_fee_sched_nm_catalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'description','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','description','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text1','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text2','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text3','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text4','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text5','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text6','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text7','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text8','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'notes','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','notes','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_nm') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_fee_sched_nm','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_nm') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_fee_sched_nm','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_nm') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_fee_sched_nm','start_background_updateindex' "


of_execute_sqls("of_ver100_release_createfulltext1")
return 1
end function

public function integer of_ver100_release_dropfulltext1 ();//Added By Ken.Guo 2010-05-13.
of_enable_fulltext()								

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('em_mail_items'),'id','IsFulltextIndexed' ) = 1) " + &
"begin " + &
"	exec sp_fulltext_column 'em_mail_items','id','drop' " + &
"end "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'description','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','description','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text1','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text2','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text3','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text4','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text6','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text7','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'custom_text8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','custom_text8','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_fee_sched_nm'),'notes','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_fee_sched_nm','notes','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_nm') , 'TableFulltextCatalogId' )>0)	 " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_fee_sched_nm', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_fee_sched_nm_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_fee_sched_nm_catalog', 'drop' " + &
"end "


of_execute_sqls("of_ver100_release_dropfulltext1")
return 1

end function

public function integer of_ver100_release_table2 ();//Added By Ken.Guo 2010-11-12.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'em_mail_audit' )~r~n" + &
"	Create Table em_mail_audit ~r~n" + &
"	(~r~n" + &
"		id  numeric(10,0) identity  not null,~r~n" + &
"		user_id varchar(50) not null,~r~n" + &
"		mail_from varchar(50) null,~r~n" + &
"		mail_to varchar(500) null,~r~n" + &
"		mail_cc varchar(500) null,~r~n" + &
"		mail_bcc varchar(500) null,~r~n" + &
"		mail_subject varchar(500) null,~r~n" + &
"		mail_date datetime null,~r~n" + &
"		mail_importance integer null,~r~n" + &
"		mail_attach_name varchar(1000) null,~r~n" + &
"		mail_template_id numeric(10,0) null,~r~n" + &
"		ctx_id_list varchar(1000) null,~r~n" + &
"		doc_id_list varchar(1000) null,~r~n" + &
"		ai_id_list varchar(1000) null,~r~n" + &
"		wf_id numeric(10,0) null,~r~n" + &
"		alarm_type varchar(50) null,~r~n" + &
"		field_name varchar(50) null,~r~n" + &
"		compute_info varchar(200) null,~r~n" + &
"		send_result integer null,~r~n" + &
"		notes varchar(8000) null,~r~n" + &
"		error_text varchar(200)~r~n" + &
"		Primary Key(id)~r~n" + &
"	)~r~n" 



//Add  group access for contact screen -- jervis 11.21.2010
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'app_facility_group_access' )~r~n" + &
"CREATE TABLE app_facility_group_access~r~n" + &
"(~r~n" + &
"	facility_id int NOT NULL,~r~n" + &
"	group_id numeric(10, 0) NOT NULL,~r~n" + &
"	access varchar(1) NOT NULL,~r~n" + &
"	notes varchar(100) NULL,~r~n" + &
"	CONSTRAINT PK_app_facility_group_access PRIMARY KEY (facility_id ,group_id)~r~n" + &
")"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'app_facility_default_access' )~r~n" + &
"CREATE TABLE app_facility_default_access~r~n" + &
"(~r~n" + &
"	user_id varchar(25) not null,~r~n" + &
"	group_id numeric(10, 0) NOT NULL,~r~n" + &
"	access varchar(1) NOT NULL,~r~n" + &
"	notes varchar(100) NULL,~r~n" + &
"	CONSTRAINT PK_app_facility_default_access PRIMARY KEY (user_id ,group_id)~r~n" + &
")"

//Added By Ken.Guo 2010-11-30.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='send_email_log' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add send_email_log integer null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='send_email_log_to' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add send_email_log_to varchar(500) null  ~r~n" 

//Add group access for compamy -- jervis 12.02.2010
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='company_group_access' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"alter table icred_settings add company_group_access int null  ~r~n" 

//Added By Ken.Guo 2010-12-03.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='receive_email' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add receive_email integer null  ~r~n" 

//Added By Ken.Guo 2010-12-06.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='run_alarm' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add run_alarm integer null  "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='req_expand_status' and t.name='Security_Users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add req_expand_status varchar(20) null  "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='show_word_ico' and t.name='ctx_req_tmplt_element'	and t.type = 'U')~r~n" + &
"ALTER table ctx_req_tmplt_element add show_word_ico integer null  "

//Add by jervis 12.24.2010
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='work_flow_n1' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add work_flow_n1 numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='work_flow_n2' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add work_flow_n2 numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='work_flow_n3' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add work_flow_n3 numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='work_flow_n4' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add work_flow_n4 numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='work_flow_n5' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add work_flow_n5 numeric(12,2) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='blind_flag' and t.name='security_user_mailsetting'	and t.type = 'U')~r~n" + &
"alter table security_user_mailsetting add blind_flag char(1) default '0' null"

//limit 20 characters for password - jervis 01.21.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='user_password' and t.name='security_users'	and t.type = 'U')~r~n" + &
"alter table security_users alter column user_password nvarchar(50) null "


//Add 'add lookup code..' in screen painter - jervis 01.26.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_screen_field_ex' )~r~n" + &
"CREATE TABLE ctx_screen_field_ex(~r~n" + &
"	data_view_id int NOT NULL,~r~n" + &
"	screen_id int NOT NULL,~r~n" + &
"	field_name varchar(50)  NOT NULL,~r~n" + &
"	field_Add varchar(1)  NULL default 'Y'~r~n" + &
" CONSTRAINT PK_ctx_screen_field_ex PRIMARY KEY ~r~n" + &
"(~r~n" + &
"	data_view_id ASC,~r~n" + &
"	screen_id ASC,~r~n" + &
"	field_name ASC~r~n" + &
"))"

//Added By Ken.Guo 2011-02-14.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter table ctx_am_document alter column filename varchar(500) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter table ctx_bidq_doc alter column filename varchar(500) "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter table Ctx_am_doc_audit alter column filename varchar(500) "

//Modify table primary key - jervis 03.10.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_table ~r~n" +  &
"	DROP CONSTRAINT PK_conv_view_table ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_table ADD CONSTRAINT ~r~n" +  &
"	PK_conv_view_table PRIMARY KEY CLUSTERED  ~r~n" +  &
"	( ~r~n" +  &
"	view_id, ~r~n" +  &
"	table_id ~r~n" +  &
"	)  ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_links ~r~n" +  &
"	DROP CONSTRAINT PK_CONV_VIEW_LINKS ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_links ADD CONSTRAINT ~r~n" +  &
"	PK_CONV_VIEW_LINKS PRIMARY KEY CLUSTERED  ~r~n" +  &
"	( ~r~n" +  &
"	view_id, ~r~n" +  &
"	link_id ~r~n" +  &
"	) ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_fields ~r~n" +  &
"	DROP CONSTRAINT PK_CONV_VIEW_FIELDS ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_fields ADD CONSTRAINT ~r~n" +  &
"	PK_CONV_VIEW_FIELDS PRIMARY KEY CLUSTERED  ~r~n" +  &
"	( ~r~n" +  &
"	view_id, ~r~n" +  &
"	field_id ~r~n" +  &
"	) ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_where ~r~n" +  &
"	DROP CONSTRAINT PK_CONV_VIEW_WHERE ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE conv_view_where ADD CONSTRAINT ~r~n" +  &
"	PK_CONV_VIEW_WHERE PRIMARY KEY CLUSTERED  ~r~n" +  &
"	( ~r~n" +  &
"	view_id, ~r~n" +  &
"	where_id ~r~n" +  &
"	) ~r~n" 

//Added By Ken.Guo 2011-03-30.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table import_table_gen alter column field_1 varchar(8000) null "


//Modify primary key -jervis 04.19.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE SECURITY_ROLES_RIGHTS ~r~n" +  &
"	DROP CONSTRAINT PK_SECURITY_ROLES_RIGHTS ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE SECURITY_ROLES_RIGHTS ADD CONSTRAINT ~r~n" +  &
"	PK_SECURITY_ROLES_RIGHTS PRIMARY KEY CLUSTERED  ~r~n" +  &
"	( ~r~n" +  &
"	ROLE_ID, ~r~n" +  &
"	RIGHTS_ID ~r~n" +  &
"	) ~r~n" 


//Add custom status field -- jervis 04.19.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_status1' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_status1 int null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_status2' and t.name='ctx_basic_info'	and t.type = 'U')~r~n" + &
"alter table ctx_basic_info add custom_status2 int null "

//Modify primary key -jervis 04.19.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='field_name' and t.name='sys_statusaudit'	and t.type = 'U')~r~n" + &
"alter table sys_statusaudit add field_name varchar(50) not null default 'status' "


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE sys_StatusAudit ~r~n" +  &
"	DROP CONSTRAINT PK_sys_StatusAudit ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE sys_StatusAudit ADD CONSTRAINT ~r~n" +  &
"	PK_sys_StatusAudit PRIMARY KEY CLUSTERED  ~r~n" +  &
"	( ~r~n" +  &
"	ctx_id, ~r~n" +  &
"	seq_no, ~r~n" +  &
"	field_name ~r~n" +  &
"	) ~r~n" 


//Added By Ken.Guo 2011-05-06. for Open PDF Mode
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='openpdfwith' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add openpdfwith integer null  ~r~n"




of_execute_sqls("of_ver100_release_table2")

Return 1

end function

public function integer of_ver105_release_view1 ();//Modify by jervis -- 05.13.2010
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_custom') ~r~n" + &
" drop view v_ctx_custom"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_custom AS ~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       ctx_id,~r~n" + &
"       custom_1,~r~n" + &
"       custom_2,~r~n" + &
"       custom_3,~r~n" + &
"       custom_4,~r~n" + &
"       custom_5,~r~n" + &
"       custom_6,~r~n" + &
"       custom_7,~r~n" + &
"       custom_8,~r~n" + &
"       custom_9,~r~n" + &
"       custom_10,~r~n" + &
"       custom_11,~r~n" + &
"       custom_12,~r~n" + &
"       custom_13,~r~n" + &
"       custom_14,~r~n" + &
"       custom_15,~r~n" + &
"       custom_16,~r~n" + &
"       custom_17,~r~n" + &
"       custom_18,~r~n" + &
"       custom_19,~r~n" + &
"       custom_20,~r~n" + &
"       custom_date1,~r~n" + &
"       custom_date2,~r~n" + &
"       custom_date3,~r~n" + &
"       custom_date4,~r~n" + &
"       custom_date5,~r~n" + &
"       custom_date6,~r~n" + &
"       custom_date7,~r~n" + &
"       custom_date8,~r~n" + &
"       custom_date9,~r~n" + &
"       custom_date10,~r~n" + &
"       custom_date11,~r~n" + &
"       custom_date12,~r~n" + &
"       custom_date13,~r~n" + &
"       custom_date14,~r~n" + &
"       custom_date15,~r~n" + &
"       custom_n1,~r~n" + &
"       custom_n2,~r~n" + &
"       custom_n3,~r~n" + &
"       custom_n4,~r~n" + &
"       custom_n5,~r~n" + &
"       custom_n6,~r~n" + &
"       custom_n7,~r~n" + &
"       custom_n8,~r~n" + &
"       custom_n9,~r~n" + &
"       custom_n10,~r~n" + &
"       custom_n11,~r~n" + &
"       custom_n12,~r~n" + &
"       custom_n13,~r~n" + &
"       custom_n14,~r~n" + &
"       custom_n15,~r~n" + &
"       custom_n16,~r~n" + &
"       custom_n17,~r~n" + &
"       custom_n18,~r~n" + &
"       custom_n19,~r~n" + &
"       custom_n20,~r~n" + &
"       custom_n21,~r~n" + &
"       custom_n22,~r~n" + &
"       custom_n23,~r~n" + &
"       custom_n24,~r~n" + &
"       custom_n25,~r~n" + &
"       custom_percent_1, custom_percent_2, " + &
"       custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_9, custom_percent_10, " + &
"		  custom_percent_8, custom_21, custom_22, custom_n26, custom_n27, custom_date16, custom_date17," + &
"       ctx_basic_info.custom_notes_1,~r~n" + &
"       ctx_basic_info.custom_notes_2,~r~n" + &
"       ctx_basic_info.custom_notes_3,~r~n" + &
"       ctx_basic_info.custom_notes_4,~r~n" + &
"       ctx_basic_info.custom_notes_5~r~n" + &
"  FROM ctx_basic_info~r~n" + &
"ORDER BY ctx_id"


//Added custom fields in ctx contract contact - jervis 06.03.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='V_ctx_contract_contacts' and type = 'V')  " + &
"  drop view V_ctx_contract_contacts "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  V_ctx_contract_contacts " + &
"AS SELECT     contact_id,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS contact_phone,  " + &
"          (SELECT     TOP 1 contact_email  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code   " + &
"                                         FROM          code_lookup AS code_lookup_2  " + &
"                                        WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Email')  )) ) AS contact_email,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup AS code_lookup_1  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Fax') )) ) AS contact_Fax,   " + &
"          (SELECT     TOP 1 ext  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"           WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id)  AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS ext,   " + &
"            association, notes, owner, access, ctx_id, ic_area,default_email,  " + &
"				custom_n1,custom_n2,custom_n3,custom_percent_1,custom_percent_2,custom_1,custom_2,custom_3 " + &
"FROM         CTX_CONTRACT_CONTACTS  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_external' and type = 'V')  " + &
"  drop view v_ctx_contacts_external "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_contacts_external AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       CTX_BASIC_INFO.ctx_id,~r~n" + &
"       app_facility.facility_name,~r~n" + &
"       app_facility.contact as Company_Custom_ID#,~r~n" + &
"       code_lookup.code AS contact_type_code,~r~n" + &
"       code_lookup.description AS contact_type_description,~r~n" + &
"       CTX_CONTACTS.first_name,~r~n" + &
"       CTX_CONTACTS.last_name,~r~n" + &
"       CTX_CONTACTS.middle_name,~r~n" + &
"       code_lookup_4.description AS contact_title,~r~n" + &
"       code_lookup_1.code AS contract_department_code,~r~n" + &
"       code_lookup_1.description AS contract_department_des,~r~n" + &
"       app_facility.street,~r~n" + &
"       app_facility.street_2,~r~n" + &
"       app_facility.street_3,~r~n" + &
"       app_facility.city,~r~n" + &
"       app_facility.zip,~r~n" + &
"       app_facility.state,~r~n" + &
"       CTX_CONTACTS.custom_1,~r~n" + &
"       CTX_CONTACTS.custom_2,~r~n" + &
"       CTX_CONTACTS.custom_3,~r~n" + &
"       CTX_CONTACTS.custom_4,~r~n" + &
"       CTX_CONTACTS.custom_5,~r~n" + &
"       CTX_CONTACTS.custom_6,~r~n" + &
"       CTX_CONTACTS.custom_7,~r~n" + &
"       CTX_CONTACTS.custom_8,~r~n" + &
"       CTX_CONTACTS.custom_9,~r~n" + &
"       CTX_CONTACTS.custom_10,~r~n" + &
"       v_ctx_contract_contacts.access,~r~n" + &
"       v_ctx_contract_contacts.owner,~r~n" + &
"       v_ctx_contract_contacts.notes,~r~n" + &
"       v_ctx_contract_contacts.ext,~r~n" + &
"       v_ctx_contract_contacts.contact_Fax,~r~n" + &
"       v_ctx_contract_contacts.contact_email,~r~n" + &
"       v_ctx_contract_contacts.contact_phone AS phone,~r~n" + &
"			v_ctx_contract_contacts.custom_n1,~r~n" + &
"			v_ctx_contract_contacts.custom_n2,~r~n" + &
"			v_ctx_contract_contacts.custom_n3,~r~n" + &
"			v_ctx_contract_contacts.custom_percent_1,~r~n" + &
"			v_ctx_contract_contacts.custom_percent_2,~r~n" + &
"			v_ctx_contract_contacts.custom_1 as contract_contact_custom_1,~r~n" + &
"			v_ctx_contract_contacts.custom_2 as contract_contact_custom_2,~r~n" + &
"			v_ctx_contract_contacts.custom_3 as contract_contact_custom_3,~r~n" + &
"       NULL AS Phone_Type_code,~r~n" + &
"       NULL AS Phone_type_Description,~r~n" + &
"       v_ctx_contract_contacts.contact_id,~r~n" + &
"       v_ctx_contract_contacts.default_email as default_to  ~r~n" + &
"  FROM CTX_CONTACTS~r~n" + &
"       INNER JOIN~r~n" + &
"       v_ctx_contract_contacts ON CTX_CONTACTS.contact_id = v_ctx_contract_contacts.contact_id~r~n" + &
"       INNER JOIN CTX_BASIC_INFO~r~n" + &
"       INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON v_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id~r~n" + &
"       LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = Convert(varchar(50),code_lookup_4.lookup_code)~r~n" + &
" WHERE v_ctx_contract_contacts.ic_area='e'~r~n" + &
"ORDER BY CTX_BASIC_INFO.ctx_id"


//add ctx custom and multi view  by jervis -- 06.08.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_multi_header') ~r~n" + &
" drop view v_ctx_multi_header"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_multi_header ~r~n" + &
"AS ~r~n" + &
"SELECT     ctx_id, hdr_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_date1,  ~r~n" + &
"                      custom_date2, custom_date3, custom_date4, custom_date5, custom_date6, custom_date7, custom_date8, custom_date9, custom_date10, custom_n1,  ~r~n" + &
"                      custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7, custom_n8, custom_n9, custom_n10, custom_notes_1, custom_notes_2,  ~r~n" + &
"                      custom_m1, custom_m2, custom_m3, custom_m4, custom_m5, custom_percent_1, custom_percent_2, custom_percent_3, custom_percent_4,  ~r~n" + &
"                      custom_percent_5 ~r~n" + &
"FROM         ctx_custom_multi_hdr ~r~n"


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_multi_detail') ~r~n" + &
" drop view v_ctx_multi_detail"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_multi_detail ~r~n" + &
"AS ~r~n" + &
"SELECT     ctx_id, hdr_id, detail_id, custom_int1, custom_int2, custom_int3, custom_int4, custom_int5, custom_fee1, custom_fee2, custom_fee3, custom_fee4,  ~r~n" + &
"                      custom_fee5, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_date1,  ~r~n" + &
"                      custom_date2, custom_date3, custom_date4, custom_date5, custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_percent_1,  ~r~n" + &
"                      custom_percent_2, custom_notes_1 ~r~n" + &
"FROM         ctx_custom_multi_detail ~r~n" 


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_custom2') ~r~n" + &
" drop view v_ctx_custom2"
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_custom2 ~r~n" + &
"AS ~r~n" + &
"SELECT     ctx_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_11, custom_12,  ~r~n" + &
"                      custom_13, custom_14, custom_15, custom_16, custom_17, custom_18, custom_19, custom_20, custom_date1, custom_date2, custom_date3,  ~r~n" + &
"                      custom_date4, custom_date5, custom_date6, custom_date7, custom_date8, custom_date9, custom_date10, custom_date11, custom_date12,  ~r~n" + &
"                      custom_date13, custom_date14, custom_date15, custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7, custom_n8,  ~r~n" + &
"                      custom_n9, custom_n10, custom_n11, custom_n12, custom_n13, custom_n14, custom_n15, custom_n16, custom_n17, custom_n18, custom_n19,  ~r~n" + &
"                      custom_n20, custom_n21, custom_n22, custom_n23, custom_n24, custom_n25, custom_21, custom_22, custom_notes_1, custom_notes_2,  ~r~n" + &
"                      custom_notes_3, custom_notes_4, custom_notes_5, custom_money_1, custom_money_2, custom_money_3, custom_percent_1, custom_percent_2,  ~r~n" + &
"                      custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_8, custom_percent_9,  ~r~n" + &
"                      custom_percent_10 ~r~n" + &
"FROM         ctx_custom ~r~n" 



of_execute_sqls("of_ver105_release_view1")

Return 1

end function

public function integer of_ver105_release_createfulltext1 ();//if use this function, need enable this comment.
//of_enable_fulltext()								//Added By Mark Lee 12/22/2015  

//Examble
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if  (OBJECTPROPERTY (OBJECT_ID('ctx_fee_sched_nm') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
//"      exec sp_fulltext_table 'ctx_fee_sched_nm','start_background_updateindex' "


//if use this function, need enable this comment.
//of_execute_sqls("of_ver105_release_createfulltext1")				//Added By Mark Lee 12/22/2015		
return 1
end function

public function integer of_ver105_release_dropfulltext1 ();//if use this function, need enable this comment.
//of_enable_fulltext()							//Added By Mark Lee 12/22/2015

//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if (COLUMNPROPERTY (OBJECT_ID('em_mail_items'),'id','IsFulltextIndexed' ) = 1) " + &
//"begin " + &
//"	exec sp_fulltext_column 'em_mail_items','id','drop' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver105_release_dropfulltext1")				//Added By Mark Lee 12/22/2015

return 1

end function

public function integer of_ver105_release_table1 ();//Added By Ken.Guo 2010-03-26.
//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
//"where c.id=t.id  and c.name='is_moved' and t.name='em_sent_items'	and t.type = 'U')~r~n" + &
//"ALTER table em_sent_items add is_moved integer null "

//Add custom data 2 table - jervis 05.20.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'ctx_custom' )~r~n" + &
"CREATE TABLE ctx_custom( ~r~n" + &
"	ctx_id int NOT NULL, ~r~n" + &
"	custom_1 varchar(255) NULL, ~r~n" + &
"	custom_2 varchar(255) NULL, ~r~n" + &
"	custom_3 varchar(255) NULL, ~r~n" + &
"	custom_4 varchar(255) NULL, ~r~n" + &
"	custom_5 varchar(255) NULL, ~r~n" + &
"	custom_6 varchar(255) NULL, ~r~n" + &
"	custom_7 varchar(255) NULL, ~r~n" + &
"	custom_8 varchar(255) NULL, ~r~n" + &
"	custom_9 varchar(255) NULL, ~r~n" + &
"	custom_10 varchar(255) NULL, ~r~n" + &
"	custom_11 varchar(255) NULL, ~r~n" + &
"	custom_12 varchar(255) NULL, ~r~n" + &
"	custom_13 varchar(255) NULL, ~r~n" + &
"	custom_14 varchar(255) NULL, ~r~n" + &
"	custom_15 varchar(255) NULL, ~r~n" + &
"	custom_16 varchar(255) NULL, ~r~n" + &
"	custom_17 varchar(255) NULL, ~r~n" + &
"	custom_18 varchar(255) NULL, ~r~n" + &
"	custom_19 varchar(255) NULL, ~r~n" + &
"	custom_20 varchar(255) NULL, ~r~n" + &
"	custom_date1 datetime NULL, ~r~n" + &
"	custom_date2 datetime NULL, ~r~n" + &
"	custom_date3 datetime NULL, ~r~n" + &
"	custom_date4 datetime NULL, ~r~n" + &
"	custom_date5 datetime NULL, ~r~n" + &
"	custom_date6 datetime NULL, ~r~n" + &
"	custom_date7 datetime NULL, ~r~n" + &
"	custom_date8 datetime NULL, ~r~n" + &
"	custom_date9 datetime NULL, ~r~n" + &
"	custom_date10 datetime NULL, ~r~n" + &
"	custom_date11 datetime NULL, ~r~n" + &
"	custom_date12 datetime NULL, ~r~n" + &
"	custom_date13 datetime NULL, ~r~n" + &
"	custom_date14 datetime NULL, ~r~n" + &
"	custom_date15 datetime NULL, ~r~n" + &
"	custom_n1 numeric(12, 2) NULL, ~r~n" + &
"	custom_n2 numeric(12, 2) NULL, ~r~n" + &
"	custom_n3 numeric(12, 2) NULL, ~r~n" + &
"	custom_n4 numeric(12, 2) NULL, ~r~n" + &
"	custom_n5 numeric(12, 2) NULL, ~r~n" + &
"	custom_n6 numeric(12, 2) NULL, ~r~n" + &
"	custom_n7 numeric(12, 2) NULL, ~r~n" + &
"	custom_n8 numeric(12, 2) NULL, ~r~n" + &
"	custom_n9 numeric(12, 2) NULL, ~r~n" + &
"	custom_n10 numeric(12, 2) NULL, ~r~n" + &
"	custom_n11 numeric(12, 2) NULL, ~r~n" + &
"	custom_n12 numeric(12, 2) NULL, ~r~n" + &
"	custom_n13 numeric(12, 2) NULL, ~r~n" + &
"	custom_n14 numeric(12, 2) NULL, ~r~n" + &
"	custom_n15 numeric(12, 2) NULL, ~r~n" + &
"	custom_n16 numeric(12, 2) NULL, ~r~n" + &
"	custom_n17 numeric(12, 2) NULL, ~r~n" + &
"	custom_n18 numeric(12, 2) NULL, ~r~n" + &
"	custom_n19 numeric(12, 2) NULL, ~r~n" + &
"	custom_n20 numeric(12, 2) NULL, ~r~n" + &
"	custom_n21 numeric(12, 2) NULL, ~r~n" + &
"	custom_n22 numeric(12, 2) NULL, ~r~n" + &
"	custom_n23 numeric(12, 2) NULL, ~r~n" + &
"	custom_n24 numeric(12, 2) NULL, ~r~n" + &
"	custom_n25 numeric(12, 2) NULL, ~r~n" + &
"	custom_21 varchar(255) NULL, ~r~n" + &
"	custom_22 varchar(255) NULL, ~r~n" + &
"	custom_notes_1 varchar(8000) NULL, ~r~n" + &
"	custom_notes_2 varchar(8000) NULL, ~r~n" + &
"	custom_notes_3 varchar(8000) NULL, ~r~n" + &
"	custom_notes_4 varchar(8000) NULL, ~r~n" + &
"	custom_notes_5 varchar(8000) NULL, ~r~n" + &
"	custom_money_1 money NULL, ~r~n" + &
"	custom_money_2 money NULL, ~r~n" + &
"	custom_money_3 money NULL, ~r~n" + &
"	custom_percent_1 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_2 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_3 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_4 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_5 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_6 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_7 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_8 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_9 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_10 numeric(12, 4) NULL ~r~n" + &
"	CONSTRAINT pk_ctx_custom PRIMARY KEY(ctx_id)  ~r~n" + &
") ~r~n" 


//Added By Ken.Guo 2011-05-26.For Electronic Signature 
//For Support Module
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='esign' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add esign integer null  "

//For Application Sertifi API Code
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_apicode' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add es_apicode varchar(50) null  ~r~n" 

//For last refresh 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_last_refresh' and t.name='ids'	and t.type = 'U')~r~n" + &
"ALTER table ids add es_last_refresh datetime null  ~r~n" 

//For to do list of sertifi
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_added_tdl' and t.name='ids'	and t.type = 'U')~r~n" + &
"ALTER table ids add es_added_tdl integer null  ~r~n" 

//For Document Manager
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_apicode' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add es_apicode varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_fileid' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add es_fileid varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_docid' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add es_docid varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_sender' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add es_sender varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_sender_email' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add es_sender_email varchar(100) null  ~r~n"

//For Document Manager Audit //Added By Ken.Guo 2011-06-13. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_apicode' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add es_apicode varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_fileid' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add es_fileid varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_docid' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add es_docid varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_sender' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add es_sender varchar(50) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_sender_email' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add es_sender_email varchar(100) null  ~r~n"

//For Action Item
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_docid' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_action_item add es_docid varchar(50) null  ~r~n" 

//Add custom id# in ids table -- jervis 06.02.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_id1' and t.name='ids'	and t.type = 'U')~r~n" + &
"alter table ids add custom_id1 int null" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_id2' and t.name='ids'	and t.type = 'U')~r~n" + &
"alter table ids add custom_id2 int null" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_id3' and t.name='ids'	and t.type = 'U')~r~n" + &
"alter table ids add custom_id3 int null" 

//Add custom fields - jervis 06.03.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_n1' and t.name='CTX_CONTRACT_CONTACTS'	and t.type = 'U')~r~n" + &
"ALTER TABLE dbo.CTX_CONTRACT_CONTACTS ADD~r~n" + &
"	custom_n1 numeric(12, 2) NULL,~r~n" + &
"	custom_n2 numeric(12, 2) NULL,~r~n" + &
"	custom_n3 numeric(12, 2) NULL,~r~n" + &
"	custom_percent_1 numeric(12, 4) NULL,~r~n" + &
"	custom_percent_2 numeric(12, 4) NULL,~r~n" + &
"	custom_1 varchar(255) NULL,~r~n" + &
"	custom_2 varchar(255) NULL,~r~n" + &
"	custom_3 varchar(255) NULL~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'ctx_custom_multi_hdr' )~r~n" + &
"CREATE TABLE dbo.ctx_custom_multi_hdr( ~r~n" + &
"	ctx_id int NOT NULL, ~r~n" + &
"	hdr_id int NOT NULL, ~r~n" + &
"	custom_1 varchar(255) , ~r~n" + &
"	custom_2 varchar(255) , ~r~n" + &
"	custom_3 varchar(255) , ~r~n" + &
"	custom_4 varchar(255) , ~r~n" + &
"	custom_5 varchar(255) , ~r~n" + &
"	custom_6 varchar(255) , ~r~n" + &
"	custom_7 varchar(255) , ~r~n" + &
"	custom_8 varchar(255) , ~r~n" + &
"	custom_9 varchar(255) , ~r~n" + &
"	custom_10 varchar(255) , ~r~n" + &
"	custom_date1 datetime NULL, ~r~n" + &
"	custom_date2 datetime NULL, ~r~n" + &
"	custom_date3 datetime NULL, ~r~n" + &
"	custom_date4 datetime NULL, ~r~n" + &
"	custom_date5 datetime NULL, ~r~n" + &
"	custom_date6 datetime NULL, ~r~n" + &
"	custom_date7 datetime NULL, ~r~n" + &
"	custom_date8 datetime NULL, ~r~n" + &
"	custom_date9 datetime NULL, ~r~n" + &
"	custom_date10 datetime NULL, ~r~n" + &
"	custom_n1 numeric(12, 2) NULL, ~r~n" + &
"	custom_n2 numeric(12, 2) NULL, ~r~n" + &
"	custom_n3 numeric(12, 2) NULL, ~r~n" + &
"	custom_n4 numeric(12, 2) NULL, ~r~n" + &
"	custom_n5 numeric(12, 2) NULL, ~r~n" + &
"	custom_n6 numeric(12, 2) NULL, ~r~n" + &
"	custom_n7 numeric(12, 2) NULL, ~r~n" + &
"	custom_n8 numeric(12, 2) NULL, ~r~n" + &
"	custom_n9 numeric(12, 2) NULL, ~r~n" + &
"	custom_n10 numeric(12, 2) NULL, ~r~n" + &
"	custom_notes_1 varchar(8000) , ~r~n" + &
"	custom_notes_2 varchar(8000) , ~r~n" + &
"	custom_m1 money NULL DEFAULT ((0)), ~r~n" + &
"	custom_m2 money NULL DEFAULT ((0)), ~r~n" + &
"	custom_m3 money NULL DEFAULT ((0)), ~r~n" + &
"	custom_m4 money NULL DEFAULT ((0)), ~r~n" + &
"	custom_m5 money NULL DEFAULT ((0)), ~r~n" + &
"	custom_percent_1 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_2 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_3 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_4 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_5 numeric(12, 4) NULL, ~r~n" + &
" CONSTRAINT pk_ctx_custom_multi_hdr PRIMARY KEY (ctx_id,hdr_id) ~r~n" + &
") ~r~n" 


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'ctx_custom_multi_detail' )~r~n" + &
"CREATE TABLE dbo.ctx_custom_multi_detail( ~r~n" + &
"	ctx_id int NOT NULL, ~r~n" + &
"	hdr_id int NOT NULL, ~r~n" + &
"	detail_id int NOT NULL, ~r~n" + &
"	custom_int1 int NULL, ~r~n" + &
"	custom_int2 int NULL, ~r~n" + &
"	custom_int3 int NULL, ~r~n" + &
"	custom_int4 int NULL, ~r~n" + &
"	custom_int5 int NULL, ~r~n" + &
"	custom_fee1 money NULL, ~r~n" + &
"	custom_fee2 money NULL, ~r~n" + &
"	custom_fee3 money NULL, ~r~n" + &
"	custom_fee4 money NULL, ~r~n" + &
"	custom_fee5 money NULL, ~r~n" + &
"	custom_1 varchar(255) , ~r~n" + &
"	custom_2 varchar(255) , ~r~n" + &
"	custom_3 varchar(255) , ~r~n" + &
"	custom_4 varchar(255) , ~r~n" + &
"	custom_5 varchar(255) , ~r~n" + &
"	custom_6 varchar(255) , ~r~n" + &
"	custom_7 varchar(255) , ~r~n" + &
"	custom_8 varchar(255) , ~r~n" + &
"	custom_9 varchar(255) , ~r~n" + &
"	custom_10 varchar(255) , ~r~n" + &
"	custom_date1 datetime NULL, ~r~n" + &
"	custom_date2 datetime NULL, ~r~n" + &
"	custom_date3 datetime NULL, ~r~n" + &
"	custom_date4 datetime NULL, ~r~n" + &
"	custom_date5 datetime NULL, ~r~n" + &
"	custom_n1 numeric(10, 3) NULL, ~r~n" + &
"	custom_n2 numeric(10, 3) NULL, ~r~n" + &
"	custom_n3 numeric(10, 3) NULL, ~r~n" + &
"	custom_n4 numeric(10, 3) NULL, ~r~n" + &
"	custom_n5 numeric(10, 3) NULL, ~r~n" + &
"	custom_percent_1 numeric(12, 4) NULL, ~r~n" + &
"	custom_percent_2 numeric(12, 4) NULL, ~r~n" + &
"	custom_notes_1 varchar(8000) , ~r~n" + &
" CONSTRAINT pk_ctx_custom_multi_detail PRIMARY KEY(	ctx_id ,hdr_id,detail_id) ~r~n" + &
") ~r~n"

//Added By Ken.Guo 2011-06-28. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='refresh_sertifi' and t.name='security_users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add refresh_sertifi integer null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='refresh_sertifi_dm' and t.name='security_users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add refresh_sertifi_dm integer null  "

//add by jervis 07.01.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'ctx_all_notification' )~r~n" + &
"CREATE TABLE ctx_all_notification( ~r~n" + &
"	ctx_id int NOT NULL, ~r~n" + &
"	doc_id int not null, ~r~n" + &
"	level_id1 int NOT NULL, ~r~n" + &
"	level_id2 int not null, ~r~n" + &
"	alm_table varchar(40) , ~r~n" + &
"	alm_column varchar(40) , ~r~n" + &
"	alm_message varchar(255) , ~r~n" + &
"	alm_enabled char(1) , ~r~n" + &
"	alm_notification_days int NULL, ~r~n" + &
"	alm_last_notification_sent datetime NULL, ~r~n" + &
"	alm_post_notification_days int NULL, ~r~n" + &
"	alm_total_tries int NULL, ~r~n" + &
"	alm_action_item_posted int NULL, ~r~n" + &
"	alm_total_tries_counter int NULL, ~r~n" + &
"	alm_frequency int NULL, ~r~n" + &
"	create_action_item char(1) , ~r~n" + &
"	record_id numeric(10, 0) NOT NULL, ~r~n" + &
"	alm_auto_increment_years int NULL, ~r~n" + &
"	alm_action_title varchar(40) , ~r~n" + &
"	wf_id int NULL, ~r~n" + &
"	alm_auto_increment_unit char(1) , ~r~n" + &
"	alm_last_wf_trigger datetime NULL, ~r~n" + &
"	alm_email_template_id int NULL, ~r~n" + &
"	alm_message_blob image NULL, ~r~n" + &
"	alm_attachment_name varchar(100) , ~r~n" + &
"	alm_attachment image NULL, ~r~n" + &
"	alm_mailto varchar(2000) , ~r~n" + &
"	auto_sign varchar(1) , ~r~n" + &
"	alm_create varchar(2000) , ~r~n" + &
"	alm_subject varchar(255) , ~r~n" + &
"	alm_date datetime, ~r~n" + &
"CONSTRAINT pk_ctx_all_notification PRIMARY KEY (ctx_id ,doc_id,level_id1,level_id2,alm_table,alm_column) ~r~n" + &
")" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'ctx_all_alarm_attachment' )~r~n" + &
"CREATE TABLE ctx_all_alarm_attachment( ~r~n" + &
"	ctx_id int NOT NULL, ~r~n" + &
"	doc_id int not null, ~r~n" + &
"	level_id1	int not null, ~r~n" + &
"	level_id2 int not null, ~r~n" + &
"	alm_table varchar(40) , ~r~n" + &
"	alm_column varchar(40) , ~r~n" + &
"	attach_id int NOT NULL, ~r~n" + &
"	alm_attachment_name varchar(100) , ~r~n" + &
"	alm_attachment image NULL, ~r~n" + &
" CONSTRAINT PK_ALL_ALARM_ATTACHMENT PRIMARY KEY (ctx_id,doc_id,level_id1,level_id2,	alm_table,alm_column,attach_id) ~r~n" + &
") " 


/*
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from sysobjects where name = 'ctx_all_notification_users' )~r~n" + &
"CREATE TABLE ctx_all_notification_users( ~r~n" + &
"	ctx_id int NOT NULL, ~r~n" + &
"	user_id varchar(10) , ~r~n" + &
"	alm_table varchar(40) , ~r~n" + &
"	alm_column varchar(40) , ~r~n" + &
"	doc_id int not null default 0, ~r~n" + &
"	level_id1	int not null default 0, ~r~n" + &
"	level_id2 int not null default 0, ~r~n" + &
"	record_id numeric(10, 0) NOT NULL, ~r~n" + &
" CONSTRAINT pk_ctx_all_notification_users PRIMARY KEY(ctx_id ,doc_id,level_id1,level_id2,user_id ,alm_table ,alm_column ) ~r~n" + &
")"
*/

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='level_id1' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add level_id1 int not null default 0"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='level_id2' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add level_id2 int not null default 0"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='doc_id' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"alter table ctx_action_items add doc_id int not null default 0"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='level_id1' and t.name='ctx_alm_snooze'	and t.type = 'U')~r~n" + &
"alter table ctx_alm_snooze add level_id1 int not null default 0"


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='level_id2' and t.name='ctx_alm_snooze'	and t.type = 'U')~r~n" + &
"alter table ctx_alm_snooze add level_id2 int not null default 0"


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='doc_id' and t.name='ctx_alm_snooze'	and t.type = 'U')~r~n" + &
"alter table ctx_alm_snooze add doc_id int not null default 0"


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_date' and t.name='ctx_notification'	and t.type = 'U')~r~n" + &
"alter table ctx_notification add alm_date datetime null"

//add custom date fields in fee scheduce
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_date' and t.name='ctx_ai_notification'	and t.type = 'U')~r~n" + &
"alter table ctx_ai_notification add alm_date datetime null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_date' and t.name='ctx_am_ai_notification'	and t.type = 'U')~r~n" + &
"alter table ctx_am_ai_notification add alm_date datetime null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_date1' and t.name='ctx_fee_sched_nm'	and t.type = 'U')~r~n" + &
"alter table ctx_fee_sched_nm add custom_date1 datetime null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_date2' and t.name='ctx_fee_sched_nm'	and t.type = 'U')~r~n" + &
"alter table ctx_fee_sched_nm add custom_date2 datetime null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_date3' and t.name='ctx_fee_sched_nm'	and t.type = 'U')~r~n" + &
"alter table ctx_fee_sched_nm add custom_date3 datetime null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_date4' and t.name='ctx_fee_sched_nm'	and t.type = 'U')~r~n" + &
"alter table ctx_fee_sched_nm add custom_date4 datetime null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='custom_date5' and t.name='ctx_fee_sched_nm'	and t.type = 'U')~r~n" + &
"alter table ctx_fee_sched_nm add custom_date5 datetime null"

//Added By Ken 08/15/2011. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_subject' and t.name='ctx_notification_templates'	and t.type = 'U')~r~n" + &
"alter table ctx_notification_templates add alm_subject varchar(255) null"
 
//Added By Ken 08/20/2011. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='suppress_alert' and t.name='wf_workflow'~tand t.type = 'U')~r~n" + &
"ALTER table  wf_workflow add suppress_alert int null  ~r~n" 

//Added By Ken.Guo 2011-08-29.
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='filter_template' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add filter_template integer null  "

//Add tab visible - jervis 09.15.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='tab_visible' and t.name='ctx_tabpage_properties'~tand t.type = 'U')~r~n" + &
"alter table ctx_tabpage_properties add tab_visible char(1) default 'T' null"

//Added By Ken 09/22/2011. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='smtp_ssl' and t.name='em_smtp_accounts'~tand t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add smtp_ssl integer null  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pop3_ssl' and t.name='em_smtp_accounts'~tand t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add pop3_ssl integer null  "

//Added By Ken 09/29/2011. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='check_email' and t.name='security_users'~tand t.type = 'U')~r~n" + &
"ALTER table security_users add check_email integer null  " 

//Added By Jervis 10.11.2011
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='dw_opsql' and t.name='ctx_screen'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_screen add dw_opsql text null  " 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='use_opsyntax' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER TABLE icred_settings ADD	use_opsyntax int default 1 NULL"

//Added By Ken 10/18/2011. 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table conv_view_fields alter column field_wizard_name varchar(255)"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table conv_view_fields alter column field_alias varchar(255)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='fix_field' and t.name='ctx_screen'	and t.type = 'U')~r~n" + &
"alter table ctx_screen add fix_field varchar(2000) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='lookup_list' and t.name='ctx_screen'	and t.type = 'U')~r~n" + &
"alter table ctx_screen add lookup_list varchar(2000) null"

//Added By Ken.Guo 10/26/2011. 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF Not EXISTS(SELECT name  FROM sysobjects WHERE  name = 'ctx_am_image_approve'  AND ~t type = 'U')~r~n" + &
"~tCREATE TABLE ctx_am_image_approve~r~n" + &
"~t(~r~n" + &
"~tapprove_id numeric(10) not null,~r~n" + &
"~tCtx_id integer not null,~r~n" + &
"~tDoc_id integer not null,~r~n" + &
"~tRevision numeric(5,1) not null,~r~n" + &
"~tApprove_type varchar(20) null,~r~n" + &
"~tOrg_Image_file image null,~r~n" + &
"~tnew_file integer null,~r~n" + &
"~tfile_name varchar(100) null,~r~n" + &
"~tfile_size integer null,~r~n" + &
"~tfile_type varchar(50) null,~r~n" + &
"~tfile_path varchar(300) null,~r~n" + &
"~tsender_user varchar(50) null,~r~n" + &
"~tsender_email varchar(100) null, ~r~n" + &
"~temail_subject varchar(200) null, ~r~n" + &
"~temail_signature int null,~r~n" + &
"~tnotify_users varchar(2000) null, ~r~n" + &
"~tnotify_emails varchar(2000) null, ~r~n" + &
"~tnotify_users2 varchar(2000) null,  ~r~n" + &
"~tnotify_emails2 varchar(2000) null,  ~r~n" + &
"~tctx_link_name varchar(300) null,~t~r~n" + &
"~tsent_time datetime null,~r~n" + &
"~tsender_ai_id numeric(10) null,~r~n" + &
"~tReplied_email integer null,~r~n" + &
"~tflag int not null~r~n" + &
"~tPrimary Key(approve_id,Doc_id,Revision)~r~n" + &
")" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'ctx_am_image_approve_detail'  AND ~t type = 'U')~r~n" + &
"~tCREATE TABLE ctx_am_image_approve_detail~r~n" + &
"~t(~r~n" + &
"~tapprove_id numeric(10) not null,~r~n" + &
"~tDoc_id integer not null,~r~n" + &
"~tRevision numeric(5,1) not null,~r~n" + &
"~temail_address varchar(100) not null,~r~n" + &
"~temail_message varchar(8000) null,~r~n" + &
"~tweb_link_name varchar(300) null,~r~n" + &
"~tuser_id varchar(100) null,~r~n" + &
"~tcache_image_file image null,~r~n" + &
"~tNew_Image_file image null,~r~n" + &
"~tuser_order int not null,~r~n" + &
"~tsent_time datetime,~r~n" + &
"~tdownload_time datetime null,~t~r~n" + &
"~tupload_time datetime null,~r~n" + &
"~tsubmit_time datetime null,~r~n" + & 
"~tApprove_status int null,~r~n" + &
"~tcomments varchar(2000) null,~r~n" + &
"~tai_id numeric(10) null,~r~n" + &
"~tflag int null~r~n" + &
"~tPrimary Key(approve_id,Doc_id,Revision,email_address,user_order)~r~n" + &
")" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'ctx_am_image_approve_email_attach'  AND ~t type = 'U')~r~n" + &
"~tCREATE TABLE ctx_am_image_approve_email_attach~r~n" + &
"~t(~r~n" + &
"~tapprove_id numeric(10) not null,~r~n" + &
"~tseq_no integer  not null,~r~n" + &
"~tattach_name varchar(100) null,~r~n" + &
"~tattach_image image null,~r~n" + &
"~tPrimary Key(approve_id,seq_no)~r~n" + &
"~t)"

//Added By Ken.Guo 11/28/2011. 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='notes' and t.name='ctx_action_items'	and t.type = 'U')~r~n" + &
"Alter Table ctx_action_items alter column notes varchar(8000) null"

//For to do list of sertifi
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='webapprove_added_tdl' and t.name='ids'	and t.type = 'U')~r~n" + &
"ALTER table ids add webapprove_added_tdl integer null  ~r~n" 

//Added By Ken.Guo 12/05/2011.  for Web Approval Dcoument
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='approve_id' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"alter table ctx_am_action_item add approve_id numeric(10) null"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='approve_id' and t.name='ids'	and t.type = 'U')~r~n" + &
"ALTER table ids add approve_id numeric(10) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='approve_id' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add approve_id numeric(10) null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='approve_id' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"Alter table ctx_am_doc_audit add approve_id numeric(10) null ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='tv_type' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"Alter table ctx_user_tv_settings add tv_type varchar(50) null ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='show_data' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"Alter table ctx_user_tv_settings add show_data integer null ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"alter table em_mail_audit alter column alarm_type varchar(100) null"

//added by gavin 2012-01-05
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select 1 from syscolumns  ~r~n" + &
" where id = object_id( 'security_users')  ~r~n" + &
" and name = 'refresh_sertifi_time ' ) ~r~n" + &
"  ALTER TABLE security_users ADD	refresh_sertifi_time int NULL "

is_sql_statements[upperbound(is_sql_statements) + 1] = &  
"if not exists( select 1 from syscolumns  ~r~n" + &
" where id = object_id( 'security_users')  ~r~n" + &
" and name = 'refresh_approve_time ' )  ~r~n" + &
" ALTER TABLE security_users ADD 	refresh_approve_time int NULL "

//Added By Ken.Guo 01/17/2012. 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='view_id' and t.name='ctx_lookup_depend'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_lookup_depend add view_id numeric(10,0) null  " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='screen_id' and t.name='ctx_lookup_depend'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_lookup_depend add screen_id numeric(10,0) null  " 


//added by gavin 2012-02-17
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_user_options'  AND ~t type = 'U')~r~n" + &
"CREATE TABLE security_user_options~r~n" + &
"(~r~n" + &
"user_id varchar(50) not null,~r~n" + &
"option_name varchar(100)  not null,~r~n" + &
"option_value varchar(100) null,~r~n" + &
"last_update datetime null,~r~n" + &
"Primary Key(user_id,option_name)~r~n" + &
"~t)"


of_execute_sqls("of_ver105_release_table1")


Return 1

end function

public function integer of_ver105_release_storeprocedure1 ();//add by jervis 05.13.2011
//change numbers to words - jervis 05.26.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_Num2Let' AND type = 'P') " + &
"    DROP PROCEDURE up_Num2Let"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE Procedure up_Num2Let ~r~n" + &
"	@Numero NUMERIC(20,2) ~r~n" + &
"AS ~r~n" + &
"BEGIN ~r~n" + &
"	DECLARE @lnEntero INT, ~r~n" + &
"	@lcRetorno VARCHAR(512), ~r~n" + &
"	@lnTerna INT, ~r~n" + &
"	@lcMiles VARCHAR(512), ~r~n" + &
"	@lcCadena VARCHAR(512), ~r~n" + &
"	@lnUnidades INT, ~r~n" + &
"	@lnDecenas INT, ~r~n" + &
"	@lnCentenas INT, ~r~n" + &
"	@lnFraccion INT, ~r~n" + &
"	@lnFrac1 varchar(2) ~r~n" + &
"	SELECT @lnEntero = CAST(@Numero AS INT), ~r~n" + &
"	@lnFraccion = (@Numero - @lnEntero) * 100, ~r~n" + &
"	@lnFrac1 = case  ~r~n" + &
"					when len(cast( @lnFraccion as varchar(2))) >1 then cast( @lnFraccion as varchar(2)) ~r~n" + &
"					when len(cast( @lnFraccion as varchar(2))) =1 then '0'+cast( @lnFraccion as varchar(2)) ~r~n" + &
"			   end, ~r~n" + &
"	@lcRetorno = '', ~r~n" + &
"	@lnTerna = 1 ~r~n" + &
"	WHILE @lnEntero > 0 ~r~n" + &
"	BEGIN ~r~n" + &
"	SELECT @lcCadena = '' ~r~n" + &
"	SELECT @lnUnidades = @lnEntero % 10 ~r~n" + &
"	SELECT @lnEntero = CAST(@lnEntero/10 AS INT) ~r~n" + &
"	SELECT @lnDecenas = @lnEntero % 10 ~r~n" + &
"	SELECT @lnEntero = CAST(@lnEntero/10 AS INT) ~r~n" + &
"	SELECT @lnCentenas = @lnEntero % 10 ~r~n" + &
"	SELECT @lnEntero = CAST(@lnEntero/10 AS INT) ~r~n" + &
"	SELECT @lcCadena = ~r~n" + &
"	CASE ~r~n" + &
"	WHEN @lnUnidades = 1 AND @lnTerna = 1 THEN 'Uno ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 1 AND @lnTerna <> 1 THEN 'Un ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 2 THEN 'Dos ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 3 THEN 'Tres ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 4 THEN 'Cuatro ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 5 THEN 'Cinco ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 6 THEN 'Seis ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 7 THEN 'Siete ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 8 THEN 'Ocho ' + @lcCadena ~r~n" + &
"	WHEN @lnUnidades = 9 THEN 'Nueve ' + @lcCadena ~r~n" + &
"	ELSE @lcCadena ~r~n" + &
"	END ~r~n" + &
"	SELECT @lcCadena = ~r~n" + &
"	CASE ~r~n" + &
"	WHEN @lnDecenas = 1 THEN ~r~n" + &
"	CASE @lnUnidades ~r~n" + &
"	WHEN 0 THEN 'Diez ' ~r~n" + &
"	WHEN 1 THEN 'Once ' ~r~n" + &
"	WHEN 2 THEN 'Doce ' ~r~n" + &
"	WHEN 3 THEN 'Trece ' ~r~n" + &
"	WHEN 4 THEN 'Catorce ' ~r~n" + &
"	WHEN 5 THEN 'Quince ' ~r~n" + &
"	ELSE 'Dieci' + @lcCadena ~r~n" + &
"	END ~r~n" + &
"	WHEN @lnDecenas = 2 AND @lnUnidades = 0 THEN 'Veinte ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 2 AND @lnUnidades <> 0 THEN 'Veinti' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 3 AND @lnUnidades = 0 THEN 'Treinta ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 3 AND @lnUnidades <> 0 THEN 'Treinta y ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 4 AND @lnUnidades = 0 THEN 'Cuarenta ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 4 AND @lnUnidades <> 0 THEN 'Cuarenta y ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 5 AND @lnUnidades = 0 THEN 'Cincuenta ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 5 AND @lnUnidades <> 0 THEN 'Cincuenta y ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 6 AND @lnUnidades = 0 THEN 'Sesenta ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 6 AND @lnUnidades <> 0 THEN 'Sesenta y ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 7 AND @lnUnidades = 0 THEN 'Setenta ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 7 AND @lnUnidades <> 0 THEN 'Setenta Y ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 8 AND @lnUnidades = 0 THEN 'Ochenta ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 8 AND @lnUnidades <> 0 THEN 'Ochenta y ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 9 AND @lnUnidades = 0 THEN 'Noventa ' + @lcCadena ~r~n" + &
"	WHEN @lnDecenas = 9 AND @lnUnidades <> 0 THEN 'Noventa y ' + @lcCadena ~r~n" + &
"	ELSE @lcCadena ~r~n" + &
"	END ~r~n" + &
"	SELECT @lcCadena = ~r~n" + &
"	CASE ~r~n" + &
"	WHEN @lnCentenas = 1 AND @lnUnidades = 0 AND @lnDecenas = 0 THEN 'Cien ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 1 AND NOT(@lnUnidades = 0 AND @lnDecenas = 0) THEN 'Ciento ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 2 THEN 'Doscientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 3 THEN 'Trescientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 4 THEN 'Cuatrocientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 5 THEN 'Quinientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 6 THEN 'Seiscientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 7 THEN 'Setecientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 8 THEN 'Ochocientos ' + @lcCadena ~r~n" + &
"	WHEN @lnCentenas = 9 THEN 'Novecientos ' + @lcCadena ~r~n" + &
"	ELSE @lcCadena ~r~n" + &
"	END ~r~n" + &
"	SELECT @lcCadena = ~r~n" + &
"	CASE ~r~n" + &
"	WHEN @lnTerna = 1 THEN @lcCadena ~r~n" + &
"	WHEN @lnTerna = 2 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0) THEN @lcCadena + ' Mil ' ~r~n" + &
"	WHEN @lnTerna = 3 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0) AND ~r~n" + &
"	@lnUnidades = 1 AND @lnDecenas = 0 AND @lnCentenas = 0 THEN @lcCadena + ' Millon ' ~r~n" + &
"	WHEN @lnTerna = 3 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0) AND ~r~n" + &
"	NOT (@lnUnidades = 1 AND @lnDecenas = 0 AND @lnCentenas = 0) THEN @lcCadena + ' Millones ' ~r~n" + &
"	WHEN @lnTerna = 4 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0) THEN @lcCadena + ' Mil Millones ' ~r~n" + &
"	ELSE '' ~r~n" + &
"	END ~r~n" + &
"	SELECT @lcRetorno = @lcCadena + @lcRetorno ~r~n" + &
"	SELECT @lnTerna = @lnTerna + 1 ~r~n" + &
"	END ~r~n" + &
"	IF @lnTerna = 1 ~r~n" + &
"	SELECT @lcRetorno = 'Cero' ~r~n" + &
"	Select upper (RTRIM(@lcRetorno) + ' ' + LTRIM(@lnFrac1) + '/100') ~r~n" + &
"END  ~r~n" 

//Modified By Ken.Guo 2011-06-30 --Add custom_21 ~ custom_date17
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_contract_search' AND type = 'P') " + &
"    DROP PROCEDURE sp_contract_search"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE  PROCEDURE sp_contract_search(  @user_d VARCHAR(10)   )~r~n" + &
" AS    ~r~n" + &
"BEGIN      ~r~n" + &
"SELECT DISTINCT ~r~n" + &
"	ctx_basic_info.app_facility,    ~r~n" + &
"	ctx_products.product_id product_code,     ~r~n" + &
"	code_lookup.code product_name,       ~r~n" + &
"	ctx_basic_info.effective_date,      ~r~n" + &
"	ctx_basic_info.expriation_date,       ~r~n" + &
"	ctx_basic_info.status,     ~r~n" + &
"	ctx_basic_info.group_multi_loc_id,       ~r~n" + &
"	ctx_basic_info.ctx_id,~r~n" + &
" 	ctx_basic_info.master_contract_id,                             ~r~n" + &
"	master_cnt = (SELECT Count(ctx_basic_info1.ctx_id) ~r~n" + &
"			FROM ctx_basic_info ctx_basic_info1 ~r~n" + &
"			WHERE ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id and ctx_basic_info.is_template = 0 ),  ~r~n" + &
"	ctx_basic_info.category,        ~r~n" + &
"	ctx_basic_info.facility_id,     ~r~n" + &
"	ctx_basic_info.contract_type,       ~r~n" + &
"	code_lookup1.code product_type, ~r~n" + &
"	ctx_basic_info.reimbursment_menth,       ~r~n" + &
"	ctx_basic_info.file_location,    ~r~n" + &
"	ctx_basic_info.review_date,       ~r~n" + &
"	ctx_basic_info.review_by,     ~r~n" + &
"	ctx_basic_info.term_date,       ~r~n" + &
"	ctx_basic_info.term_reason,     ~r~n" + &
"	ctx_basic_info.last_revis_date,       ~r~n" + &
"	ctx_basic_info.other_date_1,       ~r~n" + &
"	ctx_basic_info.other_date_2,     ~r~n" + &
"	ctx_basic_info.oc_signed_by,       ~r~n" + &
"	ctx_basic_info.oc_title,      ~r~n" + &
"	ctx_basic_info.oc_department,       ~r~n" + &
"	ctx_basic_info.oc_legal_rep,       ~r~n" + &
"	ctx_basic_info.cc_signed_by,     ~r~n" + &
"	ctx_basic_info.cc_title,       ~r~n" + &
"	ctx_basic_info.cc_department,       ~r~n" + &
"	ctx_basic_info.cc_legal_rep,     ~r~n" + &
"	ctx_basic_info.notes,       ~r~n" + &
"	ctx_basic_info.keyword,       ~r~n" + &
"	ctx_basic_info.dvision,   ~r~n" + &
"	ctx_basic_info.custom_1,       ~r~n" + &
"	ctx_basic_info.custom_2,       ~r~n" + &
"	ctx_basic_info.custom_3,       ~r~n" + &
"	ctx_basic_info.custom_4,       ~r~n" + &
"	ctx_basic_info.custom_5,     ~r~n" + &
"	ctx_basic_info.custom_6,       ~r~n" + &
"	ctx_basic_info.custom_7,       ~r~n" + &
"	ctx_basic_info.custom_8, ~r~n" + &
"	ctx_basic_info.custom_9,       ~r~n" + &
"	ctx_basic_info.custom_10,    ~r~n" + &
"	ctx_basic_info.group_id,~r~n" + &
"	ctx_basic_info.revision_reason,       ~r~n" + &
"	ctx_basic_info.record_id ,   ~r~n" + &
"	owner = upper((SELECT top 1 ctx_contacts.user_d       ~r~n" + &
"			FROM ctx_contacts,ctx_contract_contacts       ~r~n" + &
"			WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id ) ~r~n" + &
"			AND (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			  AND ( ctx_contract_contacts.owner = 'Y' ) ~r~n" + &
"			  AND ( ctx_contract_contacts.ic_area = 'I' ) )),   ~r~n" + &
"	contracted_entity = (SELECT top 1 group_multi_loc.rec_id              ~r~n" + &
"	  			FROM ctx_loc,                  group_multi_loc              ~r~n" + &
"				WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id) ~r~n" + &
"				AND ( ctx_loc.ctx_id = ctx_basic_info.ctx_id) ~r~n" + &
"				AND ctx_loc.loc_id = 0),    ~r~n" + &
"	app_facility.facility_name facility_name,   ~r~n" + &
"	ctx_basic_info.custom_date1,      ~r~n" + &
"	ctx_basic_info.custom_date2,      ~r~n" + &
"	ctx_basic_info.custom_date3,      ~r~n" + &
"	ctx_basic_info.custom_date4,  ~r~n" + &
"	ctx_basic_info.custom_date5,      ~r~n" + &
"	ctx_basic_info.inserted_by_user,    ~r~n" + &
"	ctx_basic_info.inserted_at_date_time,      ~r~n" + &
"	ctx_basic_info.updated_by_user,   ~r~n" + &
"	ctx_basic_info.~r~n" + &
"	updated_at_date_time,      ~r~n" + &
"	ctx_basic_info.custom_11,      ~r~n" + &
"	ctx_basic_info.custom_12,   ~r~n" + &
"	ctx_basic_info.custom_13,      ~r~n" + &
"	ctx_basic_info.custom_14,      ~r~n" + &
"	ctx_basic_info.custom_15,  ~r~n" + &
"	ctx_basic_info.custom_16,      ~r~n" + &
"	ctx_basic_info.custom_17,      ~r~n" + &
"	ctx_basic_info.custom_18,      ~r~n" + &
"	ctx_basic_info.custom_19,      ~r~n" + &
"	ctx_basic_info.custom_20,     ~r~n" + &
"	ctx_basic_info.custom_date6,      ~r~n" + &
"	ctx_basic_info.custom_date7,      ~r~n" + &
"	ctx_basic_info.custom_date8,  ~r~n" + &
"	ctx_basic_info.custom_date9,      ~r~n" + &
"	ctx_basic_info.custom_date10,      ~r~n" + &
"	ctx_basic_info.custom_date11,      ~r~n" + &
"	ctx_basic_info.custom_date12,      ~r~n" + &
"	ctx_basic_info.custom_date13,  ~r~n" + &
"	ctx_basic_info.custom_date14,      ~r~n" + &
"	ctx_basic_info.custom_date15,      ~r~n" + &
"	ctx_basic_info.custom_n1, ~r~n" + &
"	ctx_basic_info.custom_n2,      ~r~n" + &
"	ctx_basic_info.custom_n3,      ~r~n" + &
"	ctx_basic_info.custom_n4,      ~r~n" + &
"	ctx_basic_info.custom_n5,      ~r~n" + &
"	ctx_basic_info.custom_n6,  ~r~n" + &
"	ctx_basic_info.custom_n7,      ~r~n" + &
"	ctx_basic_info.custom_n8,      ~r~n" + &
"	ctx_basic_info.custom_n9,   ~r~n" + &
"	ctx_basic_info.custom_n10,      ~r~n" + &
"	ctx_basic_info.custom_n11,      ~r~n" + &
"	ctx_basic_info.custom_n12,      ~r~n" + &
"	ctx_basic_info.custom_n13,      ~r~n" + &
"	ctx_basic_info.custom_n14,      ~r~n" + &
"	ctx_basic_info.custom_n15,      ~r~n" + &
"	ctx_basic_info.custom_n16,      ~r~n" + &
"	ctx_basic_info.custom_n17,      ~r~n" + &
"	ctx_basic_info.custom_n18,      ~r~n" + &
"	ctx_basic_info.custom_n19,      ~r~n" + &
"	ctx_basic_info.custom_n20,      ~r~n" + &
"	ctx_basic_info.custom_n21,      ~r~n" + &
"	ctx_basic_info.custom_n22,      ~r~n" + &
"	ctx_basic_info.custom_n23,      ~r~n" + &
"	ctx_basic_info.custom_n24,      ~r~n" + &
"	ctx_basic_info.custom_n25,      ~r~n" + &
"	ctx_basic_info.version_number,      ~r~n" + &
"	ctx_basic_info.version_date,      ~r~n" + &
"	ctx_basic_info.master_contract_name ,~r~n" + &
"	ctx_basic_info.fee_sched_calc_field_1 ,~r~n" + &
"	ctx_basic_info.fee_sched_calc_field_2 ,~r~n" + &
"	ctx_basic_info.fee_sched_calc_field_3 ,~r~n" + &
"	access = AA.access   ,~r~n" + &
"	code_lookup2.code status_name,~r~n" + &
"	code_lookup3.code category_name,~r~n" + &
"	code_lookup4.code contract_type_name,~r~n" + &
"	code_lookup5.code dvision_name ,~r~n" + &
"	unread_email_cnt = 0, ~r~n" + &
"	ctx_basic_info.custom_percent_1,~r~n" + &
"	ctx_basic_info.custom_percent_2,~r~n" + &
"	ctx_basic_info.custom_percent_3,~r~n" + &
"	ctx_basic_info.custom_percent_4,~r~n" + &
"	ctx_basic_info.custom_percent_5,~r~n" + &
"	ctx_basic_info.custom_percent_6,~r~n" + &
"	ctx_basic_info.custom_percent_7,~r~n" + &
"	ctx_basic_info.custom_percent_8,~r~n" + &
"	ctx_basic_info.custom_percent_9,~r~n" + &
"	ctx_basic_info.custom_percent_10,~r~n" + &
"	ctx_basic_info.work_flow_n1,~r~n" + &
"	ctx_basic_info.work_flow_n2,~r~n" + &
"	ctx_basic_info.work_flow_n3,~r~n" + &
"	ctx_basic_info.work_flow_n4,~r~n" + &
"	ctx_basic_info.work_flow_n5,~r~n" + &
"	ctx_basic_info.custom_status1,~r~n" + &
"	ctx_basic_info.custom_status2,~r~n" + &
"	ctx_basic_info.custom_21,~r~n" + &
"	ctx_basic_info.custom_22,~r~n" + &
"	ctx_basic_info.custom_n26,~r~n" + &
"	ctx_basic_info.custom_n27,~r~n" + &
"	ctx_basic_info.custom_date16,~r~n" + &
"	ctx_basic_info.custom_date17,~r~n" + &
"	app_facility.city,~r~n" + &
"	app_facility.state,~r~n" + &
"	app_facility.country,~r~n" + &
"	app_facility.zip,~r~n" + &
"	app_facility.street~r~n" + &
"FROM  ctx_basic_info  ~r~n" + &
"LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id  ~r~n" + &
"LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code  ~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code~r~n" + &
"~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup2 ON ctx_basic_info.status = code_lookup2.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup3 ON ctx_basic_info.category = code_lookup3.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup4 ON ctx_basic_info.contract_type = code_lookup4.lookup_code~r~n" + &
"LEFT OUTER JOIN code_lookup code_lookup5 ON ctx_basic_info.dvision = code_lookup5.lookup_code~r~n" + &
"~r~n" + &
"LEFT OUTER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id, ~r~n" + &
"(~r~n" + &
"SELECT DISTINCT TOP 100 Percent  ctx_id = ctx_contract_contacts.ctx_id, user_id = ctx_contacts.user_d, access = (CASE ctx_contract_contacts.owner WHEN 'Y' THEN 'F' ELSE ctx_contract_contacts.access END)~r~n" + &
"FROM ctx_contract_contacts Left Outer Join~r~n" + &
"(~r~n" + &
"Select ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d ~r~n" + &
"From ctx_contract_contacts ctx_contract_contacts1 ,ctx_contacts ctx_contacts1~r~n" + &
"Where ctx_contract_contacts1.contact_id = ctx_contacts1.contact_id And ctx_contacts1.user_d = @user_d~r~n" + &
"Group By ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d~r~n" + &
"Having Count(ctx_contract_contacts1.ctx_id) > 1~r~n" + &
") ccc~r~n" + &
"On ctx_contract_contacts.ctx_id = ccc.ctx_id~r~n" + &
",ctx_contacts~r~n" + &
"WHERE ctx_contacts.user_d = @user_d~r~n" + &
"	AND (ccc.ctx_id is null or ctx_contract_contacts.access = 'F' )~r~n" + &
"	AND ctx_contract_contacts.contact_id = ctx_contacts.contact_id ~r~n" + &
"	AND ( ctx_contract_contacts.access IN ('F','R') ~r~n" + &
"	OR ctx_contract_contacts.owner = 'Y' )~r~n" + &
"	AND ctx_contract_contacts.ic_area = 'I'~r~n" + &
"~r~n" + &
"UNION ~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_group_access.ctx_id,user_id = security_group_users.user_id, access =  ctx_group_access.access~r~n" + &
"FROM ~r~n" + &
"ctx_group_access ,~r~n" + &
"security_group_users,~r~n" + &
"icred_settings~r~n" + &
"WHERE	security_group_users.user_id = @user_d~r~n" + &
"	AND ctx_group_access.group_id = security_group_users.group_id~r~n" + &
"	AND ctx_group_access.access = ~r~n" + &
"		(Case When Exists (Select u1.user_id,a1.ctx_id,a1.access ~r~n" + &
"		From ctx_group_access a1,security_group_users u1~r~n" + &
"		Where a1.group_id = u1.group_id ~r~n" + &
"		And a1.ctx_id = ctx_group_access.ctx_id~r~n" + &
"		And u1.user_id = security_group_users.user_id	~r~n" + &
"		And a1.access = 'F') Then 'F' Else 'R' End) ~r~n" + &
"	AND icred_settings.group_access = 1~r~n" + &
"	AND ctx_group_access.access in ('F','R')~r~n" + &
"	AND NOT EXISTS	(SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_group_users.user_id )~r~n" + &
"			AND ( ctx_contract_contacts.ic_area = 'I' )~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_group_access.ctx_id )~r~n" + &
"			)~r~n" + &
"~r~n" + &
"UNION~r~n" + &
"~r~n" + &
"SELECT DISTINCT TOP 100 Percent ctx_id = ctx_basic_info.ctx_id, user_id = security_users.user_id, access = (CASE ctx_acp_contract_management_right.rights WHEN '11' THEN 'F' WHEN '12' THEN 'R' ELSE 'N' END)~r~n" + &
"FROM ctx_acp_contract_management_right, security_users, ctx_basic_info~r~n" + &
"WHERE security_users.user_id = @user_d~r~n" + &
"	AND ctx_acp_contract_management_right.types = 1~r~n" + &
"	AND ctx_acp_contract_management_right.role_id = security_users.role_id~r~n" + &
"	AND ctx_acp_contract_management_right.category = ctx_basic_info.category~r~n" + &
"  And ctx_basic_info.is_template = 0 ~r~n" + &
"	AND ctx_acp_contract_management_right.rights In ('11','12')~r~n" + &
"	AND NOT EXISTS (SELECT 1 FROM ctx_contract_contacts, ctx_contacts  ~r~n" + &
"			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id ) ~r~n" + &
"			AND ( ctx_contacts.user_d = security_users.user_id AND ctx_contract_contacts.ic_area = 'I') ~r~n" + &
"			AND ( ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + &
"			UNION~r~n" + &
"			SELECT 1 FROM ctx_group_access,security_group_users,icred_settings~r~n" + &
"			WHERE icred_settings.group_access = 1~r~n" + &
"			AND (ctx_group_access.group_id = security_group_users.group_id )~r~n" + &
"			AND ( security_group_users.user_id = security_users.user_id )	~r~n" + &
"			AND ( ctx_group_access.ctx_id = ctx_basic_info.ctx_id )~r~n" + &
"			)~r~n" + &
") AA ~r~n" + &
"WHERE ctx_basic_info.ctx_id = AA.ctx_id and ctx_basic_info.is_template = 0 ~r~n" + &
"ORDER BY ctx_basic_info.master_contract_id Asc, ctx_basic_info.ctx_id  Asc    ~r~n" + &
"END"


is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_get_cachelist' AND type = 'P') " + &
"    DROP PROCEDURE up_get_cachelist"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_get_cachelist~r~n" + &
"as~r~n" + &
	"SELECT TOP 8000 screen_id = IDENTITY(int, 1, 1) INTO # FROM syscolumns a, syscolumns b ~r~n" + &
	"SELECT distinct  lookup_list= SUBSTRING(A.[lookup_list], B.screen_id, CHARINDEX(',', A.[lookup_list] + ',', B.screen_id) - B.screen_id)~r~n" + &
	"FROM ctx_screen A, # B ~r~n" + &
	"WHERE SUBSTRING(',' + A.[lookup_list], B.screen_id, 1) = ',' and lookup_list <> '?' and lookup_list is not null and A.Screen_id <= 2 ~r~n" + &
	"order by lookup_list~r~n" + &
	"DROP TABLE #"




of_execute_sqls("of_ver105_release_storeprocedure1")

Return 1
end function

public function integer of_ver105_updates ();//of_ver100_release_dropfulltext1()	

of_ver105_release_table1()
of_ver105_release_view1()
of_ver105_release_storeprocedure1()
of_ver105_release_trigger1() //add by jervis 07.08.2011
	
//if of_get_app_set()=1 then
//	of_ver100_release_createfulltext1() 
//end if	

Return 1

end function

public function integer of_ver105_release_trigger1 ();//add by jervis -- 07.08.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_custom_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_custom_update on ctx_custom  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date1' ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date2' ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date3' ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date4' ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date5' ~r~n" + &
"if update(custom_date6) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date6 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date6' ~r~n" + &
"if update(custom_date7) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date7 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date7' ~r~n" + &
"if update(custom_date8) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date8 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date8' ~r~n" + &
"if update(custom_date9) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date9 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date9' ~r~n" + &
"if update(custom_date10) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date10 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date10' ~r~n" + &
"if update(custom_date11) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date11 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date11' ~r~n" + &
"if update(custom_date12) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date12 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date12' ~r~n" + &
"if update(custom_date13) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date13 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date13' ~r~n" + &
"if update(custom_date14) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date14 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date14' ~r~n" + &
"if update(custom_date15) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date15 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_custom' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date15' ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_multi_hdr_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_custom_multi_hdr_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_custom_multi_hdr_update on ctx_custom_multi_hdr  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date6) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date6 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date6' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date7) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date7 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date7' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date8) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date8 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date8' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date9) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date9 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date9' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date10) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date10 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date10' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_multi_detail_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_custom_multi_detail_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_custom_multi_detail_update on ctx_custom_multi_detail ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" 


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_action_items_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_action_items_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_action_items_update on ctx_action_items ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(due_date) ~r~n" + &
"	update	ctx_ai_notification set ctx_ai_notification.alm_date = inserted.due_date from inserted  ~r~n" + &
"	where	ctx_ai_notification.ctx_id = inserted.ctx_id and ctx_ai_notification.alm_table = 'ctx_action_item' and  			 ~r~n" + &
"			ctx_ai_notification.alm_column = 'due_date' and ctx_ai_notification.ctx_action_item_id  = inserted.ctx_action_item_id ~r~n" + &
"if update(action_date) ~r~n" + &
"	update	ctx_ai_notification set ctx_ai_notification.alm_date = inserted.action_date from inserted  ~r~n" + &
"	where	ctx_ai_notification.ctx_id = inserted.ctx_id and ctx_ai_notification.alm_table = 'ctx_action_item' and  			 ~r~n" + &
"			ctx_ai_notification.alm_column = 'action_date' and ctx_ai_notification.ctx_action_item_id  = inserted.ctx_action_item_id ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_am_action_item_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_am_action_item_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_am_action_item_update on ctx_am_action_item ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(due_date) ~r~n" + &
"	update	ctx_am_ai_notification set ctx_am_ai_notification.alm_date = inserted.due_date from inserted  ~r~n" + &
"	where	ctx_am_ai_notification.doc_id = inserted.doc_id and ctx_am_ai_notification.alm_table = 'ctx_am_action_item' and  			 ~r~n" + &
"			ctx_am_ai_notification.alm_column = 'due_date' and ctx_am_ai_notification.seq_id  = inserted.seq_id ~r~n" + &
"if update(status_date) ~r~n" + &
"	update	ctx_am_ai_notification set ctx_am_ai_notification.alm_date = inserted.status_date from inserted  ~r~n" + &
"	where	ctx_am_ai_notification.doc_id = inserted.doc_id and ctx_am_ai_notification.alm_table = 'ctx_am_action_item' and  			 ~r~n" + &
"			ctx_am_ai_notification.alm_column = 'status_date' and ctx_am_ai_notification.seq_id  = inserted.seq_id ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_basic_info_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_basic_info_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_basic_info_update on ctx_basic_info  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date1' ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date2' ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date3' ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date4' ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date5' ~r~n" + &
"if update(custom_date6) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date6 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date6' ~r~n" + &
"if update(custom_date7) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date7 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date7' ~r~n" + &
"if update(custom_date8) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date8 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date8' ~r~n" + &
"if update(custom_date9) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date9 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date9' ~r~n" + &
"if update(custom_date10) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date10 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date10' ~r~n" + &
"if update(custom_date11) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date11 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date11' ~r~n" + &
"if update(custom_date12) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date12 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date12' ~r~n" + &
"if update(custom_date13) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date13 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date13' ~r~n" + &
"if update(custom_date14) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date14 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date14' ~r~n" + &
"if update(custom_date15) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date15 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date15' ~r~n" + &
"if update(custom_date16) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date16 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date16' ~r~n" + &
"if update(custom_date17) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.custom_date17 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'custom_date17' ~r~n" + &
"if update(effective_date) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.effective_date from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'effective_date' ~r~n" + &
"if update(expriation_date) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.expriation_date from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'expriation_date' ~r~n" + &
"if update(review_date) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.review_date from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'review_date' ~r~n" + &
"if update(term_date) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.term_date from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'term_date' ~r~n" + &
"if update(other_date_1) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.other_date_1 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'other_date_1' ~r~n" + &
"if update(other_date_2) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.other_date_2 from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'other_date_2' ~r~n" + &
"if update(version_date) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.version_date from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'version_date' ~r~n" + &
"if update(last_revis_date) ~r~n" + &
"	update	ctx_notification set ctx_notification.alm_date = inserted.last_revis_date from inserted  ~r~n" + &
"	where	ctx_notification.ctx_id = inserted.ctx_id and ctx_notification.alm_table = 'ctx_basic_info' and   ~r~n" + &
"			ctx_notification.alm_column = 'last_revis_date' ~r~n" 

//add fee_sched_nm - jervis 08.03.2011
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_fee_sched_nm_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_fee_sched_nm_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_fee_sched_nm_update on ctx_fee_sched_nm  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n"




of_execute_sqls("of_ver105_release_trigger1")

Return 1

end function

public function integer of_ver110_release_table1 ();//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_user_options'  AND ~t type = 'U')~r~n" + &
//"CREATE TABLE security_user_options~r~n" + &
//"(~r~n" + &
//"user_id varchar(50) not null,~r~n" + &
//"option_name varchar(100)  not null,~r~n" + &
//"option_value varchar(100) null,~r~n" + &
//"last_update datetime null,~r~n" + &
//"Primary Key(user_id,option_name)~r~n" + &
//"~t)"


//added by gavins 20120302   required grid
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t where ~r~n" + &
"c.id = t.id and c.name = 'screen_style' and t.name = 'ctx_screen' and t.type = 'U' )~r~n" + &
"alter table ctx_screen add screen_style varchar(1)~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t where ~r~n" + &
"c.id = t.id and c.name = 'grid_sql' and t.name = 'ctx_screen' and t.type = 'U' )~r~n" + &
"alter table ctx_screen add   grid_sql text ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t where ~r~n" + &
"c.id = t.id and c.name = 'grid_opsql' and t.name = 'ctx_screen' and t.type = 'U' )~r~n" + &
"alter table ctx_screen add  grid_opsql text~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t where ~r~n" + &
"c.id = t.id and c.name = 'grid_dataobject' and t.name = 'ctx_screen' and t.type = 'U' )~r~n" + &
"alter table ctx_screen add  grid_dataobject varchar(200)~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t where ~r~n" + &
"c.id = t.id and c.name = 'grid_modify' and t.name = 'ctx_screen' and t.type = 'U' )~r~n" + &
"alter table ctx_screen add  grid_modify varchar(1)~r~n" 

//Added By Mark Lee 04/23/12  added it for record logs
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" IF Not EXISTS(SELECT 1  FROM  sysobjects WHERE  name = 'bidq_log_info'  AND  type = 'U')~r~n" + &
" Create Table bidq_log_info ~r~n" + &
" ( ~r~n" + &
" 	id  int IDENTITY(1,1) NOT NULL, ~r~n" + &
"	style  char(1) NOT NULL,~r~n" + &
"	ctx_bidq int  NULL,~r~n" + &
"	doc_id int NULL,~r~n" + &
"	doc_name varchar(200)  NULL,~r~n" + &
"	paths varchar(200) NULL,~r~n" + &
"	errmsg varchar(2000) NULL,~r~n" + &
"	pass_fail varchar(10) NULL,~r~n" + &
"	user_id varchar(50)  NULL,~r~n" + &
"	log_date datetime  NULL,~r~n" + &
"	ctx_id int NULL,~r~n" + &
"	Primary Key(id) ~r~n" + &
"	) "

//Added By Ken.Guo 03/20/2012. Fix Date Alarm Template's Bug
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_create' and t.name='ctx_notification_templates'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_notification_templates add alm_create varchar(2000) null  "



//Added By Ken.Guo 03/20/2012.  Auto hide window when IE window is min or current IE tab is not ContractLogix
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='hide_inactive_window' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add hide_inactive_window integer null  "

//added by gavins 20120322 ctx_screen_bak add column
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select TOP 1 1 from  sysobjects where  name='ctx_screen_bak'     and   type = 'U') ~r~n" + &
" CREATE TABLE ctx_screen_bak( data_view_id int NOT NULL, screen_id int NOT NULL, dw_sql text  NULL, ~r~n" + &
" create_date datetime NULL, modify_date datetime NULL, backupdate datetime NOT NULL default getdate(), ~r~n" + &
" seq_no int NOT NULL,  version varchar(10)  NULL,  grid_sql text  NULL, screen_style varchar(1) NULL )  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'version' and t.name = 'ctx_screen_bak' and t.type = 'U' ) ~r~n" + &
" alter table ctx_screen_bak add version varchar(10)  "
 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  & 
"  if not exists( select 1 from syscolumns c , sysobjects t where  c.id = t.id and c.name = 'grid_sql' and t.name = 'ctx_screen_bak' and t.type = 'U' )~r~n" + &
" alter table ctx_screen_bak add grid_sql text  "

//added by gavins 20120329 ctx_screen_bak add column	 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  & 
"  if not exists( select 1 from syscolumns c , sysobjects t where  c.id = t.id and c.name = 'screen_style' and t.name = 'ctx_screen_bak' and t.type = 'U' )~r~n" + &
" alter table ctx_screen_bak add screen_style varchar(1)  "
	 	 
//Added By Mark Lee 04/23/12 Fixed APB Bug 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  & 
"   If not exists( select 1 from sysobjects t where id = (select cdefault from syscolumns where id = object_id('export_fields') and name = 'default_value'))~r~n" + &
"   Begin~r~n" + &
"      alter table export_fields add default '' for default_value~r~n" + &
"   End ~r~n" 

//Modified By Mark Lee 04/25/12 move from object of n_cst_globaldata in event of of_retrieve
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"   If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'web_crawl' and t.name = 'icred_settings' and t.type = 'U')~r~n" + &
"   Begin~r~n" + &
" 		Alter table icred_settings add web_crawl integer null~r~n" + &
"   End"

//Modified By Mark Lee 04/25/12 move from object of n_cst_globaldata in event of of_retrieve
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"   If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'downloadurl' and t.name = 'icred_settings' and t.type = 'U')~r~n" + &
"   Begin~r~n" + &
"		Alter table icred_settings add downloadurl varchar(255) null~r~n" + &
"   End "

//Added By Mark Lee 05/09/12	Email Subject was 'BUG: Using Templates - Dynamically Add User'
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_owner' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_owner bit default 0~r~n~r~n" + &
"End"

//Added By Mark Lee 05/09/12	Email Subject was 'BUG: Using Templates - Dynamically Add User'
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_default_email' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_default_email bit default 0~r~n~r~n" + &
"End"

//Added By Mark Lee 05/10/12 add copy data (Custom Data 2) function for contract module
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_custom_data2' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_custom_data2 bit NULL~r~n" + &
"End"
//Added By Mark Lee 05/10/12 add copy data (Custom multi) function for contract module
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_custom_multi' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_custom_multi bit NULL~r~n" + &
"End"

//added by gavins 20120521 add ctx_screen_original
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists (select  1 from  sysobjects where  name='ctx_screen_original'     and   type = 'U') ~r~n" + &
"create table ctx_screen_original ( data_view_id int , screen_id int ~r~n" + &
", dw_sql text, grid_sql text , pre_modifydate datetime, modifydate datetime,  primary key(  ~r~n" + &
"data_view_id, screen_id )) ~r~n" 

//added by gavins 20120528  
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"    if not exists( select 1 from syscolumns c , sysobjects t where  ~r~n" + &
"c.id = t.id and c.name = 'createtime' and t.name = 'conv_view_pic' and t.type = 'U' ) ~r~n" + &
"  alter table conv_view_pic add   createtime datetime default getdate( ) "

//Added By Ken.Guo 05/29/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='user_id' and t.name='ctx_screen_bak'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_screen_bak add user_id varchar(50) null  " 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='notes' and t.name='ctx_screen_bak'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_screen_bak add notes varchar(500) null  "

//Added By Ken.Guo 05/29/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='id_forcatalog' and t.name='ctx_custom_multi_hdr'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_custom_multi_hdr add id_forcatalog numeric(10,0) identity   "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='id_forcatalog' and t.name='ctx_custom_multi_detail'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_custom_multi_detail add id_forcatalog numeric(10,0) identity   "

//Added By Ken.Guo 07/05/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='checkoutforapproval' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add checkoutforapproval integer null  "

of_execute_sqls("of_ver110_release_table1")


Return 1
end function

public function integer of_ver110_release_view1 ();//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"CREATE VIEW v_ctx_custom2 ~r~n" + &
//"AS ~r~n" + &
//"SELECT     ctx_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_11, custom_12,  ~r~n" + &
//"                      custom_13, custom_14, custom_15, custom_16, custom_17, custom_18, custom_19, custom_20, custom_date1, custom_date2, custom_date3,  ~r~n" + &
//"                      custom_date4, custom_date5, custom_date6, custom_date7, custom_date8, custom_date9, custom_date10, custom_date11, custom_date12,  ~r~n" + &
//"                      custom_date13, custom_date14, custom_date15, custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7, custom_n8,  ~r~n" + &
//"                      custom_n9, custom_n10, custom_n11, custom_n12, custom_n13, custom_n14, custom_n15, custom_n16, custom_n17, custom_n18, custom_n19,  ~r~n" + &
//"                      custom_n20, custom_n21, custom_n22, custom_n23, custom_n24, custom_n25, custom_21, custom_22, custom_notes_1, custom_notes_2,  ~r~n" + &
//"                      custom_notes_3, custom_notes_4, custom_notes_5, custom_money_1, custom_money_2, custom_money_3, custom_percent_1, custom_percent_2,  ~r~n" + &
//"                      custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_8, custom_percent_9,  ~r~n" + &
//"                      custom_percent_10 ~r~n" + &
//"FROM         ctx_custom ~r~n" 





of_execute_sqls("of_ver110_release_view1")

Return 1

end function

public function integer of_ver110_release_storeprocedure1 ();
//Add SQL Here
//added by gavins 20120227
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_contract_search' AND type = 'P') " + &
"    DROP PROCEDURE sp_contract_search"

//added by gavins 20120227
//Modified By Ken.Guo 06/14/2012. Added Has_docs field.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" CREATE  PROCEDURE [dbo].[sp_contract_search](  @user_d VARCHAR(10)   ) ~r~n" + & 
"  AS     ~r~n" +  & 
" BEGIN       ~r~n" + & 
" SELECT DISTINCT  ~r~n" + & 
" 	ctx_basic_info.app_facility,     ~r~n" + & 
" 	ctx_products.product_id product_code,      ~r~n" + & 
" 	code_lookup.code product_name,        ~r~n" + & 
" 	ctx_basic_info.effective_date,       ~r~n" + & 
" 	ctx_basic_info.expriation_date,        ~r~n" + & 
" 	ctx_basic_info.status,      ~r~n" + & 
" 	ctx_basic_info.group_multi_loc_id,        ~r~n" + & 
" 	ctx_basic_info.ctx_id, ~r~n" + & 
"  	ctx_basic_info.master_contract_id,                              ~r~n" + & 
" 	master_cnt = (SELECT Count(ctx_basic_info1.ctx_id)  ~r~n" + & 
" 			FROM ctx_basic_info ctx_basic_info1  ~r~n" + & 
" 			WHERE ctx_basic_info.ctx_id = ctx_basic_info1.master_contract_id and ctx_basic_info.is_template = 0 ),   ~r~n" + & 
" 	ctx_basic_info.category,         ~r~n" + & 
" 	ctx_basic_info.facility_id,      ~r~n" + & 
" 	ctx_basic_info.contract_type,        ~r~n" + & 
" 	code_lookup1.code product_type,  ~r~n" + & 
" 	ctx_basic_info.reimbursment_menth,        ~r~n" + & 
" 	ctx_basic_info.file_location,     ~r~n" + & 
" 	ctx_basic_info.review_date,        ~r~n" + & 
" 	ctx_basic_info.review_by,      ~r~n" + & 
" 	ctx_basic_info.term_date,        ~r~n" + & 
" 	ctx_basic_info.term_reason,      ~r~n" + & 
" 	ctx_basic_info.last_revis_date,        ~r~n" + & 
" 	ctx_basic_info.other_date_1,        ~r~n" + & 
" 	ctx_basic_info.other_date_2,      ~r~n" + & 
" 	ctx_basic_info.oc_signed_by,        ~r~n" + & 
" 	ctx_basic_info.oc_title,       ~r~n" + & 
" 	ctx_basic_info.oc_department,        ~r~n" + & 
" 	ctx_basic_info.oc_legal_rep,        ~r~n" + & 
" 	ctx_basic_info.cc_signed_by,      ~r~n" + & 
" 	ctx_basic_info.cc_title,        ~r~n" + & 
" 	ctx_basic_info.cc_department,        ~r~n" + & 
" 	ctx_basic_info.cc_legal_rep,      ~r~n" + & 
" 	ctx_basic_info.notes,        ~r~n" + & 
" 	ctx_basic_info.keyword,        ~r~n" + & 
" 	ctx_basic_info.dvision,    ~r~n" + & 
" 	ctx_basic_info.custom_1,        ~r~n" + & 
" 	ctx_basic_info.custom_2,        ~r~n" + & 
" 	ctx_basic_info.custom_3,        ~r~n" + & 
" 	ctx_basic_info.custom_4,        ~r~n" + & 
" 	ctx_basic_info.custom_5,      ~r~n" + & 
" 	ctx_basic_info.custom_6,        ~r~n" + & 
" 	ctx_basic_info.custom_7,        ~r~n" + & 
" 	ctx_basic_info.custom_8,  ~r~n" + & 
" 	ctx_basic_info.custom_9,        ~r~n" + & 
" 	ctx_basic_info.custom_10,     ~r~n" + & 
" 	ctx_basic_info.group_id, ~r~n" + & 
" 	ctx_basic_info.revision_reason,        ~r~n" + & 
" 	ctx_basic_info.record_id ,    ~r~n" + & 
" 	owner = upper((SELECT top 1 ctx_contacts.user_d        ~r~n" + & 
" 			FROM ctx_contacts,ctx_contract_contacts        ~r~n" + & 
" 			WHERE (ctx_contract_contacts.contact_id = ctx_contacts.contact_id )  ~r~n" + & 
" 			AND (ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id )  ~r~n" + & 
" 			  AND ( ctx_contract_contacts.owner = 'Y' )  ~r~n" + & 
" 			  AND ( ctx_contract_contacts.ic_area = 'I' ) )),    ~r~n" + & 
" 	contracted_entity = (SELECT top 1 group_multi_loc.rec_id               ~r~n" + & 
" 	  			FROM ctx_loc,                  group_multi_loc               ~r~n" + & 
" 				WHERE ( ctx_loc.parent_comp_id = group_multi_loc.rec_id)  ~r~n" + & 
" 				AND ( ctx_loc.ctx_id = ctx_basic_info.ctx_id)  ~r~n" + & 
" 				AND ctx_loc.loc_id = 0),     ~r~n" + & 
" 	app_facility.facility_name facility_name,    ~r~n" + & 
" 	ctx_basic_info.custom_date1,       ~r~n" + & 
" 	ctx_basic_info.custom_date2,       ~r~n" + & 
" 	ctx_basic_info.custom_date3,       ~r~n" + & 
" 	ctx_basic_info.custom_date4,   ~r~n" + & 
" 	ctx_basic_info.custom_date5,       ~r~n" + & 
" 	ctx_basic_info.inserted_by_user,     ~r~n" + & 
" 	ctx_basic_info.inserted_at_date_time,       ~r~n" + & 
" 	ctx_basic_info.updated_by_user,    ~r~n" + & 
" 	ctx_basic_info. ~r~n" + & 
" 	updated_at_date_time,       ~r~n" + & 
" 	ctx_basic_info.custom_11,       ~r~n" + & 
" 	ctx_basic_info.custom_12,    ~r~n" + & 
" 	ctx_basic_info.custom_13,       ~r~n" + & 
" 	ctx_basic_info.custom_14,       ~r~n" + & 
" 	ctx_basic_info.custom_15,   ~r~n" + & 
" 	ctx_basic_info.custom_16,       ~r~n" + & 
" 	ctx_basic_info.custom_17,       ~r~n" + & 
" 	ctx_basic_info.custom_18,       ~r~n" + & 
" 	ctx_basic_info.custom_19,       ~r~n" + & 
" 	ctx_basic_info.custom_20,      ~r~n" + & 
" 	ctx_basic_info.custom_date6,       ~r~n" + & 
" 	ctx_basic_info.custom_date7,       ~r~n" + & 
" 	ctx_basic_info.custom_date8,   ~r~n" + & 
" 	ctx_basic_info.custom_date9,       ~r~n" + & 
" 	ctx_basic_info.custom_date10,       ~r~n" + & 
" 	ctx_basic_info.custom_date11,       ~r~n" + & 
" 	ctx_basic_info.custom_date12,       ~r~n" + & 
" 	ctx_basic_info.custom_date13,   ~r~n" + & 
" 	ctx_basic_info.custom_date14,       ~r~n" + & 
" 	ctx_basic_info.custom_date15,       ~r~n" + & 
" 	ctx_basic_info.custom_n1,  ~r~n" + & 
" 	ctx_basic_info.custom_n2,       ~r~n" + & 
" 	ctx_basic_info.custom_n3,       ~r~n" + & 
" 	ctx_basic_info.custom_n4,       ~r~n" + & 
" 	ctx_basic_info.custom_n5,       ~r~n" + & 
" 	ctx_basic_info.custom_n6,   ~r~n" + & 
" 	ctx_basic_info.custom_n7,       ~r~n" + & 
" 	ctx_basic_info.custom_n8,       ~r~n" + & 
" 	ctx_basic_info.custom_n9,    ~r~n" + & 
" 	ctx_basic_info.custom_n10,       ~r~n" + & 
" 	ctx_basic_info.custom_n11,       ~r~n" + & 
" 	ctx_basic_info.custom_n12,       ~r~n" + & 
" 	ctx_basic_info.custom_n13,       ~r~n" + & 
" 	ctx_basic_info.custom_n14,       ~r~n" + & 
" 	ctx_basic_info.custom_n15,       ~r~n" + & 
" 	ctx_basic_info.custom_n16,       ~r~n" + & 
" 	ctx_basic_info.custom_n17,       ~r~n" + & 
" 	ctx_basic_info.custom_n18,       ~r~n" + & 
" 	ctx_basic_info.custom_n19,       ~r~n" + & 
" 	ctx_basic_info.custom_n20,       ~r~n" + & 
" 	ctx_basic_info.custom_n21,       ~r~n" + & 
" 	ctx_basic_info.custom_n22,       ~r~n" + & 
" 	ctx_basic_info.custom_n23,       ~r~n" + & 
" 	ctx_basic_info.custom_n24,       ~r~n" + & 
" 	ctx_basic_info.custom_n25,       ~r~n" + & 
" 	ctx_basic_info.version_number,       ~r~n" + & 
" 	ctx_basic_info.version_date,       ~r~n" + & 
" 	ctx_basic_info.master_contract_name , ~r~n" + & 
" 	ctx_basic_info.fee_sched_calc_field_1 , ~r~n" + & 
" 	ctx_basic_info.fee_sched_calc_field_2 , ~r~n" + & 
" 	ctx_basic_info.fee_sched_calc_field_3 , ~r~n" + & 
" 	access = AA.access   , ~r~n" + & 
" 	code_lookup2.code status_name, ~r~n" + & 
" 	code_lookup3.code category_name, ~r~n" + & 
" 	code_lookup4.code contract_type_name, ~r~n" + & 
" 	code_lookup5.code dvision_name , ~r~n" + & 
" 	unread_email_cnt = 0,  ~r~n" + & 
" 	ctx_basic_info.custom_percent_1, ~r~n" + & 
" 	ctx_basic_info.custom_percent_2, ~r~n" + & 
" 	ctx_basic_info.custom_percent_3, ~r~n" + & 
" 	ctx_basic_info.custom_percent_4, ~r~n" + & 
" 	ctx_basic_info.custom_percent_5, ~r~n" + & 
" 	ctx_basic_info.custom_percent_6, ~r~n" + & 
" 	ctx_basic_info.custom_percent_7, ~r~n" + & 
" 	ctx_basic_info.custom_percent_8, ~r~n" + & 
" 	ctx_basic_info.custom_percent_9, ~r~n" + & 
" 	ctx_basic_info.custom_percent_10, ~r~n" + & 
" 	ctx_basic_info.work_flow_n1, ~r~n" + & 
" 	ctx_basic_info.work_flow_n2, ~r~n" + & 
" 	ctx_basic_info.work_flow_n3, ~r~n" + & 
" 	ctx_basic_info.work_flow_n4, ~r~n" + & 
" 	ctx_basic_info.work_flow_n5, ~r~n" + & 
" 	ctx_basic_info.custom_status1, ~r~n" + & 
" 	ctx_basic_info.custom_status2, ~r~n" + & 
" 	ctx_basic_info.custom_21, ~r~n" + & 
" 	ctx_basic_info.custom_22, ~r~n" + & 
" 	ctx_basic_info.custom_n26, ~r~n" + & 
" 	ctx_basic_info.custom_n27, ~r~n" + & 
" 	ctx_basic_info.custom_date16, ~r~n" + & 
" 	ctx_basic_info.custom_date17, ~r~n" + & 
" 	app_facility.city, ~r~n" + & 
" 	app_facility.state, ~r~n" + & 
" 	app_facility.country, ~r~n" + & 
" 	app_facility.zip, ~r~n" + & 
" 	app_facility.street, ~r~n" + & 
" 	  ctx_custom.custom_1 as custom2_custom_1,   ~r~n" + & 
"          ctx_custom.custom_2 as custom2_custom_2,    ~r~n" + & 
"          ctx_custom.custom_3 as custom2_custom_3,    ~r~n" + & 
"          ctx_custom.custom_4 as custom2_custom_4,    ~r~n" + & 
"          ctx_custom.custom_5 as custom2_custom_5,    ~r~n" + & 
"          ctx_custom.custom_6 as custom2_custom_6,    ~r~n" + & 
"          ctx_custom.custom_7 as custom2_custom_7,    ~r~n" + & 
"          ctx_custom.custom_8 as custom2_custom_8,    ~r~n" + & 
"          ctx_custom.custom_9 as custom2_custom_9,    ~r~n" + & 
"          ctx_custom.custom_10 as custom2_custom_10,    ~r~n" + & 
"          ctx_custom.custom_11 as custom2_custom_11,    ~r~n" + & 
"          ctx_custom.custom_12 as custom2_custom_12,    ~r~n" + & 
"          ctx_custom.custom_13 as custom2_custom_13,    ~r~n" + & 
"          ctx_custom.custom_14 as custom2_custom_14,    ~r~n" + & 
"          ctx_custom.custom_15 as custom2_custom_15,    ~r~n" + & 
"          ctx_custom.custom_16 as custom2_custom_16,    ~r~n" + & 
"          ctx_custom.custom_17 as custom2_custom_17,    ~r~n" + & 
"          ctx_custom.custom_18 as custom2_custom_18,    ~r~n" + & 
"          ctx_custom.custom_19 as custom2_custom_19,    ~r~n" + & 
"          ctx_custom.custom_20 as custom2_custom_20,    ~r~n" + & 
"          ctx_custom.custom_date1 as custom2_custom_date1,    ~r~n" + & 
"          ctx_custom.custom_date2 as custom2_custom_date2,    ~r~n" + & 
"          ctx_custom.custom_date3 as custom2_custom_date3,    ~r~n" + & 
"          ctx_custom.custom_date4 as custom2_custom_date4,    ~r~n" + & 
"          ctx_custom.custom_date5 as custom2_custom_date5,    ~r~n" + & 
"          ctx_custom.custom_date6 as custom2_custom_date6,    ~r~n" + & 
"          ctx_custom.custom_date7 as custom2_custom_date7,    ~r~n" + & 
"          ctx_custom.custom_date8 as custom2_custom_date8,    ~r~n" + & 
"          ctx_custom.custom_date9 as custom2_custom_date9,    ~r~n" + & 
"          ctx_custom.custom_date10 as custom2_custom_date10,    ~r~n" + & 
"          ctx_custom.custom_date11 as custom2_custom_date11,    ~r~n" + & 
"          ctx_custom.custom_date12 as custom2_custom_date12,    ~r~n" + & 
"          ctx_custom.custom_date13 as custom2_custom_date13,    ~r~n" + & 
"          ctx_custom.custom_date14 as custom2_custom_date14,    ~r~n" + & 
"          ctx_custom.custom_date15 as custom2_custom_date15,    ~r~n" + & 
"          ctx_custom.custom_n1 as custom2_custom_n1,    ~r~n" + & 
"          ctx_custom.custom_n2 as custom2_custom_n2,    ~r~n" + & 
"          ctx_custom.custom_n3 as custom2_custom_n3,    ~r~n" + & 
"          ctx_custom.custom_n4 as custom2_custom_n4,    ~r~n" + & 
"          ctx_custom.custom_n5 as custom2_custom_n5,    ~r~n" + & 
"          ctx_custom.custom_n6 as custom2_custom_n6,    ~r~n" + & 
"          ctx_custom.custom_n7 as custom2_custom_n7,    ~r~n" + & 
"          ctx_custom.custom_n8 as custom2_custom_n8,    ~r~n" + & 
"          ctx_custom.custom_n9 as custom2_custom_n9,    ~r~n" + & 
"          ctx_custom.custom_n10 as custom2_custom_n10,    ~r~n" + & 
"          ctx_custom.custom_n11 as custom2_custom_n11,    ~r~n" + & 
"          ctx_custom.custom_n12 as custom2_custom_n12,    ~r~n" + & 
"          ctx_custom.custom_n13 as custom2_custom_n13,    ~r~n" + & 
"          ctx_custom.custom_n14 as custom2_custom_n14,    ~r~n" + & 
"          ctx_custom.custom_n15 as custom2_custom_n15,    ~r~n" + & 
"          ctx_custom.custom_n16 as custom2_custom_n16,    ~r~n" + & 
"          ctx_custom.custom_n17 as custom2_custom_n17,    ~r~n" + & 
"          ctx_custom.custom_n18 as custom2_custom_n18,    ~r~n" + & 
"          ctx_custom.custom_n19 as custom2_custom_n19,    ~r~n" + & 
"          ctx_custom.custom_n20 as custom2_custom_n20,    ~r~n" + & 
"          ctx_custom.custom_n21 as custom2_custom_n21,    ~r~n" + & 
"          ctx_custom.custom_n22 as custom2_custom_n22,    ~r~n" + & 
"          ctx_custom.custom_n23 as custom2_custom_n23,    ~r~n" + & 
"          ctx_custom.custom_n24 as custom2_custom_n24,    ~r~n" + & 
"          ctx_custom.custom_n25 as custom2_custom_n25,    ~r~n" + & 
"          ctx_custom.custom_21 as custom2_custom_21,    ~r~n" + & 
"          ctx_custom.custom_22 as custom2_custom_22,    ~r~n" + & 
"          ctx_custom.custom_notes_1 as custom2_custom_notes_1,    ~r~n" + & 
"          ctx_custom.custom_notes_2 as custom2_custom_notes_2,    ~r~n" + & 
"          ctx_custom.custom_notes_3 as custom2_custom_notes_3,    ~r~n" + & 
"          ctx_custom.custom_notes_4 as custom2_custom_notes_4,    ~r~n" + & 
"          ctx_custom.custom_notes_5 as custom2_custom_notes_5,    ~r~n" + & 
"          ctx_custom.custom_money_1 as custom2_custom_money_1,    ~r~n" + & 
"          ctx_custom.custom_money_2 as custom2_custom_money_2,    ~r~n" + & 
"          ctx_custom.custom_money_3 as custom2_custom_money_3,    ~r~n" + & 
"          ctx_custom.custom_percent_1 as custom2_custom_percent_1,    ~r~n" + & 
"          ctx_custom.custom_percent_2 as custom2_custom_percent_2,    ~r~n" + & 
"          ctx_custom.custom_percent_3 as custom2_custom_percent_3,    ~r~n" + & 
"          ctx_custom.custom_percent_4 as custom2_custom_percent_4,    ~r~n" + & 
"          ctx_custom.custom_percent_5 as custom2_custom_percent_5,    ~r~n" + & 
"          ctx_custom.custom_percent_6 as custom2_custom_percent_6,    ~r~n" + & 
"          ctx_custom.custom_percent_7 as custom2_custom_percent_7,    ~r~n" + & 
"          ctx_custom.custom_percent_8 as custom2_custom_percent_8,    ~r~n" + & 
"          ctx_custom.custom_percent_9 as custom2_custom_percent_9,    ~r~n" + & 
"          ctx_custom.custom_percent_10 as custom2_custom_percent_10,   ~r~n" + & 
"          has_docs = Isnull(ctx_am_documents.has_docs,0) ~r~n" + & 
" FROM  ctx_basic_info   ~r~n" + & 
" LEFT OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id   ~r~n" + & 
" LEFT OUTER JOIN code_lookup ON ctx_products.product_id = code_lookup.lookup_code   ~r~n" + & 
" LEFT OUTER JOIN code_lookup code_lookup1 ON ctx_products.product_type = code_lookup1.lookup_code ~r~n" + & 
" LEFT OUTER JOIN code_lookup code_lookup2 ON ctx_basic_info.status = code_lookup2.lookup_code ~r~n" + & 
" LEFT OUTER JOIN code_lookup code_lookup3 ON ctx_basic_info.category = code_lookup3.lookup_code ~r~n" + & 
" LEFT OUTER JOIN code_lookup code_lookup4 ON ctx_basic_info.contract_type = code_lookup4.lookup_code ~r~n" + & 
" LEFT OUTER JOIN code_lookup code_lookup5 ON ctx_basic_info.dvision = code_lookup5.lookup_code ~r~n" + & 
" LEFT OUTER JOIN ctx_custom ON ctx_basic_info.ctx_id = ctx_custom.ctx_id   ~r~n" + & 
" LEFT OUTER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id  ~r~n" + & 
" LEFT OUTER JOIN ( select count(1) has_docs, ctx_id from  ctx_am_document group by ctx_id ) ctx_am_documents ON ctx_basic_info.ctx_id = ctx_am_documents.ctx_id,   ~r~n" + & 
" ( ~r~n" + & 
" SELECT DISTINCT TOP 100 Percent  ctx_id = ctx_contract_contacts.ctx_id, user_id = ctx_contacts.user_d, access = (CASE ctx_contract_contacts.owner WHEN 'Y' THEN 'F' ELSE ctx_contract_contacts.access END) ~r~n" + & 
" FROM ctx_contract_contacts Left Outer Join ~r~n" + & 
" ( ~r~n" + & 
" Select ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d  ~r~n" + & 
" From ctx_contract_contacts ctx_contract_contacts1 ,ctx_contacts ctx_contacts1 ~r~n" + & 
" Where ctx_contract_contacts1.contact_id = ctx_contacts1.contact_id And ctx_contacts1.user_d = @user_d ~r~n" + & 
" Group By ctx_contract_contacts1.ctx_id,ctx_contacts1.user_d ~r~n" + & 
" Having Count(ctx_contract_contacts1.ctx_id) > 1 ~r~n" + & 
" ) ccc ~r~n" + & 
" On ctx_contract_contacts.ctx_id = ccc.ctx_id ~r~n" + & 
" ,ctx_contacts ~r~n" + & 
" WHERE ctx_contacts.user_d = @user_d ~r~n" + & 
" 	AND (ccc.ctx_id is null or ctx_contract_contacts.access = 'F' ) ~r~n" + & 
" 	AND ctx_contract_contacts.contact_id = ctx_contacts.contact_id  ~r~n" + & 
" 	AND ( ctx_contract_contacts.access IN ('F','R')  ~r~n" + & 
" 	OR ctx_contract_contacts.owner = 'Y' ) ~r~n" + & 
" 	AND ctx_contract_contacts.ic_area = 'I' ~r~n" + & 
" UNION  ~r~n" + & 
" SELECT DISTINCT TOP 100 Percent ctx_id = ctx_group_access.ctx_id,user_id = security_group_users.user_id, access =  ctx_group_access.access ~r~n" + & 
" FROM  ~r~n" + & 
" ctx_group_access , ~r~n" + & 
" security_group_users, ~r~n" + & 
" icred_settings ~r~n" + & 
" WHERE	security_group_users.user_id = @user_d ~r~n" + & 
" 	AND ctx_group_access.group_id = security_group_users.group_id ~r~n" + & 
" 	AND ctx_group_access.access =  ~r~n" + & 
" 		(Case When Exists (Select u1.user_id,a1.ctx_id,a1.access  ~r~n" + & 
" 		From ctx_group_access a1,security_group_users u1 ~r~n" + & 
" 		Where a1.group_id = u1.group_id  ~r~n" + & 
" 		And a1.ctx_id = ctx_group_access.ctx_id ~r~n" + & 
" 		And u1.user_id = security_group_users.user_id	 ~r~n" + & 
" 		And a1.access = 'F') Then 'F' Else 'R' End)  ~r~n" + & 
" 	AND icred_settings.group_access = 1 ~r~n" + & 
" 	AND ctx_group_access.access in ('F','R') ~r~n" + & 
" 	AND NOT EXISTS	(SELECT 1 FROM ctx_contract_contacts, ctx_contacts   ~r~n" + & 
" 			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id )  ~r~n" + & 
" 			AND ( ctx_contacts.user_d = security_group_users.user_id ) ~r~n" + & 
" 			AND ( ctx_contract_contacts.ic_area = 'I' ) ~r~n" + & 
" 			AND ( ctx_contract_contacts.ctx_id = ctx_group_access.ctx_id ) ~r~n" + & 
" 			) ~r~n" + & 
" UNION ~r~n" + & 
" SELECT DISTINCT TOP 100 Percent ctx_id = ctx_basic_info.ctx_id, user_id = security_users.user_id, access = (CASE ctx_acp_contract_management_right.rights WHEN '11' THEN 'F' WHEN '12' THEN 'R' ELSE 'N' END) ~r~n" + & 
" FROM ctx_acp_contract_management_right, security_users, ctx_basic_info ~r~n" + & 
" WHERE security_users.user_id = @user_d ~r~n" + & 
" 	AND ctx_acp_contract_management_right.types = 1 ~r~n" + & 
" 	AND ctx_acp_contract_management_right.role_id = security_users.role_id ~r~n" + & 
" 	AND ctx_acp_contract_management_right.category = ctx_basic_info.category ~r~n" + & 
"   And ctx_basic_info.is_template = 0  ~r~n" + & 
" 	AND ctx_acp_contract_management_right.rights In ('11','12') ~r~n" + & 
" 	AND NOT EXISTS (SELECT 1 FROM ctx_contract_contacts, ctx_contacts   ~r~n" + & 
" 			WHERE ( ctx_contacts.contact_id = ctx_contract_contacts.contact_id )  ~r~n" + & 
" 			AND ( ctx_contacts.user_d = security_users.user_id AND ctx_contract_contacts.ic_area = 'I')  ~r~n" + & 
" 			AND ( ctx_contract_contacts.ctx_id = ctx_basic_info.ctx_id )  ~r~n" + & 
" 			UNION ~r~n" + & 
" 			SELECT 1 FROM ctx_group_access,security_group_users,icred_settings ~r~n" + & 
" 			WHERE icred_settings.group_access = 1 ~r~n" + & 
" 			AND (ctx_group_access.group_id = security_group_users.group_id ) ~r~n" + & 
" 			AND ( security_group_users.user_id = security_users.user_id )	 ~r~n" + & 
" 			AND ( ctx_group_access.ctx_id = ctx_basic_info.ctx_id ) ~r~n" + & 
" 			) ~r~n" + & 
" ) AA  ~r~n" + & 
" WHERE ctx_basic_info.ctx_id = AA.ctx_id and ctx_basic_info.is_template = 0  ~r~n" + & 
" ORDER BY ctx_basic_info.master_contract_id Asc, ctx_basic_info.ctx_id  Asc     ~r~n" + & 
" END"


//added by gavins 20120320
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_ImportView' AND type = 'P') " + &
"    DROP PROCEDURE up_ImportView"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_ImportView~r~n" +  &
"	@SourceDBName nvarchar(100),~r~n" +  &
"	@TargetDBName nvarchar(100),~r~n" +  &
"	@ViewID nvarchar(100),~r~n" +  &
"	@NewViewName nvarchar(50)~r~n" +  &
"As~r~n" +  &
"Begin~r~n" +  &
"	declare @MaxViewID	nvarchar(100)~r~n" +  &
"	declare @SqlString nvarchar(4000)~r~n" +  &
"	declare @ParmDefinition nvarchar(100)~r~n" +  &
"		~r~n" +  &
"	/*Get Seq No*/~r~n" +  &
"	select @SqlString = 'select @MaxViewIDOUT = isnull(max(data_view_id),0) + 1  from ' + ~r~n" +  &
"						@TargetDBName + '.dbo.data_view'~r~n" +  &
"	select @ParmDefinition = '@MaxViewIDOUT int Output'~r~n" +  &
"	exec sp_executesql @SqlString,@ParmDefinition,@MaxViewIDOUT=@MaxViewID output~r~n" +  &
"	/*Insert Data_View Table*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.data_view (data_view_id,data_view_name,type,type_c)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',~'~'' + @NewViewName + '~'~' ,type,type_c from '  ~r~n" +  &
"			+ @SourceDBName + '.dbo.data_view where data_view_id = ' + @ViewID~r~n" +  &
"	~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*Insert Tab Properties Table*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_tabpage_properties (data_view_id~r~n" +  &
"						,tabpage_name ,text,text_color ,icon_visible,icon_update_date,icon,backcolor,~r~n" +  &
"						tab_backcolor,tab_icon)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',tabpage_name ,text,text_color ,icon_visible,~r~n" +  &
"						icon_update_date,icon,backcolor,tab_backcolor,tab_icon from ' + @SourceDBName + ~r~n" +  &
"						'.dbo.ctx_tabpage_properties where data_view_id = ' + @ViewID~r~n" +  &
"	~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*Insert Ctx_Screen Table*/~r~n" +  &
"	select  @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen (data_view_id,screen_id,tab_name,screen_name,~r~n" +  &
"						dw_name,dataobject,description,dw_sql,create_date,modify_date,force_update,titlebar_visible,~r~n" +  &
"						titlebar_text,boarder_style,screen_visible, screen_style, grid_sql, grid_dataobject, grid_modify )'~r~n" +  &
"	select 	@SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id,'   ~r~n" +  &
"	select  @SqlString = @SqlString + '  tab_name,   '~r~n" +  &
"	select  @SqlString = @SqlString + 'screen_name,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         dw_name,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         dataobject, '  ~r~n" +  &
"	select  @SqlString = @SqlString + '         description, '  ~r~n" +  &
"	select  @SqlString = @SqlString + '         dw_sql,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         create_date,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         modify_date,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         force_update,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         titlebar_visible,'   ~r~n" +  &
"	select  @SqlString = @SqlString + '         titlebar_text,   '~r~n" +  &
"	select  @SqlString = @SqlString + '         boarder_style,  '~r~n" +  &
"	select  @SqlString = @SqlString + '         screen_visible,  '~r~n" +  &
"	select  @SqlString = @SqlString + '			screen_style, '~r~n" +  &
"	select  @SqlString = @SqlString + '			grid_sql, '~r~n" +  &
"	select  @SqlString = @SqlString + '			grid_dataobject, '~r~n" +  &
"	select  @SqlString = @SqlString + '			grid_modify '~r~n" +  &
"	select  @SqlString = @SqlString + '	from ' + @SourceDBName + '.dbo.ctx_screen'~r~n" +  &
"	select  @SqlString = @SqlString + '	where data_view_id = ' + @ViewID~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	~r~n" +  &
"	/*insert Data Fill Settings*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_datafill (data_view_id~r~n" +  &
"      ,screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_name_fill~r~n" +  &
"      ,field_name_map~r~n" +  &
"      ,modify_by~r~n" +  &
"      ,modify_date~r~n" +  &
"      ,Relative_Days)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_name_fill~r~n" +  &
"      ,field_name_map~r~n" +  &
"      ,modify_by~r~n" +  &
"      ,modify_date~r~n" +  &
"      ,Relative_Days from ' + @SourceDBName + '.dbo.ctx_screen_datafill where data_view_id = ' + @ViewID ~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*insert Field Depent Settings*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_field_depend (view_id~r~n" +  &
"      ,base_field~r~n" +  &
"      ,depend_field~r~n" +  &
"      ,base_screen_id~r~n" +  &
"      ,depend_screen_id~r~n" +  &
"      ,base_field_dispaly~r~n" +  &
"      ,depend_field_dispaly~r~n" +  &
"      ,base_screen_type~r~n" +  &
"      ,base_table~r~n" +  &
"      ,depend_table)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',base_field~r~n" +  &
"      ,depend_field~r~n" +  &
"      ,base_screen_id~r~n" +  &
"      ,depend_screen_id~r~n" +  &
"      ,base_field_dispaly~r~n" +  &
"      ,depend_field_dispaly~r~n" +  &
"      ,base_screen_type~r~n" +  &
"      ,base_table~r~n" +  &
"      ,depend_table from ' + @SourceDBName + '.dbo.ctx_screen_field_depend where view_id = ' + @ViewID ~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	/*isnert field extend property*/~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_field_ex (data_view_id~r~n" +  &
"      ,screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_add)'~r~n" +  &
"	select @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id~r~n" +  &
"      ,field_name~r~n" +  &
"      ,field_add from ' + @SourceDBName + '.dbo.ctx_screen_field_ex where data_view_id = ' + @ViewID ~r~n" +  &
"	exec sp_executesql @SqlString~r~n" +  &
"	select @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_pic  ( view_id ~r~n" +  &
"			,Screen_id ~r~n" +  &
"			,pic_type ~r~n" +  &
"			,pic_band ~r~n" +  &
"			,pic_name ~r~n" +  &
"			,pic_filename ~r~n" +  &
"			,pic_bitmap ~r~n" +  &
"			,pic_x ~r~n" +  &
"			,pic_y ~r~n" +  &
"			,pic_width ~r~n" +  &
"			,pic_height ~r~n" +  &
"			,pic_tag )' ~r~n" +  &
"select @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id , ~r~n" +  &
"				 pic_type,  ~r~n" +  &
"				 pic_band,   ~r~n" +  &
"				 pic_name,   ~r~n" +  &
"				 substring( pic_filename,1,2 ) + ' +  ~r~n" +  &
"				 'cast( ' + @MaxViewID + ' as varchar(10)) + ' +  ~r~n" +  &
"				 '''_''' + ' + cast( screen_id as varchar(10)) + ' +  ~r~n" +  &
"				 'substring( pic_filename, charindex( ' + '''_''' +  ~r~n" +  &
"				 ',pic_filename, charindex( ' + '''_''' + ',pic_filename, 3 ) + 1 ),99)  ~r~n" +  &
"				 ,pic_bitmap  ~r~n" +  &
"				  ,pic_x  ~r~n" +  &
"				  ,pic_y  ~r~n" +  &
"				  ,pic_width  ~r~n" +  &
"				  ,pic_height  ~r~n" +  &
"				  ,pic_tag    ~r~n" +  &
"				  from '+ @SourceDBName +'.dbo.conv_view_pic where view_id = ' +   ~r~n" +  &
"				  @ViewID + ' and pic_type = '+ '''screen''' ;	 ~r~n" +  &
"	exec sp_executesql @SqlString ~r~n" +  &
"	select Cast(@MaxViewID as int)~r~n" +  &
"end~r~n" 

//added by gavins 20120323
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_get_connect_value' AND type = 'P') " + &
"    DROP PROCEDURE sp_get_connect_value"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure [dbo].[sp_get_connect_value] ( @column varchar(100), @table varchar(200) ,@where varchar(1000), @value   varchar(8000) output )   as    ~r~n" +  &
 " begin    ~r~n" +  &
 " declare @select nvarchar(4000),  @ParmDefinition nvarchar(500)     ~r~n" +  &
 "  Set @value = ''    ~r~n" +  &
 " Set @select = N'select @value1 = @value1 + cast(  ' +  @column + ' as varchar(100)) + ''|'' from  ' + @table + ' where ' + @where      ~r~n" +  &
 " set @ParmDefinition =  N' @value1 varchar(8000) OUTPUT';    ~r~n" +  &
 " EXECUTE sp_executesql @select, @ParmDefinition,  @value1=@value OUTPUT;    ~r~n" +  &
 "  end  ~r~n" 
 
 
//Added By Ken.Guo 06/18/2012. Improve SQL Server 2008  full text search performance/ workaround SQL Server 2008's Bug
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (SELECT name FROM sysobjects WHERE name = 'sp_sql2008_improve' AND type = 'P')~r~n" + &
"    DROP PROCEDURE sp_sql2008_improve~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE  PROCEDURE [dbo].[sp_sql2008_improve]~r~n" + &
"as~r~n" + &
"Begin~r~n" + &
	"If CharIndex( 'Microsoft SQL Server 2005', @@version) = 0  ~r~n" + &	
	"	DBCC TRACEON(4199, -1) ~r~n" + &
"End"

//Added By Mark Lee 07/05/12 check SQL compatibility_level value
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF EXISTS (SELECT name FROM sysobjects WHERE name = 'sp_sys_set' AND TYPE = 'P')~r~n" + &
"BEGIN~r~n" + &
"	DROP PROCEDURE sp_sys_set~r~n" + &
"END~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE PROCEDURE sp_sys_set(@arg VARCHAR(200),@outputs VARCHAR(1000) OUTPUT)~r~n" + &
"AS~r~n" + &
"BEGIN~r~n" + &
" DECLARE @sql NVARCHAR(500)~r~n" + &
" DECLARE @para NVARCHAR(500)~r~n" + &
" DECLARE @level INT~r~n" + &
" DECLARE @pos INT~r~n" + &
" DECLARE @p_version VARCHAR(50)~r~n" + &
"~r~n" + &
" IF (@arg IS NULL ) OR (LTRIM(RTRIM(@arg)) = '')~r~n" + &
" BEGIN~r~n" + &
"  RETURN ~r~n" + &
" END ~r~n" + &
" ELSE~r~n" + &
" BEGIN~r~n" + &
"  IF @arg = 'compatibility_level' ~r~n" + &
"  BEGIN~r~n" + &
"   SET @p_version = CONVERT(VARCHAR(50),SERVERPROPERTY('PRODUCTVERSION'))~r~n" + &
"   SET @pos = CHARINDEX('.',LTRIM(RTRIM(@p_version)))~r~n" + &
"   IF @pos > 0 AND ( Isnumeric(LEFT(@p_version,@pos - 1)) > 0 )~r~n" + &
"   BEGIN~r~n" + &
"    SET @pos = convert(INT,LEFT(@p_version,@pos - 1))~r~n" + &
"    IF @pos > 8 ~r~n" + &
"    BEGIN~r~n" + &
"     SET @sql = 'select @level = compatibility_level from sys.databases where name = db_name()'~r~n" + &
"     SET @para = '@level int output'~r~n" + &
"     EXEC SP_EXECUTESQL @sql, @para,@level output~r~n" + &
"     SELECT @outputs = convert(varchar(1000),@level)~r~n" + &
"    END~r~n" + &
"    ELSE IF @pos <= 8 ~r~n" + &
"    BEGIN~r~n" + &
"     SET @sql = 'select  @level = cmptlevel from master.dbo.sysdatabases where name = db_name()'~r~n" + &
"     SET @para = '@level int output'~r~n" + &
"     EXEC SP_EXECUTESQL @sql, @para,@level output~r~n" + &
"     SELECT @outputs = convert(varchar(1000),@level)~r~n" + &
"    END~r~n" + &
"   END ~r~n" + &
"   ~r~n" + &
"   RETURN~r~n" + &
"  END ~r~n" + &
" END ~r~n" + &
"~r~n" + &
"END "

of_execute_sqls("of_ver110_release_storeprocedure1")

Return 1
end function

public function integer of_ver110_release_trigger1 ();Return 1
end function

public function integer of_ver110_release_createfulltext1 ();
of_enable_fulltext()							

//Added By Ken.Guo 05/29/2012
//Create Full Text for Ctx_custom
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_custom_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"declare @ls_key_name varchar(200) " + &
"select @ls_key_name = name from sysobjects where xtype='PK' and parent_obj=object_id('ctx_custom') " + &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFulltextCatalogId' )=0) " + &
"   exec sp_fulltext_table 'ctx_custom','create','ctx_custom_catalog',@ls_key_name "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_1','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_2','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_3','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_4','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_5','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_6','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_7','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_8','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_9','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_9','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_10','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_10','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_11','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_11','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_12','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_12','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_13','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_13','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_14','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_14','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_15','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_15','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_16','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_16','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_17','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_17','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_18','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_18','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_19','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_19','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_20','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_20','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_1','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_2','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_3','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_4','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_5','add'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_custom','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_custom','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_custom','start_background_updateindex' "


//Added By Ken.Guo 05/29/2012
//Create Full Text for ctx_custom_multi_hdr
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_custom_multi_hdr' and i.name = 'index_ctx_custom_multi_hdr_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_custom_multi_hdr_id_forcatalog ON ctx_custom_multi_hdr(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_multi_hdr_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_custom_multi_hdr_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFulltextCatalogId' )=0) " + &
"   exec sp_fulltext_table 'ctx_custom_multi_hdr','create','ctx_custom_multi_hdr_catalog','index_ctx_custom_multi_hdr_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_1','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_2','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_3','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_4','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_5','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_6','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_7','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_8','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_9','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_9','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_10','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_10','add'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_notes_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_notes_1','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_notes_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_notes_2','add'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_custom_multi_hdr','start_full' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_custom_multi_hdr','start_change_tracking' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_custom_multi_hdr','start_background_updateindex' "

//Added By Ken.Guo 05/29/2012
//Create Full Text for ctx_custom_multi_Detail
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from  sysindexes i inner join sysobjects s on (i.id = s.id) where  " + &
"    s.name='ctx_custom_multi_detail' and i.name = 'index_ctx_custom_multi_detail_id_forcatalog' and indid > 0 and indid < 255) " + &
"CREATE UNIQUE INDEX index_ctx_custom_multi_detail_id_forcatalog ON ctx_custom_multi_detail(id_forcatalog) "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_multi_detail_catalog') " + &
"begin " + &
"   	exec sp_fulltext_catalog 'ctx_custom_multi_detail_catalog','create' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFulltextCatalogId' )=0) " + &
"   exec sp_fulltext_table 'ctx_custom_multi_detail','create','ctx_custom_multi_detail_catalog','index_ctx_custom_multi_detail_id_forcatalog' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_1','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_2','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_3','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_4','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_5','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_6','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_6','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_7','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_7','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_8','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_8','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_9','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_9','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_10','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_10','add'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_notes_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_notes_1','add'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_custom_multi_detail','start_full' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_custom_multi_detail','start_change_tracking' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_custom_multi_detail','start_background_updateindex' "





of_execute_sqls("of_ver110_release_createfulltext1")
return 1
end function

public function integer of_ver110_release_dropfulltext1 ();
of_enable_fulltext()							

//Added By Ken.Guo 05/29/2012 //Drop ctx_custom
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'ctx_id','IsFulltextIndexed' ) = 1) " + &
"begin " + &
"	exec sp_fulltext_column 'ctx_custom','ctx_id','drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_1','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_2','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_3','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_4','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_5','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_6','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_7','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_8','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_9','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_9','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_10','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_10','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_11','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_11','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_12','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_12','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_13','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_13','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_14','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_14','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_15','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_15','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_16','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_16','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_17','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_17','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_18','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_18','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_19','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_19','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_20','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_20','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_1','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_2','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_3','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_4','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_notes_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_notes_5','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFulltextCatalogId' )>0)	 " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_custom', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_custom_catalog', 'drop' " + &
"end "


//Added By Ken.Guo 05/29/2012 //Drop ctx_custom_multi_hdr
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'id_forcatalog','IsFulltextIndexed' ) = 1) " + &
"begin " + &
"	exec sp_fulltext_column 'ctx_custom_multi_hdr','id_forcatalog','drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_1','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_2','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_3','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_4','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_5','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_6','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_7','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_8','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_9','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_9','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_10','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_10','drop'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_notes_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_notes_1','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_notes_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_notes_2','drop'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFulltextCatalogId' )>0)	 " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_custom_multi_hdr', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_multi_hdr_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_custom_multi_hdr_catalog', 'drop' " + &
"end "


//Added By Ken.Guo 05/29/2012 //Drop ctx_custom_multi_detail
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'id_forcatalog','IsFulltextIndexed' ) = 1) " + &
"begin " + &
"	exec sp_fulltext_column 'ctx_custom_multi_detail','id_forcatalog','drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_1','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_2','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_3','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_4','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_5','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_6','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_6','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_7','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_7','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_8','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_8','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_9','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_9','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_10','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_10','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_notes_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_notes_1','drop'  "


is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if ( OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFulltextCatalogId' )>0)	 " + &
"begin " + &
"	exec sp_fulltext_table 'ctx_custom_multi_detail', 'drop' " + &
"end "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_multi_detail_catalog') " + &
"begin " + &
"	exec sp_fulltext_catalog 'ctx_custom_multi_detail_catalog', 'drop' " + &
"end "



of_execute_sqls("of_ver110_release_dropfulltext1")
return 1

end function

public function integer of_ver110_updates ();
of_ver110_release_table1()
of_ver110_release_view1()
of_ver110_release_storeprocedure1()
of_ver110_release_trigger1() 

//Added By Ken.Guo 05/04/2012. Create Full Text again for All Saas Prod Databases for full text search docx file.
String ls_main_version,ls_patch_version
Select set_18,set_patch_ver Into :ls_main_version, :ls_patch_version From icred_settings;
If ls_main_version < '110' or ( ls_main_version = '110' and ls_patch_version < '010' ) Then
	of_release_fulltext(True)									
End If


Return 1

end function

public function integer of_ver115_updates ();//Added By Mark Lee 07/10/12

of_ver115_release_table1()
of_ver115_release_view1()
of_ver115_release_storeprocedure1()
of_ver115_release_trigger1() 


Return 1

end function

public function integer of_ver115_release_table1 ();//====================================================================
// Function: of_ver115_release_table1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 07/10/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_user_options'  AND ~t type = 'U')~r~n" + &
//"CREATE TABLE security_user_options~r~n" + &
//"(~r~n" + &
//"user_id varchar(50) not null,~r~n" + &
//"option_name varchar(100)  not null,~r~n" + &
//"option_value varchar(100) null,~r~n" + &
//"last_update datetime null,~r~n" + &
//"Primary Key(user_id,option_name)~r~n" + &
//"~t)"

//Added By Mark Lee 07/10/12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'track_viewing' and t.name = 'icred_settings' and t.type = 'U' )~r~n" + &
"alter table icred_settings add track_viewing int ~r~n" 

//Added By Mark Lee 07/19/12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF Not EXISTS(SELECT 1  FROM  sysobjects WHERE  name = 'sys_tracking_log'  AND  type = 'U')~r~n" + &
"CREATE TABLE sys_tracking_log(~r~n" + &
" session_id varchar(20) NOT NULL,~r~n" + &
" modules varchar(200) NOT NULL,~r~n" + &
" value1 varchar(200) NOT NULL,~r~n" + &
" value2 varchar(200) NULL,~r~n" + &
" value3 varchar(200) NULL,~r~n" + &
" notes varchar(2000) NULL,~r~n" + &
" open_datetime datetime NULL,~r~n" + &
" Foreign Key(session_id) references session_info(session_id) on delete cascade~r~n" + &
") "

//Added By Mark Lee 07/25/12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c, sysobjects t where c.id=t.id  and c.name='base_clause_rule_on' and t.name='icred_settings' and t.type = 'U')~r~n" + &
" ALTER table icred_settings add base_clause_rule_on integer null  "

//Added By Ken.Guo 07/27/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='dwsavepdfway' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add dwsavepdfway integer null  ~r~n"


//added by gavins 20120730
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( SELECT name  FROM  sysobjects WHERE  name = 'sys_dynamic_sql'  AND   type = 'U')~r~n" + &
"create table sys_dynamic_sql ( sessionid varchar(20) , id1 varchar(30) ,id2 varchar(30), id3 varchar(30), sqlstring varchar(6000), arg_numbers int, ~r~n" + &
"return_value1 varchar(100), return_value2 varchar(100), return_value3 varchar(100), occur_time datetime default(getdate() )  primary key (sessionid, id1, id2,id3 )~r~n" + &
"Foreign Key(sessionid) references session_info(session_id) on delete cascade )~r~n" 

//Added By Mark Lee 08/09/12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'https' and t.name = 'icred_settings' and t.type = 'U' )~r~n" + &
"alter table icred_settings add https int ~r~n" 


//Added By gavins 20120815
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'tfield_name' and t.name = 'sys_audit' and t.type = 'U' )~r~n" + &
"alter table sys_audit add tfield_name varchar(50) null  ~r~n" 

//Added By gavins 20120815
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'tfield_name_allias' and t.name = 'sys_audit' and t.type = 'U' )~r~n" + &
"alter table sys_audit add tfield_name_allias varchar(50) null ~r~n" 

//Added By Ken.Guo 08/17/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='preload_word' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add preload_word int null  "

//Added By gavins 20120822( 1 special null or 0 normal )
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alarm_ways' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add alarm_ways int null  "

//Added By Ken.Guo 09/26/2012. Support Add sub contracts for US banK Customer.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='default_copy_contract' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add default_copy_contract varchar(2000) null  "

//Added By Ken.Guo 10/11/2012. Delete the unnecessary FK
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select TOP 1 1 from sysobjects  where name = 'FK_CTX_ACTI_FK_CTX_AC_CTX_CONT_') ~r~n" + &
"alter table Ctx_Action_Items   drop   FK_CTX_ACTI_FK_CTX_AC_CTX_CONT_"



of_execute_sqls("of_ver115_release_table1")

return 1
end function

public function integer of_ver115_release_view1 ();//====================================================================
// Function: of_ver115_release_view1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 07/10/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"CREATE VIEW v_ctx_custom2 ~r~n" + &
//"AS ~r~n" + &
//"SELECT     ctx_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_11, custom_12,  ~r~n" + &
//"                      custom_13, custom_14, custom_15, custom_16, custom_17, custom_18, custom_19, custom_20, custom_date1, custom_date2, custom_date3,  ~r~n" + &
//"                      custom_date4, custom_date5, custom_date6, custom_date7, custom_date8, custom_date9, custom_date10, custom_date11, custom_date12,  ~r~n" + &
//"                      custom_date13, custom_date14, custom_date15, custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7, custom_n8,  ~r~n" + &
//"                      custom_n9, custom_n10, custom_n11, custom_n12, custom_n13, custom_n14, custom_n15, custom_n16, custom_n17, custom_n18, custom_n19,  ~r~n" + &
//"                      custom_n20, custom_n21, custom_n22, custom_n23, custom_n24, custom_n25, custom_21, custom_22, custom_notes_1, custom_notes_2,  ~r~n" + &
//"                      custom_notes_3, custom_notes_4, custom_notes_5, custom_money_1, custom_money_2, custom_money_3, custom_percent_1, custom_percent_2,  ~r~n" + &
//"                      custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_8, custom_percent_9,  ~r~n" + &
//"                      custom_percent_10 ~r~n" + &
//"FROM         ctx_custom ~r~n" 


of_execute_sqls("of_ver115_release_view1")

Return 1

end function

public function integer of_ver115_release_storeprocedure1 ();//====================================================================
// Function: of_ver115_release_storeprocedure1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 07/10/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================


//added by gavins 20120723
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'uf_connect_string' AND xtype in (N'FN', N'IF', N'TF') ) " + &
"    DROP function uf_connect_string"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create function  [dbo].[uf_connect_string] ( @class varchar(10),  @where1 varchar(100), @where2 varchar(100))returns varchar(8000) ~r~n" + &
" as ~r~n" + &
"	begin	~r~n" + &
"		declare @returnstring varchar(4000), @name varchar(4000) ~r~n" + &
"		set  @returnstring = '' ~r~n" + &
"		if @class = '1'  ~r~n" + &
"			begin ~r~n" + &
"			   SELECT @returnstring = @returnstring + ISNULL( code_lookup_B.code , '' )+ ', ',  ~r~n" + &
"				@name = IsNull	(ctx_acp_clause_attribute.clause_attribute_alias,code_lookup_A.description) +' = '  ~r~n" + &
"			   FROM ctx_acp_clause_attribute,ctx_acp_clause_attr_value,code_lookup  ~r~n" + &
"			    code_lookup_A,code_lookup	code_lookup_B ~r~n" + &
"		  	    WHERE ctx_acp_clause_attribute.ctx_acp_clause_id = ctx_acp_clause_attr_value.ctx_acp_clause_id AND ~r~n" + &
"			   ctx_acp_clause_attribute.clause_attribute_id = ctx_acp_clause_attr_value.clause_attribute_id AND ~r~n" + &
"			   ctx_acp_clause_attribute.clause_attribute_id = code_lookup_A.lookup_code AND ~r~n" + &
"			   ctx_acp_clause_attr_value.clause_attribute_value_id = code_lookup_B.lookup_code  ~r~n" + &
"			   and ctx_acp_clause_attribute.ctx_acp_clause_id = @where1 and  ~r~n" + &
"				ctx_acp_clause_attribute.clause_attribute_id  = @where2 order by  ~r~n" + &
"				ctx_acp_clause_attr_value.clause_attribute_value_id ~r~n" + &
"				set @returnstring = @name + left(@returnstring, len(@returnstring ) -1 ) ~r~n" + &
"		     end  ~r~n" + &
"		return @returnstring ~r~n" + &
"	end " 


//added by gavins 20120730
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_dynamic_sql' AND type = 'P') " + &
"    DROP PROCEDURE up_dynamic_sql"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure [dbo].[up_dynamic_sql] @sessionid varchar(20)~r~n" + &
"as~r~n" + &
"declare @sql nvarchar(4000) , @outstring1 varchar(1000), @outstring2 varchar(1000), @outstring3 varchar(1000)~r~n" + &
"declare @num int~r~n" + &
"declare sqls cursor for select  sqlstring, arg_numbers  from sys_dynamic_sql~r~n" + &
"where sessionid = @sessionid  FOR UPDATE of return_value1, return_value2, return_value3~r~n" + &
"open sqls ~r~n" + &
"fetch sqls into @sql, @num~r~n" + &
"while @@FETCH_STATUS = 0 ~r~n" + &
"	begin~r~n" + &
"		if @num = 1~r~n" + &
"			begin~r~n" + &
"				exec sp_executesql @sql,~r~n" + &
"				N'@outstring1 varchar(1000) out',~r~n" + &
"				@outstring1 out~r~n" + &
"			end ~r~n" + &
"		 else if @num = 2~r~n" + &
"			begin~r~n" + &
"				exec sp_executesql @sql,~r~n" + &
"				N'@outstring1 varchar(1000) out,@outstring2 varchar(1000) out',~r~n" + &
"				@outstring1 out, @outstring2 out~r~n" + &
"			end~r~n" + &
"		 else if @num = 3~r~n" + &
"			begin~r~n" + &
"				exec sp_executesql @sql,~r~n" + &
"				N'@outstring1 varchar(1000) out,@outstring2 varchar(1000) out,@outstring3 varchar(1000) out',~r~n" + &
"				@outstring1 out	, @outstring2 out, @outstring3 out		~r~n" + &
"			end~r~n" + &
"		if @@ERROR <> 0 ~r~n" + &
"			begin~r~n" + &
"				set @outstring1 = 'error'~r~n" + &
"			end~r~n" + &
"			update 	sys_dynamic_sql set return_value1 = @outstring1, return_value2 = @outstring2~r~n" + &
"					, return_value3 = @outstring3 where  current of sqls~r~n" + &
"		fetch sqls into @sql, @num~r~n" + &
"	end~r~n" + &
"close sqls~r~n" + &
"deallocate sqls~r~n" 


//Added By Mark Lee 08/14/12 add adjuge free space for database
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF EXISTS (SELECT name FROM sysobjects WHERE name = 'sp_sys_set' AND TYPE = 'P')~r~n" + &
"BEGIN~r~n" + &
"	DROP PROCEDURE sp_sys_set~r~n" + &
"END~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"~r~n" + &
"CREATE PROCEDURE sp_sys_set(@arg VARCHAR(200),@outputs VARCHAR(1000) OUTPUT)~r~n" + &
"AS~r~n" + &
"BEGIN~r~n" + &
"  DECLARE @sql NVARCHAR(500)~r~n" + &
"  DECLARE @para NVARCHAR(500)~r~n" + &
"  DECLARE @level INT~r~n" + &
"  DECLARE @pos INT~r~n" + &
"  DECLARE @p_version VARCHAR(50)~r~n" + &
"~r~n" + &
"  IF (@arg IS NULL ) OR (LTRIM(RTRIM(@arg)) = '')~r~n" + &
"  BEGIN~r~n" + &
"   RETURN ~r~n" + &
"  END ~r~n" + &
"  ELSE~r~n" + &
"  BEGIN~r~n" + &
"   IF @arg = 'compatibility_level' ~r~n" + &
"   BEGIN~r~n" + &
"    SET @p_version = CONVERT(VARCHAR(50),SERVERPROPERTY('PRODUCTVERSION'))~r~n" + &
"    SET @pos = CHARINDEX('.',LTRIM(RTRIM(@p_version)))~r~n" + &
"    IF @pos > 0 AND ( Isnumeric(LEFT(@p_version,@pos - 1)) > 0 )~r~n" + &
"    BEGIN~r~n" + &
"     SET @pos = convert(INT,LEFT(@p_version,@pos - 1))~r~n" + &
"     IF @pos > 8 ~r~n" + &
"     BEGIN~r~n" + &
"      SET @sql = 'select @level = compatibility_level from sys.databases where name = db_name()'~r~n" + &
"      SET @para = '@level int output'~r~n" + &
"      EXEC SP_EXECUTESQL @sql, @para,@level OUTPUT~r~n" + &
"      SELECT @outputs = convert(VARCHAR(1000),@level)~r~n" + &
"     END~r~n" + &
"     ELSE IF @pos <= 8 ~r~n" + &
"     BEGIN~r~n" + &
"      SET @sql = 'select  @level = cmptlevel from master.dbo.sysdatabases where name = db_name()'~r~n" + &
"      SET @para = '@level int output'~r~n" + &
"      EXEC SP_EXECUTESQL @sql, @para,@level OUTPUT~r~n" + &
"      SELECT @outputs = convert(VARCHAR(1000),@level)~r~n" + &
"     END~r~n" + &
"    END ~r~n" + &
"    ~r~n" + &
"    RETURN~r~n" + &
"   END ~r~n" + &
"   ELSE IF @arg = 'freespace' ~r~n" + &
"   BEGIN~r~n" + &
" DECLARE @drivename CHAR(1)~r~n" + &
" DECLARE @drivename2 CHAR(1)~r~n" + &
" DECLARE @mb_free INT~r~n" + &
" DECLARE @mb_free2 INT~r~n" + &
"~r~n" + &
" Select @outputs = ''~r~n" + &
" SELECT @drivename=LEFT(filename,1) FROM sysfiles~r~n" + &
" WHERE fileid = 1 ~r~n" + &
"~r~n" + &
" SELECT @drivename2=LEFT(filename,1) FROM sysfiles~r~n" + &
" WHERE fileid = 2~r~n" + &
"  ~r~n" + &
" IF object_id('tempdb..#freespace') is not null ~r~n" + &
" Begin~r~n" + &
"  DROP TABLE #freespace~r~n" + &
" End~r~n" + &
" ~r~n" + &
" CREATE TABLE #freespace(~r~n" + &
" drive CHAR(1),~r~n" + &
" mb_free INT~r~n" + &
" )~r~n" + &
"    ~r~n" + &
" INSERT INTO #freespace~r~n" + &
" EXEC xp_fixeddrives~r~n" + &
"  ~r~n" + &
" SELECT top 1 @mb_free = mb_free  FROM #freespace WHERE drive = @drivename~r~n" + &
" SELECT top 1 @mb_free2 = mb_free FROM #freespace WHERE drive = @drivename2~r~n" + &
"  ~r~n" + &
" IF (isnumeric(@mb_free)= 1) and ( @mb_free < 50 ) ~r~n" + &
" BEGIN~r~n" + &
"  SELECT @outputs = '1The system detected that there is less than 50MB free disk space for your database.~r~n' +~r~n" + &
"    'Please contact your database administrator to allocate more disk space ~r~n' +~r~n" + &
"    'in order to avoid disrupting the normal operation of the system.'~r~n" + &
" END~r~n" + &
"  ~r~n" + &
" IF (isnumeric(@mb_free2)= 1) and ( @mb_free2 < 50 ) ~r~n" + &
" BEGIN~r~n" + &
"  IF LEN(@outputs) = 0 ~r~n" + &
"  BEGIN~r~n" + &
"   SELECT @outputs = '2The system detected that there is less than 50MB free disk space for your database.~r~n' +~r~n" + &
"     'Please contact your database administrator to allocate more disk space ~r~n' +~r~n" + &
"     'in order to avoid disrupting the normal operation of the system.'~r~n" + &
"  END         ~r~n" + &
" END ~r~n" + &
" ~r~n" + &
" DROP TABLE #freespace~r~n" + &
" ~r~n" + &
" END~r~n" + &
"~r~n" + &
" END ~r~n" + &
" ~r~n" + &
"END ~r~n" + &
""

of_execute_sqls("of_ver115_release_storeprocedure1")




return 1
end function

public function integer of_ver115_release_trigger1 ();//====================================================================
// Function: of_ver115_release_trigger1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 07/10/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
of_execute_sqls("of_ver115_release_trigger1")

return 1
end function

public function integer of_ver115_release_createfulltext1 ();//====================================================================
// Function: of_ver115_release_createfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 07/10/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//if use this function, need enable this comment.
//of_enable_fulltext()								//Added By Mark Lee 12/22/2015

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_catalog') " + &
//"begin " + &
//"   	exec sp_fulltext_catalog 'ctx_custom_catalog','create' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver115_release_createfulltext1")				//Added By Mark Lee 12/22/2015

return 1 
end function

public function integer of_ver115_release_dropfulltext1 ();//====================================================================
// Function: of_ver115_release_dropfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 07/10/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//if use this function, need enable this comment.
//of_enable_fulltext()					//Added By Mark Lee 12/22/2015

//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'ctx_id','IsFulltextIndexed' ) = 1) " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_custom','ctx_id','drop' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver115_release_dropfulltext1")		//Added By Mark Lee 12/22/2015

return 1

end function

public function integer of_ver120_release_table1 ();//====================================================================
// Function: of_ver120_release_table1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 10/19/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_user_options'  AND ~t type = 'U')~r~n" + &
//"CREATE TABLE security_user_options~r~n" + &
//"(~r~n" + &
//"user_id varchar(50) not null,~r~n" + &
//"option_name varchar(100)  not null,~r~n" + &
//"option_value varchar(100) null,~r~n" + &
//"last_update datetime null,~r~n" + &
//"Primary Key(user_id,option_name)~r~n" + &
//"~t)"

//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_notification' and t.type = 'U' )~r~n" + &
"alter table ctx_notification add alm_appointment varchar(2000) null  ~r~n" 

//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_am_image_approve' and t.type = 'U' )~r~n" + &
"alter table ctx_am_image_approve add alm_appointment varchar(2000) null  ~r~n" 

//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_am_image_approve_detail' and t.type = 'U' )~r~n" + &
"alter table ctx_am_image_approve_detail add alm_appointment varchar(200) null  ~r~n" 

//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_am_document' and t.type = 'U' )~r~n" + &
"alter table ctx_am_document add alm_appointment varchar(2000) null  ~r~n" 
//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='Appointment_create' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add Appointment_create integer null  ~r~n"
//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='Appointment_times' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add Appointment_times integer null  ~r~n"

//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_ai_notification' and t.type = 'U' )~r~n" + &
"alter table ctx_ai_notification add alm_appointment varchar(2000) null  ~r~n" 
//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_am_ai_notification' and t.type = 'U' )~r~n" + &
"alter table ctx_am_ai_notification add alm_appointment varchar(2000) null  ~r~n" 
//Added By gavins 20121022
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'alm_appointment' and t.name = 'ctx_all_notification' and t.type = 'U' )~r~n" + &
"alter table ctx_all_notification add alm_appointment varchar(2000) null  ~r~n" 

//Added By Mark Lee 10/29/12
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'primary_doc' and t.name = 'ctx_am_document' and t.type = 'U' )~r~n" + &
"alter table ctx_am_document add primary_doc  char(1) null "

//Added By Mark Lee 11/12/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF Not EXISTS( select 1 from sysobjects  where name = 'ctx_search_user_filter' and type = 'U' ) ~r~n" + &
"Create table ctx_search_user_filter~r~n" + &
"(~r~n" + &
"column_name varchar(255) not null,~r~n" + &
"users_id varchar(50) not null,~r~n" + &
"sort varchar(1) not null,~r~n" + &
"col_type varchar(20) null,~r~n" + &
"lengths Integer null,~r~n" + &
"last_update datetime not null,~r~n" + &
"data_values varchar(500) null,~r~n" + &
"col_text varchar(500) null,~r~n" + &
"col_display varchar(500) null,~r~n" + &
"PRIMARY KEY (column_name ,users_id ,sort )~r~n" + &
") "

//Added By Ken.Guo 11/16/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_batch_alarm_analysis' )~r~n" + &
"~tCreate Table ctx_batch_alarm_analysis ~r~n" + &
"~t(~r~n" + &
"~t~tid  numeric(10,0) identity  not null,~r~n" + &
"~t~tclient_id varchar(20) not null,~r~n" + &
"~t~tscreen_id numeric(10,0) null,~r~n" + &
"~t~talm_table varchar(100)  null,~r~n" + &
"~t~talm_column varchar(100) null,~r~n" + &
"~t~tnotification_table varchar(100) null,~r~n" + &
"~t~ttv_handle numeric(10,0) null,~r~n" + &
"~t~tcount_notset numeric(10,0) null,~r~n" + &
"~t~tPrimary Key(id)~r~n" + &
"~t)"

//Begin - Added By Mark Lee 11/19/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_create_child' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_create_child bit ~r~n" + &
"End"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_copy_m_company' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_copy_m_company bit ~r~n" + &
"End"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Not exists(select 1 from syscolumns c , sysobjects t where c.id = t.id and c.name = 'ib_copy_m_company_contact' and t.name = 'ctx_templates_info' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table ctx_templates_info add ib_copy_m_company_contact bit ~r~n" + &
"End"
//End - Added By Mark Lee 11/19/2012

//Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
"  where c.id = t.id and c.name = 'receivedate' and t.name = 'em_smtp_accounts' and t.type = 'U' )  ~r~n" + &
"  alter table em_smtp_accounts add receivedate datetime null   ~r~n" 

//Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"  if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
"  where c.id = t.id and c.name = 'protocol' and t.name = 'em_smtp_accounts' and t.type = 'U' )  ~r~n" + &
"  alter table em_smtp_accounts add protocol varchar(20) null   ~r~n" 
 
//Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &  
"  if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
"  where c.id = t.id and c.name = 'messageid' and t.name = 'em_user_msg_id' and t.type = 'U' )  ~r~n" + &
"  alter table em_user_msg_id add messageid varchar(200) null  ~r~n" 

  //Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
 " if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
 " where c.id = t.id and c.name = 'folder' and t.name = 'em_user_msg_id' and t.type = 'U' )  ~r~n" + &
 " alter table em_user_msg_id add folder varchar(200) null  ~r~n" 
  
  //Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
 " if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
 " where c.id = t.id and c.name = 'rfc822date' and t.name = 'em_user_msg_id' and t.type = 'U' )  ~r~n" + &
 " alter table em_user_msg_id add rfc822date varchar(100) null ~r~n" 

   //Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"   if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
"  where c.id = t.id and c.name = 'protocoltype' and t.name = 'em_user_msg_id' and t.type = 'U' )  ~r~n" + &
"  alter table em_user_msg_id add protocoltype varchar(20) null  ~r~n" 

  //Added By gavins 20121121
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
 "  if not exists( select 1 from syscolumns c , sysobjects t   ~r~n" + &
 " where c.id = t.id and c.name = 'protocoltype' and t.name = 'em_mail_items' and t.type = 'U' )  ~r~n" + &
 " alter table em_mail_items add protocoltype varchar(20) null  ~r~n" 

//Added By Mark Lee 11/26/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" If Not exists(select 1 from syscolumns c , sysobjects t  ~r~n" + &
" where c.id = t.id and c.name = 'use_tmp_directory' and t.name = 'export_header' and t.type = 'U')~r~n" + &
"Begin~r~n" + &
"	Alter table export_header add use_tmp_directory bit ~r~n" + &
"End"

//Added By Ken.Guo 11/29/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='sql_preview' and t.name='ctx_batch_alarm_analysis'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_batch_alarm_analysis add sql_preview varchar(8000) null  "

//Added By Ken.Guo 12/03/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_column_lable' and t.name='ctx_batch_alarm_analysis'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_batch_alarm_analysis add alm_column_lable varchar(200) null  "

  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association2' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
 "alter table ctx_contract_contacts add association2 varchar(100) null   "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association3' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association3 varchar(100) null   "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association4' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association4 varchar(100) null   "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
 "where c.id = t.id and c.name = 'association5' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association5 varchar(100) null    "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association6' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association6 varchar(100) null    "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association7' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association7 varchar(100) null    "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association8' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association8 varchar(100) null    "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
 "if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association9' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
 "alter table ctx_contract_contacts add association9 varchar(100) null    "
 
  //Added By gavins 20121203
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
" where c.id = t.id and c.name = 'association10' and t.name = 'ctx_contract_contacts' and t.type = 'U' ) ~r~n" + &
" alter table ctx_contract_contacts add association10 varchar(100) null    "

//Added By Mark Lee 12/06/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='sync_category' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add sync_category integer null  ~r~n"

//Added By Ken.Guo 12/07/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='count_all' and t.name='ctx_batch_alarm_analysis'~tand t.type = 'U')~r~n" + &
"ALTER table ctx_batch_alarm_analysis add count_all integer null  "

//Added By Ken.Guo 12/19/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='wf_triggered_view' and t.name='wf_workflow'~tand t.type = 'U')~r~n" + &
"ALTER table wf_workflow add wf_triggered_view varchar(2000) null  "

//Added By Ken.Guo 12/19/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='wf_triggered_ctx_status' and t.name='wf_workflow'~tand t.type = 'U')~r~n" + &
"ALTER table wf_workflow add wf_triggered_ctx_status varchar(2000) null  "

//added by gavins 20121220    
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if not exists( select 1 from syscolumns c , sysobjects t where  ~r~n" + &
" c.id = t.id and c.name = 'file_modify' and t.name = 'ctx_am_image_approve' and t.type = 'U' )  ~r~n" + &
" alter table ctx_am_image_approve add file_modify int null ~r~n"
 
 //Added By Ken.Guo 12/26/2012
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
 "if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='level_id1_list' and t.name='em_mail_audit'~tand t.type = 'U')~r~n" + &
"ALTER table em_mail_audit add level_id1_list varchar(5000) null  ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='level_id2_list' and t.name='em_mail_audit'~tand t.type = 'U')~r~n" + &
"ALTER table em_mail_audit add level_id2_list varchar(5000) null  "
 
 //Added By Mark Lee 01/17/2013
  is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_viewid_options'  AND ~t type = 'U')~r~n" + &
"CREATE TABLE security_viewid_options~r~n" + &
"(~r~n" + &
"view_id int not null,~r~n" + &
"option_name varchar(100)  not null,~r~n" + &
"option_value varchar(100) null,~r~n" + &
"last_update datetime null,~r~n" + &
"user_id varchar(50)  null,~r~n" + &
"Primary Key(view_id,option_name)~r~n" + &
"~t)"
 
//Added By Ken.Guo 01/23/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'system_options' )~r~n" + &
"~tCreate Table system_options ~r~n" + &
"~t(~r~n" + &
"option_name varchar(100)  not null,~r~n" + &
"option_value varchar(100) null,~r~n" + &
"last_update datetime null,~r~n" + &
"last_author varchar(50)  null,~r~n" + &
"Primary Key(option_name)~r~n" + &
"~t)"
 
 //Added By Ken.Guo 02/05/2013
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_pictures' )~r~n" + &
"~tCreate Table ctx_pictures ~r~n" + &
"~t(~r~n" + &
"~t~tid  numeric(10,0) not null,~r~n" + &
"~t~tfile_name varchar(255) null,~r~n" + &
"~t~tfile_image image null,~r~n" + &
"~t~tfile_ext varchar(20) null,~r~n" + &
"~t~tfile_height numeric(5) null,~r~n" + &
"~t~tfile_width numeric(5) null,~r~n" + &
"~t~tfile_size numeric(5) null,~r~n" + &
"~t~tlast_modified datetime null,~r~n" + &
"~t~tdescription varchar(500) null,~r~n" + &
"~t~tPrimary Key(id)~r~n" + &
"~t)~r~n" + &
""
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='picture_id' and t.name='ids'~tand t.type = 'U')~r~n" + &
"ALTER table ids add picture_id int null  ~r~n" 

//Added By Mark Lee 02/20/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='access_utility_menu' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add access_utility_menu integer null  ~r~n"

//Added By Mark Lee 03/14/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='temp_usage' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add temp_usage integer null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='dm_usage' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add dm_usage integer null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='negotiated' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add negotiated integer null  ~r~n"

//Added By Ken.Guo 03/20/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'FK_ctx_screen_datafill_ctx_screen') AND parent_object_id = OBJECT_ID(N'ctx_screen_datafill'))~r~n" + &
"ALTER TABLE ctx_screen_datafill DROP CONSTRAINT FK_ctx_screen_datafill_ctx_screen~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"ALTER TABLE ctx_screen_datafill  WITH CHECK ADD CONSTRAINT FK_ctx_screen_datafill_ctx_screen ~r~n" + &
"FOREIGN KEY(data_view_id, screen_id)~r~n" + &
"REFERENCES ctx_screen (data_view_id, screen_id)~r~n" + &
"ON DELETE CASCADE~r~n" 

//Added By Mark Lee 03/25/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='temp_usage_last_date' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add temp_usage_last_date datetime null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='dm_usage_last_date' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add dm_usage_last_date datetime null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='negotiated_last_date' and t.name='ctx_acp_clause'	and t.type = 'U')~r~n" + &
"ALTER table ctx_acp_clause add negotiated_last_date datetime null  ~r~n"

//Added By Ken.Guo 04/09/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='font' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add font varchar(50) null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='font_size' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add font_size integer null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='font_text_color' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add font_text_color numeric(10,0) null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='font_italy' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add font_italy integer null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='font_bold' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add font_bold integer null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='font_underline' and t.name='ctx_user_tv_settings'	and t.type = 'U')~r~n" + &
"ALTER table ctx_user_tv_settings add font_underline integer null  ~r~n"

//Added By Mark Lee 05/09/2013 deal with if use a numeric from the string, we need replace point to quote in the Europe language, so we add this column.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='dec_num' and t.name='security_viewid_options' and t.type = 'U')~r~n" + &
"alter table security_viewid_options add dec_num decimal(15,6) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='dec_num' and t.name='security_user_options' and t.type = 'U')~r~n" + &
"alter table security_user_options add dec_num decimal(15,6) null"

//Added By Mark Lee 06/10/2013 the column  tfield_name_allias does not enought longger.
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if  exists( select 1 from syscolumns c , sysobjects t ~r~n" + &
"where c.id = t.id and c.name = 'tfield_name_allias' and t.name = 'sys_audit' and t.type = 'U' )~r~n" + &
"alter table sys_audit alter column  tfield_name_allias varchar(200) null ~r~n" 

//Added By Ken.Guo 07/03/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='sendprotocol' and t.name='em_smtp_accounts'~tand t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add sendprotocol varchar(50) null  "

//Added By Ken.Guo 07/03/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='sendauthmode_exchange' and t.name='em_smtp_accounts'~tand t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add sendauthmode_exchange integer null  "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'em_exchange_uidl' )~r~n" + &
"~tCreate Table em_exchange_uidl ~r~n" + &
"~t(~r~n" + &
"~t~tid  numeric(10,0) identity  not null,~r~n" + &
"~t~tuser_id varchar(50) not null,~r~n" + &
"~t~temail_address varchar(100) not null,~r~n" + &
"~t~tuidl_file image null,~r~n" + &
"~t~tfile_size numeric(10,0) null,~r~n" + &
"~t~tmodified_date datetime null,~r~n" + &
"~t~tPrimary Key(id)~r~n" + &
"~t)~r~n" + &
""
//Added By Ken.Guo 07/27/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='getauthmode_exchange' and t.name='em_smtp_accounts'~tand t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts add getauthmode_exchange integer null  "

//Added By Ken.Guo 08/06/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table em_mail_items alter column mail_msg_id varchar(500)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table em_user_msg_id alter column mail_msg_id varchar(500)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"alter table em_user_msg_id alter column messageid varchar(500)"

of_execute_sqls("of_ver120_release_table1")

Return 1
end function

public function integer of_ver120_release_view1 ();//====================================================================
// Function: of_ver120_release_view1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 10/19/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"CREATE VIEW v_ctx_custom2 ~r~n" + &
//"AS ~r~n" + &
//"SELECT     ctx_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_11, custom_12,  ~r~n" + &
//"                      custom_13, custom_14, custom_15, custom_16, custom_17, custom_18, custom_19, custom_20, custom_date1, custom_date2, custom_date3,  ~r~n" + &
//"                      custom_date4, custom_date5, custom_date6, custom_date7, custom_date8, custom_date9, custom_date10, custom_date11, custom_date12,  ~r~n" + &
//"                      custom_date13, custom_date14, custom_date15, custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7, custom_n8,  ~r~n" + &
//"                      custom_n9, custom_n10, custom_n11, custom_n12, custom_n13, custom_n14, custom_n15, custom_n16, custom_n17, custom_n18, custom_n19,  ~r~n" + &
//"                      custom_n20, custom_n21, custom_n22, custom_n23, custom_n24, custom_n25, custom_21, custom_22, custom_notes_1, custom_notes_2,  ~r~n" + &
//"                      custom_notes_3, custom_notes_4, custom_notes_5, custom_money_1, custom_money_2, custom_money_3, custom_percent_1, custom_percent_2,  ~r~n" + &
//"                      custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_8, custom_percent_9,  ~r~n" + &
//"                      custom_percent_10 ~r~n" + &
//"FROM         ctx_custom ~r~n" 

//Added gavins 20121203
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='V_ctx_contract_contacts' and type = 'V')  " + &
"  drop view V_ctx_contract_contacts "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE VIEW  V_ctx_contract_contacts " + &
"AS SELECT     contact_id,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS contact_phone,  " + &
"          (SELECT     TOP 1 contact_email  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code   " + &
"                                         FROM          code_lookup AS code_lookup_2  " + &
"                                        WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Email')  )) ) AS contact_email,  " + &
"          (SELECT     TOP 1 phone  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"            WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id) AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup AS code_lookup_1  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Fax') )) ) AS contact_Fax,   " + &
"          (SELECT     TOP 1 ext  " + &
"            FROM          CTX_CONTACTS_NUMBERS AS A  " + &
"           WHERE      (contact_id = CTX_CONTRACT_CONTACTS.contact_id)  AND (via =  " + &
"                                       (SELECT     TOP 1 lookup_code  " + &
"                                         FROM          code_lookup  " + &
"                                         WHERE      (lookup_name = 'Contract Contact Via') AND (code = 'Phone') )) ) AS ext,   " + &
"            association, notes, owner, access, ctx_id, ic_area,default_email,  " + &
"				custom_n1,custom_n2,custom_n3,custom_percent_1,custom_percent_2,custom_1,custom_2,custom_3,association2, association3, association4, association5,association6, " + &
" association7,association8, association9, association10 " + &
"FROM         CTX_CONTRACT_CONTACTS  "

//Add 'association' -- gavins 20121203
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_internal' and type = 'V')  " + &
"  drop view v_ctx_contacts_internal "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_contacts_internal AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       CTX_BASIC_INFO.ctx_id,~r~n" + &
"       app_facility.facility_name,~r~n" + &
"       app_facility.contact as Company_Custom_ID#,~r~n" + &
"       code_lookup.code AS contact_type_code,~r~n" + &
"       code_lookup.description AS contact_type_description,~r~n" + &
"       CTX_CONTACTS.first_name,~r~n" + &
"       CTX_CONTACTS.last_name,~r~n" + &
"       CTX_CONTACTS.middle_name,~r~n" + &
"       code_lookup_4.description AS contact_title,~r~n" + &
"       code_lookup_1.code AS contract_department_code,~r~n" + &
"       code_lookup_1.description AS contract_department_des,~r~n" + &
"       app_facility.street,~r~n" + &
"       app_facility.street_2,~r~n" + &
"       app_facility.street_3,~r~n" + &
"       app_facility.city,~r~n" + &
"       app_facility.zip,~r~n" + &
"       app_facility.state,~r~n" + &
"       CTX_CONTACTS.custom_1,~r~n" + &
"       CTX_CONTACTS.custom_2,~r~n" + &
"       CTX_CONTACTS.custom_3,~r~n" + &
"       CTX_CONTACTS.custom_4,~r~n" + &
"       CTX_CONTACTS.custom_5,~r~n" + &
"       CTX_CONTACTS.custom_6,~r~n" + &
"       CTX_CONTACTS.custom_7,~r~n" + &
"       CTX_CONTACTS.custom_8,~r~n" + &
"       CTX_CONTACTS.custom_9,~r~n" + &
"       CTX_CONTACTS.custom_10,~r~n" + &
"       v_ctx_contract_contacts.access,~r~n" + &
"       v_ctx_contract_contacts.owner,~r~n" + &
"       v_ctx_contract_contacts.notes,~r~n" + &
"       v_ctx_contract_contacts.ext,~r~n" + &
"       v_ctx_contract_contacts.contact_Fax,~r~n" + &
"       v_ctx_contract_contacts.contact_email,~r~n" + &
"       v_ctx_contract_contacts.contact_phone AS phone,~r~n" + &
"       NULL AS Phone_Type_code,~r~n" + &
"       NULL AS Phone_type_Description,~r~n" + &
"       v_ctx_contract_contacts.contact_id,~r~n" + &
"       v_ctx_contract_contacts.association,~r~n" + &
"       v_ctx_contract_contacts.association2,~r~n" + &
"       v_ctx_contract_contacts.association3,~r~n" + &
"       v_ctx_contract_contacts.association4,~r~n" + &
"       v_ctx_contract_contacts.association5,~r~n" + &
"       v_ctx_contract_contacts.association6,~r~n" + &
"       v_ctx_contract_contacts.association7,~r~n" + &
"       v_ctx_contract_contacts.association8,~r~n" + &
"       v_ctx_contract_contacts.association9,~r~n" + &
"       v_ctx_contract_contacts.association10,~r~n" + &
"       v_ctx_contract_contacts.default_email as default_to~r~n" + &
"  FROM CTX_CONTACTS~r~n" + &
"       INNER JOIN v_ctx_contract_contacts ON CTX_CONTACTS.contact_id = v_ctx_contract_contacts.contact_id~r~n" + &
"       INNER JOIN CTX_BASIC_INFO~r~n" + &
"       INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON v_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id~r~n" + &
"       LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = Convert(varchar(50),code_lookup_4.lookup_code)~r~n" + &
" WHERE v_ctx_contract_contacts.ic_area='i'~r~n" + &
"ORDER BY CTX_BASIC_INFO.ctx_id"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from  sysobjects where  name='v_ctx_contacts_external' and type = 'V')  " + &
"  drop view v_ctx_contacts_external "

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_contacts_external AS~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       CTX_BASIC_INFO.ctx_id,~r~n" + &
"       app_facility.facility_name,~r~n" + &
"       app_facility.contact as Company_Custom_ID#,~r~n" + &
"       code_lookup.code AS contact_type_code,~r~n" + &
"       code_lookup.description AS contact_type_description,~r~n" + &
"       CTX_CONTACTS.first_name,~r~n" + &
"       CTX_CONTACTS.last_name,~r~n" + &
"       CTX_CONTACTS.middle_name,~r~n" + &
"       code_lookup_4.description AS contact_title,~r~n" + &
"       code_lookup_1.code AS contract_department_code,~r~n" + &
"       code_lookup_1.description AS contract_department_des,~r~n" + &
"       app_facility.street,~r~n" + &
"       app_facility.street_2,~r~n" + &
"       app_facility.street_3,~r~n" + &
"       app_facility.city,~r~n" + &
"       app_facility.zip,~r~n" + &
"       app_facility.state,~r~n" + &
"       CTX_CONTACTS.custom_1,~r~n" + &
"       CTX_CONTACTS.custom_2,~r~n" + &
"       CTX_CONTACTS.custom_3,~r~n" + &
"       CTX_CONTACTS.custom_4,~r~n" + &
"       CTX_CONTACTS.custom_5,~r~n" + &
"       CTX_CONTACTS.custom_6,~r~n" + &
"       CTX_CONTACTS.custom_7,~r~n" + &
"       CTX_CONTACTS.custom_8,~r~n" + &
"       CTX_CONTACTS.custom_9,~r~n" + &
"       CTX_CONTACTS.custom_10,~r~n" + &
"       v_ctx_contract_contacts.access,~r~n" + &
"       v_ctx_contract_contacts.owner,~r~n" + &
"       v_ctx_contract_contacts.notes,~r~n" + &
"       v_ctx_contract_contacts.ext,~r~n" + &
"       v_ctx_contract_contacts.contact_Fax,~r~n" + &
"       v_ctx_contract_contacts.contact_email,~r~n" + &
"       v_ctx_contract_contacts.contact_phone AS phone,~r~n" + &
"			v_ctx_contract_contacts.custom_n1,~r~n" + &
"			v_ctx_contract_contacts.custom_n2,~r~n" + &
"			v_ctx_contract_contacts.custom_n3,~r~n" + &
"			v_ctx_contract_contacts.custom_percent_1,~r~n" + &
"			v_ctx_contract_contacts.custom_percent_2,~r~n" + &
"			v_ctx_contract_contacts.custom_1 as contract_contact_custom_1,~r~n" + &
"			v_ctx_contract_contacts.custom_2 as contract_contact_custom_2,~r~n" + &
"			v_ctx_contract_contacts.custom_3 as contract_contact_custom_3,~r~n" + &
"       NULL AS Phone_Type_code,~r~n" + &
"       NULL AS Phone_type_Description,~r~n" + &
"       v_ctx_contract_contacts.contact_id,~r~n" + &
"       v_ctx_contract_contacts.association,~r~n" + &
"       v_ctx_contract_contacts.association2,~r~n" + &
"       v_ctx_contract_contacts.association3,~r~n" + &
"       v_ctx_contract_contacts.association4,~r~n" + &
"       v_ctx_contract_contacts.association5,~r~n" + &
"       v_ctx_contract_contacts.association6,~r~n" + &
"       v_ctx_contract_contacts.association7,~r~n" + &
"       v_ctx_contract_contacts.association8,~r~n" + &
"       v_ctx_contract_contacts.association9,~r~n" + &
"       v_ctx_contract_contacts.association10,~r~n" + &
"       v_ctx_contract_contacts.default_email as default_to  ~r~n" + &
"  FROM CTX_CONTACTS~r~n" + &
"       INNER JOIN~r~n" + &
"       v_ctx_contract_contacts ON CTX_CONTACTS.contact_id = v_ctx_contract_contacts.contact_id~r~n" + &
"       INNER JOIN CTX_BASIC_INFO~r~n" + &
"       INNER JOIN app_facility ON CTX_BASIC_INFO.app_facility = app_facility.facility_id ON v_ctx_contract_contacts.ctx_id = CTX_BASIC_INFO.ctx_id~r~n" + &
"       LEFT OUTER JOIN code_lookup ON CTX_CONTACTS.contact_type = code_lookup.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON CTX_CONTACTS.contact_department = code_lookup_1.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON CTX_CONTACTS.contact_title = Convert(varchar(50),code_lookup_4.lookup_code)~r~n" + &
" WHERE v_ctx_contract_contacts.ic_area='e'~r~n" + &
"ORDER BY CTX_BASIC_INFO.ctx_id"

//Added By Mark Lee 03/20/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_clause_library') ~r~n" + &
"drop view v_clause_library ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"Create View v_clause_library As    ~r~n" + &
"	SELECT ctx_acp_clause_id as clause_id,      ~r~n" + &
"		revision,          ~r~n" + &
"		folder_name = (select ctx_acp_folder.folder_name from ctx_acp_folder ~r~n" + &
"			where ctx_acp_folder.ctx_acp_folder_id = ctx_acp_clause.ctx_acp_folder_id ),           ~r~n" + &
"		clause_name,~r~n" + &
"        approved_by as reviewed_by,             ~r~n" + &
"        date_approved as date_reviewed, ~r~n" + &
"        approval_status as review_status,               ~r~n" + &
"        category,       ~r~n" + &
"        checkout_by,    ~r~n" + &
"        checkout_date,     ~r~n" + &
"        temp_usage as template_usage,~r~n" + &
"        dm_usage as document_manager_usage,    ~r~n" + &
"        negotiated,~r~n" + &
"        negotiated_percent =  (Case when dm_usage is null then 0.00~r~n" + &
"			when dm_usage = 0 then  0.00~r~n" + &
"			Else negotiated * 1.00 / dm_usage end )  , ~r~n" + &
"        description,    ~r~n" + &
"        information_message      ~r~n" + &
" FROM ctx_acp_clause"

of_execute_sqls("of_ver120_release_view1")

Return 1

end function

public function integer of_ver120_release_storeprocedure1 ();//====================================================================
// Function: of_ver120_release_storeprocedure1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 10/19/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================


//Added By Ken.Guo 11/21/2012
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"If Exists (SELECT name FROM sysobjects WHERE name = 'up_calculate_date_alarms' AND type = 'P')~r~n" + &
"~tDROP PROCEDURE up_calculate_date_alarms~r~n" 

//You can NOT Change the KeyWord : 'Select Count(1)'    &   ') Where id ='     &    ') , count_all =' . They used by w_ctx_alarm_batch::of_gen_sql_report()
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE PROCEDURE up_calculate_date_alarms ~r~n" + &
"(  ~r~n" + &
"@as_client_id varchar(20)~t~t  ~r~n" + &
")  ~r~n" + &
"AS  ~r~n" + &
"Begin  ~r~n" + &
"~tDeclare @alm_table Varchar(100)~r~n" + &
"~tDeclare @alm_column Varchar(100)~r~n" + &
"~tDeclare @notification_table Varchar(100)~t~r~n" + &
"~tDeclare @id numeric(10,0)~r~n" + &
"~tDeclare @ls_sql varchar(8000)~r~n" + &
"~tDeclare @ls_error varchar(100)~r~n" + &
"~t~r~n" + &
"~tDECLARE cur_alarms CURSOR FOR~r~n" + &
"~tSELECT id,alm_table, alm_column,notification_table FROM ctx_batch_alarm_analysis~r~n" + &
"~tWHERE client_id = @as_client_id~r~n" + &
"~tORDER BY id~r~n" + &
"~t~r~n" + &
"~tOPEN cur_alarms~r~n" + &
"~t~r~n" + &
"~tFETCH NEXT FROM cur_alarms INTO @id,@alm_table, @alm_column, @notification_table~r~n" + &
"~t~r~n" + &
"~t~t~r~n" + &
"~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~tBEGIN~r~n" + &
"~t~tIf @alm_table = 'ctx_basic_info' or @alm_table = 'ctx_custom'~r~n" + &
"~t~t~tSelect @ls_sql = 'Update ctx_batch_alarm_analysis Set count_notset = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ' +@alm_table + ',ic_client_data Where '+@alm_table+'.ctx_id = ic_client_data.data_int and  ic_client_data.client_id = ''' + @as_client_id + ~r~n" + &
"~t~t~t''' And '+@alm_table+'.ctx_id > 0 and ' + @alm_table + '.' + @alm_column + ' is not null and Not Exists(Select 1 From '+ @notification_table +~r~n" + &
"~t~t~t' Where '+@notification_table+'.ctx_id = '+@alm_table+'.ctx_id and '+~r~n" + &
"~t~t~t@notification_table+'.alm_column = '''+@alm_column+''' and '+@notification_table+'.alm_table = '''+@alm_table +''' ) ~r~n" + &
"~t~t~t) , count_all = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ' +@alm_table + ',ic_client_data Where '+@alm_table+'.ctx_id = ic_client_data.data_int and  ic_client_data.client_id = ''' + @as_client_id + ~r~n" + &
"~t~t~t''' And '+@alm_table+'.ctx_id > 0 and ' + @alm_table + '.' + @alm_column + ' is not null~r~n" + &
"~t~t~t) Where id = '+ convert(Varchar(20),@id)~r~n" + &
"~t~tElse If @alm_table = 'ctx_fee_sched_nm'~r~n" + &
"~t~t~tSelect @ls_sql = 'Update ctx_batch_alarm_analysis Set count_notset = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ctx_fee_sched_nm ,ic_client_data Where ctx_fee_sched_nm.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And ctx_fee_sched_nm.ctx_id > 0 and ctx_fee_sched_nm.' + @alm_column + ' is not null and Not Exists(Select 1 From ctx_all_notification Where ctx_all_notification.ctx_id = ctx_fee_sched_nm.ctx_id and ' + ~r~n" + &
"~t~t~t' ctx_fee_sched_nm.fee_sched_nm_id = ctx_all_notification.level_id1 and ctx_all_notification.alm_column = '''+@alm_column+''' and ctx_all_notification.alm_table = ''ctx_fee_sched_nm'' ) ~r~n" + &
"~t~t~t) , count_all = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ctx_fee_sched_nm ,ic_client_data Where ctx_fee_sched_nm.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And ctx_fee_sched_nm.ctx_id > 0 and ctx_fee_sched_nm.' + @alm_column + ' is not null ~r~n" + &
"~t~t~t) Where id = '+ convert(Varchar(20),@id)~r~n" + &
"~t~tElse If @alm_table = 'ctx_am_action_item'~r~n" + &
"~t~t~tSelect @ls_sql = 'Update ctx_batch_alarm_analysis Set count_notset = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ctx_am_action_item,ctx_am_document,ic_client_data Where ctx_am_action_item.doc_id = ctx_am_document.doc_id ~r~n" + &
"~t~t~tand ctx_am_document.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And ctx_am_document.ctx_id > 0 and ctx_am_action_item.' + @alm_column   + ' is not null and Not Exists(Select 1 From ctx_am_ai_notification' +~r~n" + &
"~t~t~t' Where ctx_am_ai_notification.doc_id = ctx_am_action_item.doc_id and ctx_am_ai_notification.seq_id = ctx_am_action_item.seq_id ~r~n" + &
"~t~t~tand ctx_am_ai_notification.alm_column = '''+@alm_column+''' and ctx_am_ai_notification.alm_table = ''ctx_am_action_item'' ) ~r~n" + &
"~t~t~t) , count_all = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ctx_am_action_item,ctx_am_document,ic_client_data Where ctx_am_action_item.doc_id = ctx_am_document.doc_id ~r~n" + &
"~t~t~tand ctx_am_document.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And ctx_am_document.ctx_id > 0 and ctx_am_action_item.' + @alm_column   + ' is not null ~r~n" + &
"~t~t~t) Where id = '+ convert(Varchar(20),@id)~r~n" + &
"~t~tElse If @alm_table = 'ctx_action_item'~r~n" + &
"~t~t~tSelect @ls_sql = 'Update ctx_batch_alarm_analysis Set count_notset = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ctx_action_items,ic_client_data Where ctx_action_items.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And ctx_action_items.ctx_id > 0 and ctx_action_items.' + @alm_column   + ' is not null and Not Exists(Select 1 From ctx_ai_notification Where ctx_ai_notification.ctx_id = ctx_action_items.ctx_id ~r~n" + &
"~t~t~tand ctx_action_items.ctx_action_item_id =  ctx_ai_notification.ctx_action_item_id and ctx_ai_notification.alm_column = '''+@alm_column+''' and ctx_ai_notification.alm_table = ''ctx_action_item'')  ~r~n" + &
"~t~t~t) , count_all = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From ctx_action_items,ic_client_data Where ctx_action_items.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And ctx_action_items.ctx_id > 0 and ctx_action_items.' + @alm_column   + ' is not null ~r~n" + &
"~t~t~t) Where id = '+ convert(Varchar(20),@id)~r~n" + &
"~t~tElse If @alm_table = 'CTX_CUSTOM_MULTI_HDR' ~r~n" + &
"~t~t~tSelect @ls_sql = 'Update ctx_batch_alarm_analysis Set count_notset = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From CTX_CUSTOM_MULTI_HDR,ic_client_data Where CTX_CUSTOM_MULTI_HDR.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And CTX_CUSTOM_MULTI_HDR.ctx_id > 0 and CTX_CUSTOM_MULTI_HDR.' + @alm_column   + ' is not null and Not Exists(Select 1 From ctx_all_notification Where ctx_all_notification.ctx_id = CTX_CUSTOM_MULTI_HDR.ctx_id ~r~n" + &
"~t~t~tand CTX_CUSTOM_MULTI_HDR.hdr_id = ctx_all_notification.level_id1 and ctx_all_notification.alm_column = '''+@alm_column+''' and ctx_all_notification.alm_table = ''CTX_CUSTOM_MULTI_HDR'' ) ~r~n" + &
"~t~t~t) , count_all = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From CTX_CUSTOM_MULTI_HDR,ic_client_data Where CTX_CUSTOM_MULTI_HDR.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And CTX_CUSTOM_MULTI_HDR.ctx_id > 0 and CTX_CUSTOM_MULTI_HDR.' + @alm_column   + ' is not null ~r~n" + &
"~t~t~t) Where id = '+ convert(Varchar(20),@id)~r~n" + &
"~r~n" + &
"~t~tElse If @alm_table = 'CTX_CUSTOM_MULTI_DETAIL'~r~n" + &
"~t~t~tSelect @ls_sql = 'Update ctx_batch_alarm_analysis Set count_notset = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From CTX_CUSTOM_MULTI_DETAIL,ic_client_data Where CTX_CUSTOM_MULTI_DETAIL.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And CTX_CUSTOM_MULTI_DETAIL.ctx_id > 0 and CTX_CUSTOM_MULTI_DETAIL.' + @alm_column   + ' is not null and Not Exists(Select 1 From ctx_all_notification Where ctx_all_notification.ctx_id = CTX_CUSTOM_MULTI_DETAIL.ctx_id and CTX_CUSTOM_MULTI_DETAIL.hdr_id = ctx_all_notification.level_id1 ~r~n" + &
"~t~t~tand CTX_CUSTOM_MULTI_DETAIL.detail_id = ctx_all_notification.level_id2 and ctx_all_notification.alm_column = '''+@alm_column+''' and ctx_all_notification.alm_table = ''CTX_CUSTOM_MULTI_DETAIL'' ) ~r~n" + &
"~t~t~t) , count_all = ~r~n" + &
"~t~t~t(~r~n" + &
"~t~t~tSelect Count(1) From CTX_CUSTOM_MULTI_DETAIL,ic_client_data Where CTX_CUSTOM_MULTI_DETAIL.ctx_id = ic_client_data.data_int and ic_client_data.client_id = ''' + @as_client_id +~r~n" + &
"~t~t~t''' And CTX_CUSTOM_MULTI_DETAIL.ctx_id > 0 and CTX_CUSTOM_MULTI_DETAIL.' + @alm_column   + ' is not null ~r~n" + &
"~t~t~t) Where id = '+ convert(Varchar(20),@id)~r~n" + &
"~t~tElse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect 'Error, Not match',@alm_table,@alm_column~r~n" + &
"~t~t~t~tFETCH NEXT FROM cur_alarms INTO @id,@alm_table, @alm_column, @notification_table~r~n" + &
"~t~t~t~tContinue~t~r~n" + &
"~t~t~tEnd~t~r~n" + &
"~r~n" + &
"~t~tEXEC (@ls_sql)~r~n" + &
"~t~tUpdate ~tctx_batch_alarm_analysis Set sql_preview = @ls_sql Where id = @id~r~n" + &
"~r~n" + &
"~t~tSelect @ls_error = Convert(varchar(100), @@error)~r~n" + &
"~t~tIf @ls_error <> '0' ~r~n" + &
"~t~t~tInsert sys_debug_log(value, debug_date) Values('SP execute error '+@ls_error+'. SQL = '+ @ls_sql,getdate())~r~n" + &
"~r~n" + &
"~t~tFETCH NEXT FROM cur_alarms INTO @id,@alm_table, @alm_column, @notification_table~r~n" + &
"~tEND~r~n" + &
"~t~r~n" + &
"~tCLOSE cur_alarms~r~n" + &
"~tDEALLOCATE cur_alarms~r~n" + &
"End "

//Added By Mark Lee 02/22/2013 for exec statement 
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF EXISTS (SELECT name FROM sysobjects WHERE name = 'sp_exec_sql' AND TYPE = 'P')~r~n" + &
"BEGIN~r~n" + &
"	DROP PROCEDURE sp_exec_sql~r~n" + &
"END~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
" Create PROCEDURE  sp_exec_sql (@arg VARCHAR(4000),@outputs VARCHAR(4000) OUTPUT)~r~n" + &
"AS~r~n" + &
"BEGIN~r~n" + &
"  DECLARE @sql NVARCHAR(4000)  ~r~n" + &
"  DECLARE @ErrorVar INT;  ~r~n" + &
"  IF (@arg IS NULL ) OR (LTRIM(RTRIM(@arg)) = '')~r~n" + &
"  BEGIN~r~n" + &
"	SET @outputs = ''~r~n" + &
"	RETURN ~r~n" + &
"  END ~r~n" + &
"  ~r~n" + &
"  BEGIN TRY~r~n" + &
"	Exec(@arg)~r~n" + &
"  END TRY~r~n" + &
"  BEGIN CATCH~r~n" + &
"	SELECT @ErrorVar = @@ERROR~r~n" + &
"	SELECT @outputs = 'SQL ERROR:'+CAST(@ErrorVar AS NVARCHAR(10)) + ' ERROR_MESSAGE:'+ ERROR_MESSAGE() ~r~n" + &
"  END CATCH~r~n" + &
"END "

//Added By Mark Lee 02/28/2013
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"IF EXISTS (SELECT name FROM sysobjects WHERE name = 'up_copy_lookup_data' AND TYPE = 'P')~r~n" + &
"BEGIN~r~n" + &
"	DROP PROCEDURE up_copy_lookup_data~r~n" + &
"END~r~n" 
//Added By Mark Lee 10/18/2013
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE Procedure  up_copy_lookup_data~r~n" + &
" @SourceDBName nvarchar(100),  ~r~n" + &
" @TargetDBName nvarchar(100),  ~r~n" + &
" @lookup_name varchar(50),~r~n" + &
" @ExistData integer,  ~r~n" + &
" @UpdateData integer~r~n" + &
"As  ~r~n" + &
"Begin  ~r~n" + &
" Declare @SqlString Nvarchar(4000)  ~r~n" + &
" Declare @sql~t~tvarchar(4000), @sqls~t~tvarchar(4000)~r~n" + &
" Declare @existsor int, @max_lookup_code int~r~n" + &
" Declare @lookup_code int~r~n" + &
" Declare @code varchar(50)~r~n" + &
" DECLARE @ParmDefinition nvarchar(500) ~r~n" + &
" ~r~n" + &
" Select @sqls = 'SELECT distinct code FROM '+@SourceDBName+'.dbo.code_lookup WHERE lookup_name NOT IN ~r~n" + &
"~t~t~t~t~t~t(SELECT lookup_name FROM '+@SourceDBName+'.dbo.sys_lookup ) and lookup_name = '''+@lookup_name+''' '~r~n" + &
" ~r~n" + &
" Exec('Declare code_lookup_cursor CURSOR FOR ' + @sqls) ~r~n" + &
" Open code_lookup_cursor;~r~n" + &
" Fetch Next From code_lookup_cursor Into @code ;~r~n" + &
" ~r~n" + &
" While @@FETCH_STATUS = 0 ~r~n" + &
" Begin ~r~n" + &
"~t SET @ParmDefinition = N'@existsor integer OUTPUT, @lookup_code integer OUTPUT' ~r~n" + &
"~t~r~n" + &
"~t /* adjust the data exist or not '+@TargetDBName+N'.dbo. */~r~n" + &
"~t select @SqlString = N'SELECT @existsor = count(1), @lookup_code = lookup_code FROM '+@TargetDBName+N'.dbo.code_lookup WHERE lookup_name NOT IN ~r~n" + &
"~t~t~t~t~t~t~t(SELECT lookup_name FROM '+@TargetDBName+N'.dbo.sys_lookup ) and lookup_name = '''+@lookup_name +N'''and code ='''+ @code + N''' Group by lookup_code '~r~n" + &
"~t exec sp_executesql @SqlString, @ParmDefinition, @existsor OUTPUT, @lookup_code OUTPUT ; ~r~n" + &
"~r~n" + &
"~t If (@existsor is null or @existsor = 0  )~r~n" + &
"~t Begin~r~n" + &
"~t~t/* insert */~r~n" + &
"~t~tselect @SqlString = N'Select @max_lookup_code = MAX(lookup_code) From '+@TargetDBName+N'.dbo.code_lookup '~r~n" + &
"~t~texec sp_executesql @SqlString, N'@max_lookup_code integer OUTPUT', @max_lookup_code = @max_lookup_code OUTPUT;~r~n" + &
"~t~tSelect @max_lookup_code = @max_lookup_code + 1~r~n" + &
"~r~n" + &
"~t~tselect @sql = 'INSERT INTO '+@TargetDBName+'.dbo.code_lookup (lookup_code,lookup_name,code,description~r~n" + &
"~t~t~t   ,type,custom_1,custom_2,custom_3,custom_4,custom_5,custom_6,caqh_code,ic_n,ic_c,modify_date,Large_Description_1~r~n" + &
"~t~t~t   ,Large_Description_2,Money_1,Money_2,Integer_1,Integer_2,Integer_3,Integer_4,Integer_5,Integer_6,Integer_7~r~n" + &
"~t~t~t   ,Integer_8,datetime_1,datetime_2)~r~n" + &
"~t~t~t~tSELECT Top 1 '+Cast(@max_lookup_code as varchar)+',lookup_name,code,description,type,custom_1~r~n" + &
"~t~t~t~t  ,custom_2,custom_3,custom_4,custom_5,custom_6,caqh_code,ic_n,ic_c, GETDATE(),Large_Description_1,Large_Description_2~r~n" + &
"~t~t~t~t  ,Money_1,Money_2,Integer_1,Integer_2,Integer_3,Integer_4,Integer_5,Integer_6,Integer_7,Integer_8,datetime_1,datetime_2~r~n" + &
"~t~t~t~t  FROM '+@SourceDBName+'.dbo.code_lookup where lookup_name = '''+@lookup_name+''' and code = '''+@code+''' '~r~n" + &
"~t~texecute (@sql)~r~n" + &
"~t End ~r~n" + &
"~t Else~r~n" + &
"~t Begin~r~n" + &
"~t~tIf (@ExistData = 0 and @UpdateData = 1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tselect @sql =  'UPDATE '+@TargetDBName+'.dbo.code_lookup ~r~n" + &
"~t~t~t~tSET lookup_name = b.lookup_name,code = b.code,description = b.description,type = b.type,custom_1 = b.custom_1~r~n" + &
"~t~t~t~t~t,custom_2 = b.custom_2,custom_3 = b.custom_3,custom_4 = b.custom_4,custom_5 = b.custom_5,custom_6 = b.custom_6~r~n" + &
"~t~t~t~t~t,caqh_code = b.caqh_code,ic_n = b.ic_n,ic_c = b.ic_c,modify_date = GETDATE() ,Large_Description_1 = b.Large_Description_1~r~n" + &
"~t~t~t~t~t,Large_Description_2 = b.Large_Description_2,Money_1 = b.Money_1,Money_2 = b.Money_2,Integer_1 = b.Integer_1~r~n" + &
"~t~t~t~t~t,Integer_2 = b.Integer_2,Integer_3 = b.Integer_3,Integer_4 = b.Integer_4,Integer_5 = b.Integer_5,Integer_6 = b.Integer_6~r~n" + &
"~t~t~t~t~t,Integer_7 = b.Integer_7,Integer_8 = b.Integer_8,datetime_1 = b.datetime_1,datetime_2 = b.datetime_2~r~n" + &
"~t~t~t~t~tFrom '+@SourceDBName+'.dbo.code_lookup b ,'+@TargetDBName+'.dbo.code_lookup a ~r~n" + &
"~t~t~t~t~tWHERE  b.lookup_name = '''+@lookup_name+''' and b.code = '''+@code+''' and a.lookup_code = '+Cast(@lookup_code as varchar)~r~n" + &
"~t~t~texecute (@sql)~r~n" + &
"~t~tEnd ~r~n" + &
"~t~t~r~n" + &
"~t End ~r~n" + &
"~t Fetch Next From code_lookup_cursor Into @code ;~r~n" + &
"  End ~r~n" + &
"  CLOSE code_lookup_cursor;~r~n" + &
"  DEALLOCATE code_lookup_cursor;~r~n" + &
" ~r~n" + &
" End ~r~n"

//dataflow - alfee 03.23.2010 (to avoid a bug in APB 6.0) 
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"if exists (select name from sysobjects where name = 'sp_appeon_pkeys' and type = 'P') " + &
	"DROP PROCEDURE sp_appeon_pkeys "
	
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
	"CREATE PROCEDURE sp_appeon_pkeys (@table_name varchar(50)) " + &
	"AS " + &
	"BEGIN " + &
	"	Execute sp_pkeys @table_name " + &
	"END " 


of_execute_sqls("of_ver120_release_storeprocedure1")


return 1
end function

public function integer of_ver120_release_trigger1 ();//====================================================================
// Function: of_ver120_release_trigger1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 10/19/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

// added code here
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_update' and type = 'TR') ~r~n" + &
//"	drop trigger tri_ctx_custom_update ~r~n" 

of_execute_sqls("of_ver120_release_trigger1")

return 1
end function

public function integer of_ver120_release_createfulltext1 ();//====================================================================
// Function: of_ver120_release_createfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 10/19/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//if use this function, need enable this comment.
//of_enable_fulltext()				//Added By Mark Lee 12/22/2015

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_catalog') " + &
//"begin " + &
//"   	exec sp_fulltext_catalog 'ctx_custom_catalog','create' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver120_release_createfulltext1")			//Added By Mark Lee 12/22/2015

return 1 
end function

public function integer of_ver120_release_dropfulltext1 ();//====================================================================
// Function: of_ver120_release_dropfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 10/19/12
//--------------------------------------------------------------------
//	Copyright (c) 2008-2012 Contract Logix,Inc. All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//if use this function, need enable this comment.
//of_enable_fulltext()						//Added By Mark Lee 12/22/2015

//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'ctx_id','IsFulltextIndexed' ) = 1) " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_custom','ctx_id','drop' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver120_release_dropfulltext1")					//Added By Mark Lee 12/22/2015
return 1

end function

public function integer of_ver120_updates ();//Added By Mark Lee 10/19/12

of_ver120_release_table1()
of_ver120_release_view1()
of_ver120_release_storeprocedure1()
of_ver120_release_trigger1() 


Return 1

end function

public function integer of_ver130_release_table1 ();//====================================================================
// Function: of_ver130_release_table1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 08/14/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_user_options'  AND ~t type = 'U')~r~n" + &
//"CREATE TABLE security_user_options~r~n" + &
//"(~r~n" + &
//"user_id varchar(50) not null,~r~n" + &
//"option_name varchar(100)  not null,~r~n" + &
//"option_value varchar(100) null,~r~n" + &
//"last_update datetime null,~r~n" + &
//"Primary Key(user_id,option_name)~r~n" + &
//"~t)"

//Added By Mark Lee 08/14/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='sql_text' and t.name='export_header'~tand t.type = 'U')~r~n" + &
"	Alter table export_header add sql_text text null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='web_visible' and t.name='export_fields'~tand t.type = 'U')~r~n" + &
"alter table export_fields  add web_visible char(1) default '1'~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='data_view_label' and t.name='export_fields'~tand t.type = 'U')~r~n" + &
"alter table export_fields add data_view_label varchar(100) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='ctx_table_name' and t.name='export_fields'~tand t.type = 'U')~r~n" + &
"alter table export_fields add ctx_table_name varchar(50) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_form' AND type = 'U' )~r~n" + &
"CREATE TABLE request_form(~r~n" + &
"~trequest_id int  NOT NULL,~r~n" + &
"~trequest_name varchar(50) NOT NULL,~r~n" + &
"~texport_id int NULL,~r~n" + &
"~tcategory numeric(6, 0) NULL,~r~n" + &
"~tstatus varchar(20) NULL,~r~n" + &
"~tsubmit_request_to varchar(2000) NULL,~r~n" + &
"~towner_user varchar(50) NULL,~r~n" + &
"~ttemplate_id numeric(10, 0) NULL,~r~n" + &
"~tallow_update_doc char(1) DEFAULT ('1') ,~r~n" + &
"~tinclude_request_notes char(1) DEFAULT ('1') ,~r~n" + &
"~tuser_id varchar(50) NULL,~r~n" + &
"~tmodify_date datetime NULL,~t~r~n" + &
"~tdescription varchar(500) NULL,~r~n" + &
"~tsend_email_setting char(1) NULL,~r~n" + &
"~towner_email_id int NULL,~r~n" + &
"~tapprove_email_id int NULL,~r~n" + &
"~treject_email_id int NULL,~t~r~n" + &
"~tcc_owner_user varchar(50) NULL,~r~n" + &
"~tcc_approve_user varchar(50) NULL,~r~n" + &
"~tcc_reject_user varchar(50) NULL," + &
"	constraint PK_request_form_request_id Primary Key (request_id)~r~n" + &
")"

 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='request_form_id' and t.name='ids'~tand t.type = 'U')~r~n" + &
"ALTER table ids add request_form_id int null  ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='table_name' and t.name='ctx_screen' and t.type = 'U')~r~n" + &
" Alter table ctx_screen add table_name varchar(50) null "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='ctx_web_link' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add ctx_web_link varchar(100) null  ~r~n"

//Added By Ken.Guo 08/20/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'report_auto_settings' )~r~n" + &
"~tCreate Table report_auto_settings ~r~n" + &
"~t(~r~n" + &
"~t~tid  numeric(10,0) identity  not null,~r~n" + &
"~t~treport_id int not null,~r~n" + &
"~t~toutput_type varchar(30) null,~r~n" + &
"~t~tfrequency int null,~r~n" + &
"~t~tinterval numeric(10,0) null,~r~n" + &
"~t~tactive_status int null,~r~n" + &
"~t~tlast_run datetime null,~r~n" + &
"~t~terror_code int null,~r~n" + &
"~t~trun_time datetime null,~r~n" + &
"~t~temail_subject varchar(500) null,~r~n" + &
"~t~temail_from varchar(500) null,~r~n" + &
"~t~temail_to varchar(500) null,~r~n" + &
"~t~temail_cc varchar(500) null,~r~n" + &
"~t~temail_message varchar(500) null,~r~n" + &
"~t~tPrimary Key(id)~r~n" + &
"~t)"

//Added By Mark Lee 08/21/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='use_web_email' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add use_web_email char(1) null  ~r~n"

//Added By Gavins 08/29/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'em_attachment_temp' )~r~n" + &
"CREATE TABLE [em_attachment_temp](  ~r~n" + &
"	[sid] [int] IDENTITY(1,1) NOT NULL, ~r~n" + &
"	[accesstoken] [nvarchar](50) NOT NULL, ~r~n" + &
"	[filename] [nvarchar](50) NOT NULL, ~r~n" + &
"	[fileid] [nvarchar](50) NOT NULL, ~r~n" + &
"	[lastdate] [datetime] NOT NULL, ~r~n" + &
"	[filesize] [numeric](18, 0) NULL, ~r~n" + &
"	[attachment] [image] NOT NULL, ~r~n" + &
"	[userid] [nvarchar](20) NULL, ~r~n" + &
"	PRIMARY KEY ( sid ) ) ~r~n" 

//Added By Gavins 09/04/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'em_mail_audit_Sendinfo' )~r~n" + &
"create table em_mail_audit_Sendinfo(~r~n" + &
"	id int IDENTITY(1,1), ~r~n" + &
"	Sender varchar(20), ~r~n" + &
"	cachename varchar(100),~r~n" + &
"	begintime datetime,~r~n" + &
"	endtime datetime~r~n" + &
"	,total int ,~r~n" + &
"	success int ,~r~n" + &
"	failure int,~r~n" + &
"	error varchar(1000),~r~n" + &
"	category varchar(10),~r~n" + &
"	PRIMARY KEY ( id )  )~r~n"

//Added By Mark Lee 09/06/2013 "	 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_form_detail' AND type = 'U' )~r~n" + &
"CREATE TABLE request_form_detail(~r~n" + &
"~tdetail_id int NOT NULL,~r~n" + &
"~trequest_id int NOT NULL,~r~n" + &
"~ttypes varchar(20) NULL,~r~n" + &
"~texport_col_name varchar(50) NULL,~r~n" + &
"~torder_no int NULL,~r~n" + &
"~tuser_id varchar(50) NULL,~r~n" + &
"~tmodify_date datetime NULL,~r~n" + &
"~thint_message varchar(200) NULL,~r~n" + &
"~texport_id int NULL,~r~n" + &
"~trequired char(1) NULL,~r~n" + &
"~trec_id numeric(10, 0) NULL,~r~n" + &
" CONSTRAINT PK_request_form_detail_detail_id PRIMARY KEY CLUSTERED (detail_id ASC)~r~n" + &
")~r~n"

//Added By Mark Lee 09/06/2013
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='request_form_detail_id' and t.name='ids'~tand t.type = 'U')~r~n" + &
"ALTER table ids add request_form_detail_id int null  ~r~n" 

//Added By chenjian 2013-09-11
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='disabled_status' and t.name='security_users'	and t.type = 'U')~r~n" + &
"ALTER table security_users add disabled_status int null  ~r~n"

//Added By Ken.Guo 09/23/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='check_registry' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add check_registry integer null  "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='check_trusted_sites' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"ALTER table icred_settings add check_trusted_sites integer null  "

//Added By Mark Lee 09/24/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_form_document' AND type = 'U' )~r~n" + &
"CREATE TABLE request_form_document(~r~n" + &
"~tdocument_id int NOT NULL,~r~n" + &
"~trequest_id int NOT NULL,~r~n" + &
"~tdocument_name varchar(200) NULL,~r~n" + &
"~tdoc_ext varchar(10) NULL,~r~n" + &
"~tuser_id varchar(50) NULL,~r~n" + &
"~tmodify_date datetime NULL,~r~n" + &
"~tdescription varchar(2000) NULL,~r~n" + &
"~trequired char(1) NULL,~r~n" + &
"~thint_message varchar(200) NULL,~r~n" + &
" CONSTRAINT PK_request_form_document_document_id PRIMARY KEY CLUSTERED(document_id ASC)~r~n" + &
")"

 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='request_form_document_id' and t.name='ids' and t.type = 'U')~r~n" + &
"ALTER table ids add request_form_document_id int null  ~r~n" 

//Added By Jay Chen 10-09-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='esign_type' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add esign_type varchar(50) null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='echo_apicode' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add echo_apicode varchar(50) null  ~r~n"

//Added By Jay Chen 10-10-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_fileid' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document alter column es_fileid varchar(500)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_docid' and t.name='ctx_am_document'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document alter column es_docid varchar(500)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_fileid' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit  alter column es_fileid varchar(500)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_docid' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit  alter column es_docid varchar(500)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_docid' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_action_item  alter column es_docid varchar(500)"

//Added By Jay Chen 10-11-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='esign_type' and t.name='ctx_am_document' and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add esign_type varchar(50) null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='esign_type' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add esign_type varchar(50) null  ~r~n"

//Added By Mark Lee 10/09/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='CTX_NOTIFICATION'~tand t.type = 'U')~r~n" + &
"alter table CTX_NOTIFICATION alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_notification_templates'~tand t.type = 'U')~r~n" + &
"alter table ctx_notification_templates alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_notification_templates_attachments'~tand t.type = 'U')~r~n" + &
"alter table ctx_notification_templates_attachments alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_ai_notification'~tand t.type = 'U')~r~n" + &
"alter table ctx_ai_notification alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_am_ai_notification'~tand t.type = 'U')~r~n" + &
"alter table ctx_am_ai_notification alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_alarm_attachment'~tand t.type = 'U')~r~n" + &
"alter table ctx_alarm_attachment alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_ai_alarm_attachment'~tand t.type = 'U')~r~n" + &
"alter table ctx_ai_alarm_attachment alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_all_notification'~tand t.type = 'U')~r~n" + &
"alter table ctx_all_notification alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_am_ai_alarm_attachment'~tand t.type = 'U')~r~n" + &
"alter table ctx_am_ai_alarm_attachment alter column alm_attachment_name varchar(1000)"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='alm_attachment_name' and t.name='ctx_all_alarm_attachment'~tand t.type = 'U')~r~n" + &
"alter table ctx_all_alarm_attachment alter column alm_attachment_name varchar(1000)"

//Added By Mark Lee 10/14/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='lookup_field_style' and t.name='export_fields'~tand t.type = 'U')~r~n" + &
"alter table export_fields add lookup_field_style char(1) null"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='lookup_code' and t.name='export_fields'~tand t.type = 'U')~r~n" + &
"alter table export_fields add lookup_code varchar(40) null"

//Added By Ken.Guo 10/21/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='server' and t.name='em_smtp_accounts'~tand t.type = 'U')~r~n" + &
"ALTER table em_smtp_accounts alter column server varchar(100) null  "

//Added By Mark Lee 10/30/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_webform' AND type = 'U' )~r~n" + &
" CREATE TABLE request_webform(~r~n" + &
"~trwf_id int IDENTITY(1,1) NOT NULL,~r~n" + &
"~trequest_id int NOT NULL,~r~n" + &
"~trequest_name varchar(50) NOT NULL,~r~n" + &
"~texport_id int NULL,~r~n" + &
"~tcategory numeric(6, 0) NULL,~r~n" + &
"~tstatus varchar(20) NULL,~r~n" + &
"~tsubmit_request_to varchar(2000) NULL,~r~n" + &
"~towner_user varchar(50) NULL,~r~n" + &
"~ttemplate_id numeric(10, 0) NULL,~r~n" + &
"~tallow_update_doc char(1) NULL,~r~n" + &
"~tinclude_request_notes char(1) NULL,~r~n" + &
"~tuser_id varchar(50) NULL,~r~n" + &
"~tmodify_date datetime NULL,~r~n" + &
"~tnotes varchar(8000) NULL,~r~n" + &
"~tdescription varchar(500) NULL,~r~n" + &
"~tsend_email_setting char(1) NULL,~r~n" + &
"~towner_email_id int NULL,~r~n" + &
"~tapprove_email_id int NULL,~r~n" + &
"~treject_email_id int NULL,~r~n" + &
"~tcc_owner_user varchar(50) NULL,~r~n" + &
"~tcc_approve_user varchar(50) NULL,~r~n" + &
"~tcc_reject_user varchar(50) NULL,~r~n" + &
"~tcreate_user varchar(50) NULL,~r~n" + &
" CONSTRAINT PK_request_webform_rwf_id PRIMARY KEY CLUSTERED(rwf_id ASC)~r~n" + &
") "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_webform_detail' AND type = 'U' )~r~n" + &
"CREATE TABLE request_webform_detail(~r~n" + &
"			  rwfd_id int IDENTITY(1,1) NOT NULL," + &
"              detail_id int NULL,~r~n" + &
"              rwf_id int NOT NULL,~r~n" + &
"              request_id int NOT NULL,~r~n" + &
"			  rowid int NOT NULL,~r~n" + &
"              types varchar(20)  NULL,~r~n" + &
"              col_name varchar(50)  NULL,~r~n" + &
"              table_name varchar(50)  NULL,~r~n" + &
"              export_field_name varchar(40)  NULL,~r~n" + &
"              export_col_name varchar(50)  NULL,~r~n" + &
"              order_no int NULL,~r~n" + &
"              user_id varchar(50)  NULL,~r~n" + &
"              modify_date datetime NULL,~r~n" + &
"              hint_message varchar(200)  NULL,~r~n" + &
"              col_label varchar(100)  NULL,~r~n" + &
"              export_id int NULL,~r~n" + &
"              required char(1)  NULL,~r~n" + &
"              rec_id numeric(10, 0) NULL,~r~n" + &
"              lu_field_name varchar(50)  NULL,~r~n" + &
"              lookup_field_style char(1)  NULL,~r~n" + &
"              lookup_code varchar(40)  NULL,~r~n" + &
"              col_length int NULL,~r~n" + &
"              col_type varchar(128)  NULL,~r~n" + &
"			  col_string_value varchar(1000) null,  ~r~n"  + &
"			  col_decimal_value numeric(14, 4) null,  ~r~n" + &
"			  col_number_value numeric(10, 0) null,  ~r~n"  + & 		
"			  col_datetime_value datetime null,  ~r~n"  + & 		
"			  prec smallint null,  ~r~n"  + & 		
"			  scale int null,  ~r~n"  + & 		
"~tCONSTRAINT [PK_request_webform_detail_rwfd_id] PRIMARY KEY CLUSTERED ~r~n" + &
"~t(rwfd_id)~r~n" + &
") "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_webform_document' AND type = 'U' )~r~n" + &
"CREATE TABLE request_webform_document(~r~n" + &
"      		  rwfdoc_id int IDENTITY(1,1) NOT NULL," + &
"              document_id int NULL,~r~n" + &
"              rwf_id int NOT NULL,~r~n" + &
"              request_id int NOT NULL,~r~n" + &
"              document_name varchar(200)  NULL,~r~n" + &
"              doc_ext varchar(10)  NULL,~r~n" + &
"              user_id varchar(50)  NULL,~r~n" + &
"              modify_date datetime NULL,~r~n" + &
"              description varchar(2000)  NULL,~r~n" + &
"              required char(1)  NULL,~r~n" + &
"              hint_message varchar(200)  NULL,~r~n" + &
"              document_content image NULL,~r~n" + &
"			  doc_type varchar(6) NOT null, ~r~n" + &
"			  file_id int null, ~r~n" + &
"~tCONSTRAINT [PK_request_webform_document_rwfdoc_id] PRIMARY KEY CLUSTERED ~r~n" + &
"~t(rwfdoc_id)~r~n" + &
") "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_webform_log' AND type = 'U' )~r~n" + &
"CREATE TABLE request_webform_log(~r~n" + &
"~tlog_id int IDENTITY(1,1) NOT NULL,~r~n" + &
"~trwf_id int NOT NULL,~r~n" + &
"~tnotes varchar(8000) NULL,~r~n" + &
"~tuser_id varchar(50) NULL,~r~n" + &
"~tmodify_date datetime NULL,~r~n" + &
"~taction varchar(20) NULL,~r~n" + &
"~tctx_id int NULL,~r~n" + &
" CONSTRAINT PK_request_webform_log_log_id PRIMARY KEY CLUSTERED (log_id ASC)~r~n" + &
") "

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'request_form_role' AND type = 'U' )~r~n" + &
"Create table request_form_role~r~n" + &
"(~r~n" + &
"~trequest_role_id int not null,~r~n" + &
"~trequest_id int NOT NULL,~r~n" + &
"~trole_id~tint null,~r~n" + &
"~tchecked~tchar(1) null,~r~n" + &
"~tCONSTRAINT [PK_request_form_role_request_role_id] PRIMARY KEY CLUSTERED ~r~n" + &
"~t(request_role_id)~r~n" + &
")"

//Added By Mark Lee 11/01/2013
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='request_form_role_id' and t.name='ids'~tand t.type = 'U')~r~n" + &
"ALTER table ids add request_form_role_id int null  ~r~n" 

//Added By Jay Chen 11-25-2013
int i 
string ls_custom,ls_custom_n,ls_custom_date,ls_custom_m,ls_custom_percent,ls_custom_fee
for i = 11 to 50
	ls_custom = 'custom_' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom+"'  and t.name='ctx_custom_multi_hdr' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_hdr add "+ls_custom+" varchar(255) null  ~r~n"
next
for i = 11 to 50
	ls_custom_n = 'custom_n' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_n+"'  and t.name='ctx_custom_multi_hdr' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_hdr add "+ls_custom_n+"  numeric(12, 2) null  ~r~n"
next
for i = 11 to 20
	ls_custom_date = 'custom_date' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_date+"'  and t.name='ctx_custom_multi_hdr' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_hdr add "+ls_custom_date+" datetime null  ~r~n"
next
for i = 6 to 20
	ls_custom_m = 'custom_m' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_m+"'  and t.name='ctx_custom_multi_hdr' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_hdr add "+ls_custom_m+" money null  ~r~n"
next
for i = 6 to 20
	ls_custom_percent = 'custom_percent_' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_percent+"'  and t.name='ctx_custom_multi_hdr' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_hdr add "+ls_custom_percent+" numeric(12, 4) null  ~r~n"
next
for i = 11 to 50
	ls_custom = 'custom_' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom+"'  and t.name='ctx_custom_multi_detail' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_detail add "+ls_custom+" varchar(255) null  ~r~n"
next
for i = 6 to 50
	ls_custom_n = 'custom_int' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_n+"'  and t.name='ctx_custom_multi_detail' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_detail add "+ls_custom_n+" int null  ~r~n"
next
for i = 6 to 20
	ls_custom_fee = 'custom_fee' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_fee+"'  and t.name='ctx_custom_multi_detail' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_detail add "+ls_custom_fee+" money null  ~r~n"
next
for i = 6 to 20
	ls_custom_date = 'custom_date' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_date+"'  and t.name='ctx_custom_multi_detail' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_detail add "+ls_custom_date+" datetime null  ~r~n"
next
for i = 6 to 50
	ls_custom_n = 'custom_n' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_n+"'  and t.name='ctx_custom_multi_detail' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_detail add "+ls_custom_n+" NUMERIC (10, 3) null  ~r~n"
next
for i = 3 to 20
	ls_custom_percent = 'custom_percent_' + string(i)
	is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
	"if not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
	"where c.id=t.id  and c.name='"+ls_custom_percent+"'  and t.name='ctx_custom_multi_detail' and t.type = 'U')~r~n" + &
	"ALTER table ctx_custom_multi_detail add "+ls_custom_percent+" NUMERIC (12, 4) null  ~r~n"
next
//end add

//Added By Ken.Guo 11/27/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF EXISTS (SELECT 1 FROM sysindexes  WHERE name = 'idx_code_lookup') ~r~n" + &
"	Drop INDEX code_lookup.idx_code_lookup"

//Added By Mark Lee 11/28/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='come_from' and t.name='ctx_basic_info'~tand t.type = 'U')~r~n" + &
" alter table ctx_basic_info add come_from varchar(50) null "

//Added By Ken.Guo 11/29/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='DisplayNotes' and t.name='wf_action_types'~tand t.type = 'U')~r~n" + &
"ALTER table wf_action_types add DisplayNotes integer null  ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(~tselect 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='Notes' and t.name='wf_action_types'~tand t.type = 'U')~r~n" + &
"ALTER table wf_action_types add Notes varchar(2000) null  ~r~n" 

//Added By Ken.Guo 12/04/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='check_dbowner' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add check_dbowner integer null  ~r~n"

//Added By Jay Chen 12-13-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='pic_painter_id' and t.name='conv_view_pic'	and t.type = 'U')~r~n" + &
"ALTER table conv_view_pic add pic_painter_id NUMERIC(10,0) null  ~r~n"

//Added By Ken.Guo 12/17/2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"Alter Table ctx_notification Alter Column alm_attachment_name varchar(1000)"

//Added By Jay Chen 12-24-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='alm_column' and t.name='ctx_am_action_item'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_action_item add alm_column varchar(40) null  ~r~n"

//Added By Jay Chen 01-02-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_screen_bak_picture' AND type = 'U' )~r~n" + &
"Create table ctx_screen_bak_picture~r~n" + &
"(~r~n" + &
"~tdata_view_id int not null,~r~n" + &
"~tscreen_id int not NULL,~r~n" + &
"~tseq_no int not null,~r~n" + &
"~tpic_name varchar(50) ,~r~n" + &
"~tpic_filename varchar(100) ,~r~n" + &
"~tpic_bitmap IMAGE ,~r~n" + &
"~tbackupdate datetime ,~r~n" + &
"~tpic_painter_id NUMERIC(10,0)  ~r~n" + &
")"

//Added By Jay Chen 01-07-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'ctx_contact_custom_config' AND type = 'U' )~r~n" + &
"Create table ctx_contact_custom_config~r~n" + &
"(~r~n" + &
"~tfield_name varchar(50) ,~r~n" + &
"~tfield_label varchar(100) ,~r~n" + &
"~tfield_style varchar(50) ,~r~n" + &
"~tfield_dddw_namedesc varchar(100), ~r~n" + &
"~tfield_dddw_name varchar(100), ~r~n" + &
"~tfield_dddw_display_column varchar(50), ~r~n" + &
"~tfield_dddw_data_column varchar(50) ~r~n" + &
")"


//Added By Mark Lee 01/08/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='send_range' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
" alter table icred_settings add send_range char(1) null "

//Added By Jay Chen 01-15-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='field_dddw_add_fly' and t.name='ctx_contact_custom_config'~tand t.type = 'U')~r~n" + &
" alter table ctx_contact_custom_config add field_dddw_add_fly char(1) null "

//Added By Ken 01/23/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='copy_file' and t.name='import_hdr'~tand t.type = 'U')~r~n" + &
" alter table import_hdr add copy_file integer null "

//Added By Mark Lee 02/17/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='sub_module_name' and t.name='security_sub_module'	and t.type = 'U')~r~n" + &
 " alter table security_sub_module alter column sub_module_name varchar(50) not null "
 
 //Added By Mark Lee 02/19/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='ctx_id' and t.name='request_webform' and t.type = 'U')~r~n" + &
 " alter table request_webform add ctx_id int null "
 
 //Added By Jay Chen 02-20-2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='wf_validate' and t.name='wf_workflow' and t.type = 'U')~r~n" + &
 " alter table wf_workflow add wf_validate int null "
 
 //Added By Jay Chen 02-25-2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='file_size' and t.name='ctx_pictures'~tand t.type = 'U')~r~n" + &
"alter table ctx_pictures alter column file_size NUMERIC(10,0) null"


of_execute_sqls("of_ver130_release_table1")

Return 1
end function

public function integer of_ver130_release_view1 ();//====================================================================
// Function: of_ver130_release_view1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 08/14/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"CREATE VIEW v_ctx_custom2 ~r~n" + &
//"AS ~r~n" + &
//"SELECT     ctx_id, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10, custom_11, custom_12,  ~r~n" + &
//"                      custom_13, custom_14, custom_15, custom_16, custom_17, custom_18, custom_19, custom_20, custom_date1, custom_date2, custom_date3,  ~r~n" + &
//"                      custom_date4, custom_date5, custom_date6, custom_date7, custom_date8, custom_date9, custom_date10, custom_date11, custom_date12,  ~r~n" + &
//"                      custom_date13, custom_date14, custom_date15, custom_n1, custom_n2, custom_n3, custom_n4, custom_n5, custom_n6, custom_n7, custom_n8,  ~r~n" + &
//"                      custom_n9, custom_n10, custom_n11, custom_n12, custom_n13, custom_n14, custom_n15, custom_n16, custom_n17, custom_n18, custom_n19,  ~r~n" + &
//"                      custom_n20, custom_n21, custom_n22, custom_n23, custom_n24, custom_n25, custom_21, custom_22, custom_notes_1, custom_notes_2,  ~r~n" + &
//"                      custom_notes_3, custom_notes_4, custom_notes_5, custom_money_1, custom_money_2, custom_money_3, custom_percent_1, custom_percent_2,  ~r~n" + &
//"                      custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_8, custom_percent_9,  ~r~n" + &
//"                      custom_percent_10 ~r~n" + &
//"FROM         ctx_custom ~r~n" 

//of_execute_sqls("of_ver130_release_view1")


//Added By Jay Chen 11-26-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_multi_header') ~r~n" + &
"drop view v_ctx_multi_header ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"Create View v_ctx_multi_header As    ~r~n" + &
" SELECT ctx_id,hdr_id,custom_1,custom_2,custom_3,custom_4,custom_5,custom_6,custom_7,custom_8,custom_9,custom_10, ~r~n" + &
" custom_date1,custom_date2,custom_date3,custom_date4,custom_date5,custom_date6,custom_date7,custom_date8,custom_date9,custom_date10, ~r~n" + &
" custom_n1,custom_n2,custom_n3,custom_n4,custom_n5,custom_n6,custom_n7,custom_n8,custom_n9,custom_n10,custom_notes_1,custom_notes_2,  ~r~n" + &
" custom_m1,custom_m2,custom_m3,custom_m4,custom_m5,custom_percent_1,custom_percent_2,custom_percent_3,custom_percent_4,custom_percent_5, ~r~n" + &
" custom_11,custom_12,custom_13,custom_14,custom_15,custom_16,custom_17,custom_18,custom_19,custom_20,custom_21,custom_22,custom_23,custom_24,custom_25, ~r~n" + &
" custom_26,custom_27,custom_28,custom_29,custom_30,custom_31,custom_32,custom_33,custom_34,custom_35,custom_36,custom_37,custom_38,custom_39,custom_40, ~r~n" + &
" custom_41,custom_42,custom_43,custom_44,custom_45,custom_46,custom_47,custom_48,custom_49,custom_50,custom_n11,custom_n12,custom_n13,custom_n14,custom_n15, ~r~n" + &
" custom_n16,custom_n17,custom_n18,custom_n19,custom_n20,custom_n21,custom_n22,custom_n23,custom_n24,custom_n25,custom_n26,custom_n27,custom_n28,custom_n29, ~r~n" + &
" custom_n30,custom_n31,custom_n32,custom_n33,custom_n34,custom_n35,custom_n36,custom_n37,custom_n38,custom_n39,custom_n40,custom_n41,custom_n42,custom_n43, ~r~n" + &
" custom_n44,custom_n45,custom_n46,custom_n47,custom_n48,custom_n49,custom_n50,custom_date11,custom_date12,custom_date13,custom_date14,custom_date15,custom_date16, ~r~n" + &
" custom_date17,custom_date18,custom_date19,custom_date20,custom_m6,custom_m7,custom_m8,custom_m9,custom_m10,custom_m11,custom_m12,custom_m13,custom_m14,custom_m15, ~r~n" + &
" custom_m16,custom_m17,custom_m18,custom_m19,custom_m20,custom_percent_6,custom_percent_7,custom_percent_8,custom_percent_9,custom_percent_10,custom_percent_11, ~r~n" + &
" custom_percent_12,custom_percent_13,custom_percent_14,custom_percent_15,custom_percent_16,custom_percent_17,custom_percent_18,custom_percent_19,custom_percent_20 ~r~n" + &
" FROM ctx_custom_multi_hdr~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_multi_detail') ~r~n" + &
"drop view v_ctx_multi_detail ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"Create View v_ctx_multi_detail As    ~r~n" + &
" SELECT ctx_id, hdr_id, detail_id, custom_int1, custom_int2, custom_int3, custom_int4, custom_int5, custom_fee1, custom_fee2, ~r~n" + &
" custom_fee3, custom_fee4, custom_fee5, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, ~r~n" + &
" custom_10, custom_date1, custom_date2, custom_date3, custom_date4, custom_date5, custom_n1, custom_n2, custom_n3, custom_n4, ~r~n" + &
" custom_n5, custom_percent_1, custom_percent_2, custom_notes_1, custom_11, custom_12, custom_13, custom_14, custom_15, ~r~n" + &
" custom_16, custom_17, custom_18, custom_19, custom_20, custom_21, custom_22, custom_23, custom_24, custom_25, custom_26, custom_27, ~r~n" + &
" custom_28, custom_29, custom_30, custom_31, custom_32, custom_33, custom_34, custom_35, custom_36, custom_37, custom_38, custom_39, ~r~n" + &
" custom_40, custom_41, custom_42, custom_43, custom_44, custom_45, custom_46, custom_47, custom_48, custom_49, custom_50, custom_fee6,~r~n" + & 
" custom_fee7, custom_fee8, custom_fee9, custom_fee10, custom_fee11, custom_fee12, custom_fee13, custom_fee14, custom_fee15, ~r~n" + &
" custom_fee16, custom_fee17, custom_fee18, custom_fee19, custom_fee20, custom_date6, custom_date7, custom_date8, custom_date9, ~r~n" + &
" custom_date10, custom_date11, custom_date12, custom_date13, custom_date14, custom_date15, custom_date16, custom_date17, custom_date18,~r~n" + &
" custom_date19, custom_date20, custom_n6, custom_n7, custom_n8, custom_n9, custom_n10, custom_n11, custom_n12, custom_n13, custom_n14, ~r~n" + &
" custom_n15, custom_n16, custom_n17, custom_n18, custom_n19, custom_n20, custom_n21, custom_n22, custom_n23, custom_n24, custom_n25, ~r~n" + &
" custom_n26, custom_n27, custom_n28, custom_n29, custom_n30, custom_n31, custom_n32, custom_n33, custom_n34, custom_n35, custom_n36, ~r~n" + &
" custom_n37, custom_n38, custom_n39, custom_n40, custom_n41, custom_n42, custom_n43, custom_n44, custom_n45, custom_n46, custom_n47, ~r~n" + &
" custom_n48, custom_n49, custom_n50, custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, ~r~n" + &
" custom_percent_8, custom_percent_9, custom_percent_10, custom_percent_11, custom_percent_12, custom_percent_13, custom_percent_14, ~r~n" + &
" custom_percent_15, custom_percent_16, custom_percent_17, custom_percent_18, custom_percent_19, custom_percent_20, custom_int6, ~r~n" + &
" custom_int7, custom_int8, custom_int9, custom_int10, custom_int11, custom_int12, custom_int13, custom_int14, custom_int15, ~r~n" + &
" custom_int16, custom_int17, custom_int18, custom_int19, custom_int20, custom_int21, custom_int22, custom_int23, custom_int24, ~r~n" + &
" custom_int25, custom_int26, custom_int27, custom_int28, custom_int29, custom_int30, custom_int31, custom_int32, custom_int33, ~r~n" + &
" custom_int34, custom_int35, custom_int36, custom_int37, custom_int38, custom_int39, custom_int40, custom_int41, custom_int42, ~r~n" + &
" custom_int43, custom_int44, custom_int45, custom_int46, custom_int47, custom_int48, custom_int49, custom_int50~r~n" + &
" FROM ctx_custom_multi_detail~r~n"

//Added By Jay Chen 02-25-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_fee_schedule_nm') ~r~n" + &
"drop view v_ctx_fee_schedule_nm ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"Create View v_ctx_fee_schedule_nm As    ~r~n" + &
" SELECT  top 100 percent    ctx_fee_sched_nm.ctx_id,   ctx_fee_sched_nm.fee_sched_nm_id, ~r~n" + &
" code_lookup.code AS category_code,   code_lookup.description AS category_description,   code_lookup_1.code AS system_item_code, ~r~n" + &
" code_lookup_1.description AS system_item_Description,   ctx_fee_sched_nm.description,   ctx_fee_sched_nm.fee, ~r~n" + &
" code_lookup_2.code AS item_status_code,   ctx_fee_sched_nm.start_date,   ctx_fee_sched_nm.end_date,   ctx_fee_sched_nm.service_name, ~r~n" + &   
" ctx_fee_sched_nm.custom_int1,   ctx_fee_sched_nm.custom_int2,   ctx_fee_sched_nm.custom_fee1,   ctx_fee_sched_nm.custom_fee2, ~r~n" + &  
" ctx_fee_sched_nm.custom_fee3,   ctx_fee_sched_nm.custom_text1,   ctx_fee_sched_nm.custom_text2,   ctx_fee_sched_nm.custom_text3, ~r~n" + &  
" ctx_fee_sched_nm.notes,   ctx_fee_sched_nm.record_id,  ctx_fee_sched_nm.custom_text4,  ctx_fee_sched_nm.custom_text5,  ~r~n" + & 
" ctx_fee_sched_nm.custom_text6,  ctx_fee_sched_nm.custom_text7,  ctx_fee_sched_nm.custom_text8,  ctx_fee_sched_nm.custom_n1, ~r~n" + &
" ctx_fee_sched_nm.custom_n2,  ctx_fee_sched_nm.custom_n3,  ctx_fee_sched_nm.custom_n4,  ctx_fee_sched_nm.custom_n5, ~r~n" + &  
" code_lookup_3.code AS billing_Cycle,   code_lookup_3.description AS billing_cycle_description, ~r~n" + &
" ctx_fee_sched_nm.custom_date1, ctx_fee_sched_nm.custom_date2,ctx_fee_sched_nm.custom_date3,ctx_fee_sched_nm.custom_date4,ctx_fee_sched_nm.custom_date5 ~r~n" + &
" FROM (((ctx_fee_sched_nm LEFT OUTER JOIN code_lookup ON ctx_fee_sched_nm.category = code_lookup.lookup_code) ~r~n" + & 
" LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_fee_sched_nm.service_item = code_lookup_1.lookup_code)  ~r~n" + &
" LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_fee_sched_nm.item_status = code_lookup_2.lookup_code)  ~r~n" + &
" LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_fee_sched_nm.billing_cycle = code_lookup_3.lookup_code  ~r~n" + &
" ORDER BY ctx_fee_sched_nm.ctx_id ~r~n" 

of_execute_sqls("of_ver130_release_view1")


Return 1
end function

public function integer of_ver130_release_storeprocedure1 ();//====================================================================
// Function: of_ver130_release_storeprocedure1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 08/14/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"If Exists (SELECT name FROM sysobjects WHERE name = 'up_calculate_date_alarms' AND type = 'P')~r~n" + &
//"~tDROP PROCEDURE up_calculate_date_alarms~r~n" 

//Added By Mark Lee 08/14/2013
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Exists ( Select 1 From sysobjects where type = 'P' and name = 'up_export_table_data' )~r~n" + &
"Begin~r~n" + &
"~tDrop Procedure up_export_table_data~r~n" + &
"End ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create Procedure up_export_table_data(@export_id int,@sql_where varchar(2000),@table_header int,@display_key int,@err_msg varchar(2000) output)~r~n" + &
"AS~r~n" + &
"Begin~r~n" + &
"~tDeclare @count int, @export_type int, @export_field_length int,@ctx_id int, @num int, @level int~r~n" + &
"~tDeclare @where varchar(max), @sql_text varchar(max), @return varchar(10), @collation_order nvarchar(128)~r~n" + &
"~tDeclare @version_sql varchar(300), @row_code varchar(10),@strip_char varchar(8), @exec_sql varchar(max)~r~n" + &
"~tDeclare @export_field_name varchar(50), @ctx_column_name varchar(50), @insert_column varchar(max),@select_col varchar(8000) ~r~n" + &
"~tDeclare @field_value varchar(100), @sql_order_col varchar(8000),  @table_header_col varchar(max), @convert_sql varchar(max)~r~n" + &
"~t~r~n" + &
"~r~n" + &
"~tSET @collation_order = 'select @level = compatibility_level from sys.databases where name = db_name()'~r~n" + &
"    EXEC SP_EXECUTESQL @collation_order, N'@level int output',@level OUTPUT~r~n" + &
"~r~n" + &
"~tif (@level is null or @level <= 80)~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @err_msg = 'Please set the database compatibility level more than SQL Server 2000. Otherwise, the export data functions will not work.'~r~n" + &
"~t~treturn  -1~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tSet @num = 1 ~r~n" + &
"~tBEGIN TRY~r~n" + &
"~t~tSelect @where = prac_sql, @sql_text = sql_text, @strip_char = strip_char from export_header where export_id =  convert(varchar(20),@export_id)~t~r~n" + &
"~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~tEND TRY~r~n" + &
"~tBEGIN CATCH~r~n" + &
"~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn  ~r~n" + &
"~tEND CATCH~r~n" + &
"~tIf convert(int,@return) <> 0 ~r~n" + &
"~tBegin ~r~n" + &
"~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; ErrorNumber:'+@return~r~n" + &
"~t~treturn  @return  ~r~n" + &
"~tEnd ~r~n" + &
"~r~n" + &
"~tIf (@sql_text is null ) or (datalength(@sql_text)<= 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @err_msg = 'no data'~r~n" + &
"~t~tReturn ~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tIf (@sql_where is null) or (ltrim(rtrim(@sql_where)) = '')~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @where = 'select distinct  ctx_id from ctx_basic_info '~r~n" + &
"~tEnd ~r~n" + &
"~tElse If left(ltrim(@sql_where),6) = 'ctx_id' ~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @where ='select distinct ctx_id from ctx_basic_info where '+ @sql_where~r~n" + &
"~tEnd~r~n" + &
"~tElse If left(ltrim(@sql_where),7) = 'default' ~r~n" + &
"~tBegin~r~n" + &
"~t~tIF (@where is null) or (datalength(@where)= 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @where = 'select distinct  ctx_id from ctx_basic_info '~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tIf Charindex(';',@where) > 0 ~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @where = left(@where,Charindex(';',@where) - 1  )~r~n" + &
"~t~tEnd ~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tSelect @sql_text = replace(@sql_text,'(***)',@where)~t~r~n" + &
"~tSet @count = 0~r~n" + &
"~tSelect @count = count(1) from sysobjects where name = '#export_tmp_data' and type = 'U';~r~n" + &
"~tIf (@count is not null ) and (@count = 1 ) ~r~n" + &
"~tBegin~r~n" + &
"~t~tDrop TABLE #export_tmp_data;~r~n" + &
"~tEnd ~r~n" + &
"~t~t~r~n" + &
"~tSet @num = 2~r~n" + &
"~tBEGIN TRY~r~n" + &
"~t~tCreate Table #export_tmp_data ( exp_tmp_id int identity(1,1) not null, rec_id int not null, fieldseqid varchar(50) not null,~r~n" + &
"~t~t~tfield_value varchar(8000) null, field_data_type char(1) null, row_no int null ) ;~r~n" + &
"~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~tEND TRY~r~n" + &
"~tBEGIN CATCH~r~n" + &
"~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn  ~r~n" + &
"~tEND CATCH~r~n" + &
"~tIf convert(int,@return) <> 0 ~r~n" + &
"~tBegin ~r~n" + &
"~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn  ~r~n" + &
"~tEnd ~r~n" + &
"~r~n" + &
"~tselect @collation_order = CONVERT(sysname, SERVERPROPERTY('Collation'))~r~n" + &
"~r~n" + &
"~tIf charindex('_CI_',@collation_order) > 0 ~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @collation_order = replace(@collation_order,'_CI_','_CS_')~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tIf charindex('_CS_',@collation_order) = 0 ~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @collation_order =''~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tselect @version_sql = @@version~r~n" + &
"~r~n" + &
"~t~tSet @row_code = ',row_no'~r~n" + &
"~tSelect @sql_text = 'Insert into #export_tmp_data(rec_id, fieldseqid,field_value,field_data_type' + @row_code + ') ' + @sql_text ~r~n" + &
"~tSet @num = 3  ~r~n" + &
"~tBEGIN TRY~r~n" + &
"~t~texecute(@sql_text)~r~n" + &
"~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~tEND TRY~r~n" + &
"~tBEGIN CATCH~r~n" + &
"~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn  ~r~n" + &
"~tEND CATCH~r~n" + &
"~tIf convert(int,@return) <> 0 ~r~n" + &
"~tBegin ~r~n" + &
"~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn  ~r~n" + &
"~tEnd ~r~n" + &
"~r~n" + &
"~tSet @count = 0 ~r~n" + &
"~tselect @count = count(1) from #export_tmp_data ;~r~n" + &
"~tIf (@count is not null ) and (@count > 0 ) ~r~n" + &
"~tBegin~r~n" + &
"~r~n" + &
"~t~tSet @insert_column = ''~r~n" + &
"~t~tSet @sql_order_col = 'Select rec_id, '~r~n" + &
"~t~tSet @field_value = ''~r~n" + &
"~t~tSet @exec_sql = ''~r~n" + &
"~t~tSet @table_header_col = 'select top 1 ''0'''~t~t~t~t~t/*ctx_id int*/~r~n" + &
"~r~n" + &
"~t~tDECLARE export_cursor CURSOR FOR ~r~n" + &
"      ~t~tSELECT  export_field_name,       ~r~n" + &
"~t~t~t~tctx_column_name, field_value, export_type, export_field_length~r~n" + &
"~t~tFROM export_fields~r~n" + &
"~t~tWHERE export_fields.export_id =  @export_id  ~r~n" + &
"~t~tOrder by  export_order~r~n" + &
"~r~n" + &
"~t~tOPEN export_cursor~r~n" + &
"~t~tFETCH NEXT FROM export_cursor INTO @export_field_name, @ctx_column_name, @field_value, @export_type, @export_field_length~r~n" + &
"  ~r~n" + &
"~t~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~t~tBEGIN~r~n" + &
"~t~t~t/*Character to strip from all data fields*/~r~n" + &
"~t~t~tSet~t@where = ''~r~n" + &
"~t~t~tIf (@export_field_length is not null and @export_field_length > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @where = 'convert(varchar('+convert(varchar,@export_field_length)+'),'+@export_field_name+') '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tElse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @where = @export_field_name~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tIF(@strip_char is not null) and len(@strip_char) > 0~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tIf len(@collation_order) > 0 ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @where = replace(@where,@export_field_name,'replace('+@export_field_name+' collate '+@collation_order+','''+@strip_char+''','''')')~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @where = replace(@where,@export_field_name,'replace('+@export_field_name+','''+@strip_char+''','''')')~r~n" + &
"~t~t~t~tEnd~t~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tSelect @insert_column = @insert_column +' alter table #export_tmp_data1 add ' + @export_field_name +' varchar(8000) NULL;'~r~n" + &
"~t~t~tSelect @exec_sql  = isnull(@exec_sql, '') + ' , ' + @where + ' as ' + @export_field_name~r~n" + &
"~t~t~tSelect @sql_order_col = @sql_order_col + @export_field_name + ', '~r~n" + &
"~t~t~tSelect @table_header_col = @table_header_col + ', '+ ''''+@export_field_name+''' '~r~n" + &
"~r~n" + &
"~t~t~tFETCH NEXT FROM export_cursor INTO @export_field_name, @ctx_column_name, @field_value, @export_type, @export_field_length~r~n" + &
"~t~tEND~r~n" + &
"~t~tCLOSE export_cursor~r~n" + &
"~t~tDEALLOCATE export_cursor~r~n" + &
"~r~n" + &
"~t~t/*create table*/~r~n" + &
"~t~tSet @count = 0 ~r~n" + &
"~t~tSelect @count = count(1) from sysobjects where name = '#export_tmp_data1' and type = 'U' ;~t~r~n" + &
"~t~tIf (@count is not null and @count = 1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tDrop Table #export_tmp_data1;~r~n" + &
"~t~tEnd~t~r~n" + &
"~r~n" + &
"~t~tSet @num = 4~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~t~tCreate Table #export_tmp_data1 ( rec_id int null ) ;~r~n" + &
"~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEND CATCH~r~n" + &
"~t~tIf convert(int,@return) <> 0 ~r~n" + &
"~t~tBegin ~r~n" + &
"~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tIF len(@insert_column) > 0~r~n" + &
"~t~tBegin ~r~n" + &
"~t~t~tSet @num = 5~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~t~tExecute(@insert_column)~r~n" + &
"~t~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~t~tEND TRY~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~treturn  ~r~n" + &
"~t~t~tEND CATCH~r~n" + &
"~t~t~tIf convert(int,@return) <> 0 ~r~n" + &
"~t~t~tBegin ~r~n" + &
"~t~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~treturn  ~r~n" + &
"~t~t~tEnd ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tselect  @convert_sql = isnull(@convert_sql,'') + ( case when export_type = 1 then '[' + export_field_name  + '],' ~r~n" + &
"~t~t~t~twhen export_type = 2  and field_value is not null and len(field_value) > 0 then + ''''+ field_value + ''''+  ' as ' + '[' + export_field_name + ']' + ','~r~n" + &
"~t~t~t~telse '''''' +  'as ' + '[' + export_field_name + ']' + ','  end ) ,~r~n" + &
"~t~t~t@select_col = isnull(@select_col+ '],[','') + export_field_name~r~n" + &
"~t~t~tfrom ( ~r~n" + &
"~t~t~t~tselect  distinct a.fieldseqid, b.export_field_name,export_order,export_type, b.field_value from export_fields b ~r~n" + &
"~t~t~t~tleft join #export_tmp_data a   on a.fieldseqid  = b.export_order where b.export_id = @export_id~r~n" + &
"~t~t~t) c   order by c.export_order, c.field_value desc; ~r~n" + &
"~r~n" + &
"~t~tSet @select_col = '[' + @select_col+ ']'~r~n" + &
"~t~tSet @convert_sql = substring( @convert_sql, 1, len(@convert_sql ) -1 )~r~n" + &
"~t~tSelect @convert_sql = ' select * from (select rec_id,' + @convert_sql + ' from (~r~n" + &
"~t~t~tselect b.export_field_name as fieldseqid,a.field_value,a.rec_id ~r~n" + &
"~t~t~t~tfrom   ( select t1.rec_id,t1.field_value,t1.fieldseqid,t1.row_no  from #export_tmp_data t1 ~r~n" + &
"~t~t~t~t~tinner join  ( select rec_id,fieldseqid,min(row_no)row_no from #export_tmp_data~r~n" + &
"~t~t~t~t~t~tgroup by rec_id,fieldseqid ) t2  on t1.rec_id = t2.rec_id and t1.fieldseqid = t2.fieldseqid and t1.row_no = t2.row_no )  a ~r~n" + &
"~t~t~tinner join ( select top 100 percent row_number() over ( order by export_order) as num, export_id, export_type, export_order as export_order2,export_field_name ~r~n" + &
"~t~t~t~t~t~tfrom export_fields where export_id = '+convert(varchar,@export_id)+' and export_type = 1 order by export_order  ) b ~r~n" + &
"~t~t~t~ton a.fieldseqid = b.num  ) aa~r~n" + &
"~t~t~tpivot (min( field_value ) for fieldseqid  in (' + @select_col + ')) bb ) cc' ;~r~n" + &
"~r~n" + &
"~t~tSet @num = 6~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~t~tInsert #export_tmp_data1 Exec(@convert_sql)~r~n" + &
"~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEND CATCH~r~n" + &
"~t~tIf convert(int,@return) <> 0 ~r~n" + &
"~t~tBegin ~r~n" + &
"~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn   ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~t/* order column*/~r~n" + &
"~t~tSelect @sql_order_col = Left(@sql_order_col,len(@sql_order_col) - 1)~r~n" + &
"~r~n" + &
"~t~tIf (@display_key is null) or (@display_key <> 1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @select_col = ' select '+substring(@sql_order_col, charindex('rec_id,',@sql_order_col)+ 7 , len(@sql_order_col) - charindex('rec_id,',@sql_order_col) - 6)~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @select_col = @sql_order_col~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* the header column*/~r~n" + &
"~t~tIf (@table_header is not null) and (@table_header = 1)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @exec_sql = @select_col + ' from ('+@sql_order_col+' from ( Select rec_id '+@exec_sql+' from #export_tmp_data1 ) dd  union all ' +@table_header_col + ' from ids ) a order by rec_id'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @exec_sql = @select_col + ' from ( Select rec_id '+@exec_sql+' from #export_tmp_data1 ) dd order by rec_id'~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @num = 7~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~t~tExecute(@exec_sql)~r~n" + &
"~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSet @return = CONVERT(varchar(10),@@ERROR)~r~n" + &
"~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEND CATCH~r~n" + &
"~t~tIf convert(int,@return) <> 0 ~r~n" + &
"~t~tBegin ~r~n" + &
"~t~t~tSelect @err_msg = 'Position:'+convert(varchar,@num)+'; Error:'+@return+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~tEnd ~r~n" + &
"~tElse~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @err_msg = 'no temp data'~r~n" + &
"~t~treturn~t~t~t~r~n" + &
"~tEnd ~r~n" + &
"End~r~n" + &
"~r~n"

//Added By Mark Lee 10/18/2013
//Modified By Jay Chen 12-16-2013 Remark:conv_view_pic add column pic_painter_id 
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_ImportView' AND type = 'P') " + &
"    DROP PROCEDURE up_ImportView"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"create procedure up_ImportView~r~n" +  &
"~t@SourceDBName nvarchar(100),~r~n" + &
"~t@TargetDBName nvarchar(100),~r~n" + &
"~t@ViewID nvarchar(100),~r~n" + &
"~t@NewViewName nvarchar(50)~r~n" + &
"As~r~n" + &
"Begin~r~n" + &
"~tdeclare @MaxViewID~tnvarchar(100)~r~n" + &
"~tdeclare @SqlString nvarchar(4000)~r~n" + &
"~tdeclare @ParmDefinition nvarchar(100)~r~n" + &
"~t~t~r~n" + &
"~t/*Get Seq No*/~r~n" + &
"~tselect @SqlString = 'select @MaxViewIDOUT = isnull(max(data_view_id),0) + 1  from ' + ~r~n" + &
"~t~t~t~t~t~t@TargetDBName + '.dbo.data_view'~r~n" + &
"~tselect @ParmDefinition = '@MaxViewIDOUT int Output'~r~n" + &
"~texec sp_executesql @SqlString,@ParmDefinition,@MaxViewIDOUT=@MaxViewID output~r~n" + &
"~t/*Insert Data_View Table*/~r~n" + &
"~t/*select @SqlString = 'insert ' + @TargetDBName + '.dbo.data_view (data_view_id,data_view_name,type,type_c)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',''' + @NewViewName + ''' ,type,type_c from '  ~r~n" + &
"~t~t~t+ @SourceDBName + '.dbo.data_view where data_view_id = ' + @ViewID*/~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.data_view (data_view_id,data_view_name,type,type_c,win_backcolor)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',''' + @NewViewName + ''' ,type,type_c,win_backcolor from '  ~r~n" + &
"~t~t~t+ @SourceDBName + '.dbo.data_view where data_view_id = ' + @ViewID~r~n" + &
"~t~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~t/*Insert Tab Properties Table*/~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_tabpage_properties (data_view_id~r~n" + &
"~t~t~t~t~t~t,tabpage_name ,text,text_color ,icon_visible,icon_update_date,icon,backcolor,~r~n" + &
"~t~t~t~t~t~ttab_backcolor,tab_icon)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',tabpage_name ,text,text_color ,icon_visible,~r~n" + &
"~t~t~t~t~t~ticon_update_date,icon,backcolor,tab_backcolor,tab_icon from ' + @SourceDBName + ~r~n" + &
"~t~t~t~t~t~t'.dbo.ctx_tabpage_properties where data_view_id = ' + @ViewID~r~n" + &
"~t~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~t/*Insert Ctx_Screen Table*/~r~n" + &
"~tselect  @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen (data_view_id,screen_id,tab_name,screen_name,~r~n" + &
"~t~t~t~t~t~tdw_name,dataobject,description,dw_sql,create_date,modify_date,force_update,titlebar_visible,~r~n" + &
"~t~t~t~t~t~ttitlebar_text,boarder_style,screen_visible, screen_style, grid_sql, grid_dataobject, grid_modify )'~r~n" + &
"~tselect ~t@SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id,'   ~r~n" + &
"~tselect  @SqlString = @SqlString + '  tab_name,   '~r~n" + &
"~tselect  @SqlString = @SqlString + 'screen_name,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         dw_name,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         dataobject, '  ~r~n" + &
"~tselect  @SqlString = @SqlString + '         description, '  ~r~n" + &
"~tselect  @SqlString = @SqlString + '         dw_sql,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         create_date,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         modify_date,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         force_update,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         titlebar_visible,'   ~r~n" + &
"~tselect  @SqlString = @SqlString + '         titlebar_text,   '~r~n" + &
"~tselect  @SqlString = @SqlString + '         boarder_style,  '~r~n" + &
"~tselect  @SqlString = @SqlString + '         screen_visible,  '~r~n" + &
"~tselect  @SqlString = @SqlString + '~t~t~tscreen_style, '~r~n" + &
"~tselect  @SqlString = @SqlString + '~t~t~tgrid_sql, '~r~n" + &
"~tselect  @SqlString = @SqlString + '~t~t~tgrid_dataobject, '~r~n" + &
"~tselect  @SqlString = @SqlString + '~t~t~tgrid_modify '~r~n" + &
"~tselect  @SqlString = @SqlString + '~tfrom ' + @SourceDBName + '.dbo.ctx_screen'~r~n" + &
"~tselect  @SqlString = @SqlString + '~twhere data_view_id = ' + @ViewID~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~t~r~n" + &
"~t/*insert Data Fill Settings*/~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_datafill (data_view_id~r~n" + &
"      ,screen_id~r~n" + &
"      ,field_name~r~n" + &
"      ,field_name_fill~r~n" + &
"      ,field_name_map~r~n" + &
"      ,modify_by~r~n" + &
"      ,modify_date~r~n" + &
"      ,Relative_Days)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id~r~n" + &
"      ,field_name~r~n" + &
"      ,field_name_fill~r~n" + &
"      ,field_name_map~r~n" + &
"      ,modify_by~r~n" + &
"      ,modify_date~r~n" + &
"      ,Relative_Days from ' + @SourceDBName + '.dbo.ctx_screen_datafill where data_view_id = ' + @ViewID ~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~t/*insert Field Depent Settings*/~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_field_depend (view_id~r~n" + &
"      ,base_field~r~n" + &
"      ,depend_field~r~n" + &
"      ,base_screen_id~r~n" + &
"      ,depend_screen_id~r~n" + &
"      ,base_field_dispaly~r~n" + &
"      ,depend_field_dispaly~r~n" + &
"      ,base_screen_type~r~n" + &
"      ,base_table~r~n" + &
"      ,depend_table)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',base_field~r~n" + &
"      ,depend_field~r~n" + &
"      ,base_screen_id~r~n" + &
"      ,depend_screen_id~r~n" + &
"      ,base_field_dispaly~r~n" + &
"      ,depend_field_dispaly~r~n" + &
"      ,base_screen_type~r~n" + &
"      ,base_table~r~n" + &
"      ,depend_table from ' + @SourceDBName + '.dbo.ctx_screen_field_depend where view_id = ' + @ViewID ~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~t/*isnert field extend property*/~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.ctx_screen_field_ex (data_view_id~r~n" + &
"      ,screen_id~r~n" + &
"      ,field_name~r~n" + &
"      ,field_add)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id~r~n" + &
"      ,field_name~r~n" + &
"      ,field_add from ' + @SourceDBName + '.dbo.ctx_screen_field_ex where data_view_id = ' + @ViewID ~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~t/* add by jay chen 20140213 insert tabpage details layout property*/~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.security_viewid_options (view_id~r~n" + &
"      ,option_name~r~n" + &
"      ,option_value)'~r~n" + &
"~tselect @SqlString = @SqlString + 'select ' + @MaxViewID + ',option_name~r~n" + &
"      ,option_value from ' + @SourceDBName + '.dbo.security_viewid_options where view_id = ' + @ViewID ~r~n" + &
"~texec sp_executesql @SqlString~r~n" + &
"~tselect @SqlString = 'insert ' + @TargetDBName + '.dbo.conv_view_pic  ( view_id ~r~n" + &
"~t~t~t,Screen_id ~r~n" + &
"~t~t~t,pic_type ~r~n" + &
"~t~t~t,pic_band ~r~n" + &
"~t~t~t,pic_name ~r~n" + &
"~t~t~t,pic_filename ~r~n" + &
"~t~t~t,pic_bitmap ~r~n" + &
"~t~t~t,pic_x ~r~n" + &
"~t~t~t,pic_y ~r~n" + &
"~t~t~t,pic_width ~r~n" + &
"~t~t~t,pic_height ~r~n" + &
"~t~t~t,pic_tag  ~r~n" + &
"~t~t~t,pic_painter_id)' ~r~n" + &
"select @SqlString = @SqlString + 'select ' + @MaxViewID + ',screen_id , ~r~n" + &
"~t~t~t~t pic_type,  ~r~n" + &
"~t~t~t~t pic_band,   ~r~n" + &
"~t~t~t~t pic_name,   ~r~n" + &
"~t~t~t~t substring( pic_filename,1,2 ) + ' +  ~r~n" + &
"~t~t~t~t 'cast( ' + @MaxViewID + ' as varchar(10)) + ' +  ~r~n" + &
"~t~t~t~t '''_''' + ' + cast( screen_id as varchar(10)) + ' +  ~r~n" + &
"~t~t~t~t 'substring( pic_filename, charindex( ' + '''_''' +  ~r~n" + &
"~t~t~t~t ',pic_filename, charindex( ' + '''_''' + ',pic_filename, 3 ) + 1 ),99)  ~r~n" + &
"~t~t~t~t ,pic_bitmap  ~r~n" + &
"~t~t~t~t  ,pic_x  ~r~n" + &
"~t~t~t~t  ,pic_y  ~r~n" + &
"~t~t~t~t  ,pic_width  ~r~n" + &
"~t~t~t~t  ,pic_height  ~r~n" + &
"~t~t~t~t  ,pic_tag    ~r~n" + &
"~t~t~t~t  ,pic_painter_id    ~r~n" + &
"~t~t~t~t  from '+ @SourceDBName +'.dbo.conv_view_pic where view_id = ' +   ~r~n" + &
"~t~t~t~t  @ViewID + ' and pic_type = '+ '''screen''' ;~t ~r~n" + &
"~texec sp_executesql @SqlString ~r~n" + &
"~tselect Cast(@MaxViewID as int)~r~n" + &
"end~r~n"


//Added By Jay Chen 12-17-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists (SELECT name FROM sysobjects WHERE name = 'up_importpictures' AND type = 'P') " + &
"    DROP PROCEDURE up_importpictures"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"CREATE PROCEDURE up_importpictures~r~n" +  &
"~t@SourceDBName nvarchar(100),~r~n" +  &
"~t@TargetDBName nvarchar(100),~r~n" +  &
"~t@view_id nvarchar(100)~r~n" +  &
"AS~r~n" +  &
"BEGIN~r~n" +  &
"~tDECLARE @screen_id nvarchar(100)~r~n" +  &
"~tDECLARE @pic_painter_id nvarchar(100)~r~n" +  &
"~tDECLARE @pic_bitmap VARBINARY ~r~n" +  &
"~tDECLARE @id nvarchar(100)~r~n" +  &
"~tDECLARE @file_image VARBINARY~r~n" +  &
"~tDECLARE @maxid nvarchar(100)~r~n" +  &
"~tDECLARE @insert_pic CHAR(1)~r~n" +  &
"~tDECLARE @SqlString nvarchar(4000)~r~n" +  &
"~tDECLARE @ParmDefinition nvarchar(100)~r~n" +  &
"~t/*******1.search need to copy's picture painter from SourceDB*********/~r~n" +  &
"~tSelect @SqlString = 'select view_id,screen_id,pic_painter_id from '+@SourceDBName+'.dbo.conv_view_pic where pic_painter_id > 0 and view_id = '+@view_id~r~n" +  &
 "~tExec('Declare cur_temp CURSOR FOR ' + @SqlString) ~r~n" +  &
"~tOPEN cur_temp~r~n" +  &
"~tFETCH NEXT FROM cur_temp INTO @view_id,@screen_id,@pic_painter_id;~r~n" +  &
"~tSET @insert_pic = '0'~r~n" +  &
"~tWHILE (@@FETCH_STATUS=0) ~r~n" +  &
"~tBEGIN~r~n" +  &
"~t~tIF @@FETCH_STATUS <> 0 BREAK  ~r~n" +  &
"~t~tSelect @SqlString = 'SELECT @pic_bitmapOUT = hashbytes(''SHA1'',Convert(varbinary,file_image))  ~r~n" +  & 
"~t~t~t~tFROM '+@SourceDBName+'.dbo.ctx_pictures WHERE id = '+@pic_painter_id  ~r~n" +  &
"~t~tSelect @ParmDefinition = '@pic_bitmapOUT VARBINARY Output'  ~r~n" +  &
"~t~tExec sp_executesql @SqlString,@ParmDefinition,@pic_bitmapOUT=@pic_bitmap OUTPUT  ~r~n" +  &
"~t~t~r~n" + &
"~t~t/******2.Compare with Targetdb's picture painter*********/  ~r~n" +  &
"~t~tSelect @SqlString = 'select id,hashbytes(''SHA1'',Convert(varbinary,file_image)) from '+@TargetDBName+'.dbo.ctx_pictures ' ~r~n" +  &
"~t~tExec('Declare cur_temp2 CURSOR FOR ' + @SqlString)  ~r~n" +  &
"~t~tOPEN cur_temp2 ~r~n" +  &
"~t~tFETCH NEXT FROM cur_temp2 INTO @id,@file_image ~r~n" +  &
"~t~tSET @insert_pic = '0' ~r~n" +  &
"~t~tWHILE (@@FETCH_STATUS=0) ~r~n" +  &
"~t~tBEGIN ~r~n" +  &
"~t~t~tIF @@FETCH_STATUS <> 0 BREAK ~r~n" +  &
"~t~t~tIF @pic_bitmap = @file_image ~r~n" +  &
"~t~t~tBEGIN ~r~n" +  &
"~t~t~t~tSELECT @insert_pic = '0' ~r~n" +  &
"~t~t~t~tBREAK ~r~n" +  &
"~t~t~tEND  ~r~n" +  &
"~t~t~tELSE ~r~n" +  &
"~t~t~tBEGIN ~r~n" +  &
"~t~t~t~tSELECT @insert_pic = '1' ~r~n" +  &
"~t~t~tEND ~r~n" +  &
"~t~t~tFETCH NEXT FROM cur_temp2 INTO @id,@file_image;~r~n" +  &
"~t~tEND ~r~n" +  &
"~t~tIF @@FETCH_STATUS = -1 ~r~n" +  &
"~t~tBEGIN ~r~n" +  &
"~t~t~tSELECT @insert_pic = '1' ~r~n" +  &
"~t~tEND ~r~n" +  &
"~t~tIF @insert_pic = '1' ~r~n" +  &
"~t~tBEGIN ~r~n" +  &
"~t~t~t/*3.insert Sourcedb's picture painter to Targetdb*/ ~r~n" +  &
"~t~t~tSelect @SqlString = 'SELECT @maxidOUT = isnull(max(id),0)+1 FROM '+@TargetDBName+'.dbo.ctx_pictures' ~r~n" +  &
"~t~t~tselect @ParmDefinition = '@maxidOUT int Output' ~r~n" +  &
"~t~t~tExec sp_executesql @SqlString,@ParmDefinition,@maxidOUT=@maxid output ~r~n" +  &
"~t~t~t~r~n" + &
"~t~t~tSelect @SqlString = 'INSERT INTO '+@TargetDBName+'.dbo.ctx_pictures(id,file_name,file_image,file_ext,file_height,file_width,file_size)' ~r~n" +  &
"~t~t~tSelect @SqlString = @SqlString +'SELECT '+@maxid+',file_name,file_image,file_ext,file_height,file_width,file_size '  ~r~n" +  &
"~t~t~tSelect @SqlString = @SqlString + 'FROM '+@SourceDBName+'.dbo.ctx_pictures WHERE id = '+@pic_painter_id ~r~n" +  &
"~t~t~tExec sp_executesql @SqlString ~r~n" +  &
"~t~t~t~r~n" + &	   
"~t~t~t/*4.update Targetdb table[conv_view_pic]'s picture painter id*/ ~r~n" +  &
"~t~t~tselect @SqlString = 'UPDATE '+@TargetDBName+'.dbo.conv_view_pic ' ~r~n" +  &
"~t~t~tselect @SqlString = @SqlString + 'SET pic_painter_id = '+@maxid ~r~n" +  &
"~t~t~tselect @SqlString = @SqlString + ' WHERE pic_painter_id = '+@pic_painter_id ~r~n" +  &
"~t~t~tExec sp_executesql @SqlString ~r~n" +  &
"~t~tEND ~r~n" +  &
"~t~tELSE ~r~n" +  &
"~t~t~tBEGIN ~r~n" +  &
"~t~t~tselect @SqlString = 'UPDATE '+@TargetDBName+'.dbo.conv_view_pic ' ~r~n" +  &
"~t~t~tselect @SqlString = @SqlString + 'SET pic_painter_id = '+@id ~r~n" +  &
"~t~t~tselect @SqlString = @SqlString + ' WHERE pic_painter_id = '+@pic_painter_id ~r~n" +  &
"~t~t~tExec sp_executesql @SqlString ~r~n" +  &
"~t~tEND ~r~n" +  &
 "~t~t~r~n" + &
"~t~tCLOSE cur_temp2 ~r~n" +  &
"~t~tDEALLOCATE cur_temp2 ~r~n" +  &
"~t~tFETCH NEXT FROM cur_temp INTO @view_id,@screen_id,@pic_painter_id; ~r~n" +  &
"~tEND ~r~n" +  &
"~tCLOSE cur_temp ~r~n" +  &
"~tDEALLOCATE cur_temp ~r~n" +  &
"END~r~n" 


of_execute_sqls("of_ver130_release_storeprocedure1")


return 1
end function

public function integer of_ver130_release_trigger1 ();//====================================================================
// Function: of_ver130_release_trigger1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 08/14/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

// added code here
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_update' and type = 'TR') ~r~n" + &
//"	drop trigger tri_ctx_custom_update ~r~n" 

//of_execute_sqls("of_ver130_release_trigger1")

//Added By Jay Chen 11-28-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_multi_detail_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_custom_multi_detail_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_custom_multi_detail_update on ctx_custom_multi_detail ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n" + &
"if update(custom_date6) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date6 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date6' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date7) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date7 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date7' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date8) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date8 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date8' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date9) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date9 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date9' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date10) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date10 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date10' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date11) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date11 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date11' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date12) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date12 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date12' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date13) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date13 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date13' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date14) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date14 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date14' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date15) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date15 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date15' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date16) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date16 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date16' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date17) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date17 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date17' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date18) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date18 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date18' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date19) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date19 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date19' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"+ &
"if update(custom_date20) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date20 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_detail' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date20' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = inserted.detail_id ~r~n"


is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_multi_hdr_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_custom_multi_hdr_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_custom_multi_hdr_update on ctx_custom_multi_hdr  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date6) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date6 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date6' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date7) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date7 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date7' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date8) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date8 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date8' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date9) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date9 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date9' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date10) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date10 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date10' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date11) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date11 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date11' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date12) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date12 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date12' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date13) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date13 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date13' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date14) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date14 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date14' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date15) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date15 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date15' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date16) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date16 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date16' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date17) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date17 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date17' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date18) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date18 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date18' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date19) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date19 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date19' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date20) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date20 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_custom_multi_hdr' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date20' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.hdr_id and ctx_all_notification.level_id2 = 0 ~r~n" 

//Added By Jay Chen 11-29-2013
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_am_document_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_am_document_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_am_document_update on ctx_am_document  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date6) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date6 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date6' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(received_date) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.received_date from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'received_date' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n"+ &
"if update(status_date) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.status_date from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'status_date' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n"+ &
"if update(checkout_date) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.checkout_date from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'checkout_date' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n"+ &
"if update(create_date) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.create_date from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_am_document' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'create_date' and ctx_all_notification.doc_id = inserted.doc_id and ~r~n" + &
"			ctx_all_notification.level_id1 = 0 and ctx_all_notification.level_id2 = 0 ~r~n"

//Added By Jay Chen 12-04-2013 Remark: add column start_date and end_date 's update to trigger ctx_fee_sched_nm
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'tri_ctx_fee_sched_nm_update' and type = 'TR') ~r~n" + &
"	drop trigger tri_ctx_fee_sched_nm_update ~r~n" 

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"create trigger tri_ctx_fee_sched_nm_update on ctx_fee_sched_nm  ~r~n" + &
"after update ~r~n" + &
"as ~r~n" + &
"if update(custom_date1) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date1 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date1' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date2) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date2 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date2' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date3) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date3 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date3' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date4) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date4 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date4' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n" + &
"if update(custom_date5) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.custom_date5 from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'custom_date5' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n"+ &
"if update(start_date) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.start_date from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'start_date' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n"+ &
"if update(end_date) ~r~n" + &
"	update	ctx_all_notification set ctx_all_notification.alm_date = inserted.end_date from inserted  ~r~n" + &
"	where	ctx_all_notification.ctx_id = inserted.ctx_id and ctx_all_notification.alm_table = 'ctx_fee_sched_nm' and   ~r~n" + &
"			ctx_all_notification.alm_column = 'end_date' and ctx_all_notification.doc_id = 0 and ~r~n" + &
"			ctx_all_notification.level_id1 = inserted.fee_sched_nm_id and ctx_all_notification.level_id2 = 0 ~r~n"


of_execute_sqls("of_ver130_release_trigger1")

return 1
end function

public function integer of_ver130_release_createfulltext1 ();//====================================================================
// Function: of_ver130_release_createfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 08/14/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
of_enable_fulltext()						

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_catalog') " + &
//"begin " + &
//"   	exec sp_fulltext_catalog 'ctx_custom_catalog','create' " + &
//"end "

//Added By Jay Chen 11-27-2013  Remark: add full text from custom_11 to custom_50 for table ctx_custom_multi_hdr
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_11','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_11','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_12','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_12','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_13','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_13','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_14','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_14','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_15','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_15','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_16','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_16','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_17','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_17','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_18','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_18','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_19','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_19','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_20','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_20','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_21','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_21','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_22','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_22','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_23','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_23','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_24','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_24','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_25','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_25','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_26','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_26','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_27','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_27','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_28','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_28','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_29','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_29','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_30','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_30','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_31','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_31','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_32','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_32','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_33','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_33','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_34','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_34','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_35','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_35','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_36','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_36','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_37','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_37','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_38','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_38','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_39','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_39','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_40','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_40','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_41','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_41','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_42','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_42','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_43','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_43','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_44','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_44','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_45','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_45','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_46','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_46','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_47','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_47','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_48','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_48','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_49','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_49','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_50','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_50','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_custom_multi_hdr','start_full' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_custom_multi_hdr','start_change_tracking' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_hdr') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_custom_multi_hdr','start_background_updateindex' "

//Added By Jay Chen 11-27-2013  Remark: add full text from custom_11 to custom_50 for table ctx_custom_multi_detail
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_11','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_11','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_12','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_12','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_13','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_13','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_14','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_14','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_15','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_15','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_16','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_16','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_17','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_17','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_18','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_18','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_19','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_19','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_20','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_20','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_21','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_21','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_22','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_22','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_23','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_23','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_24','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_24','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_25','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_25','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_26','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_26','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_27','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_27','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_28','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_28','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_29','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_29','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_30','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_30','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_31','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_31','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_32','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_32','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_33','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_33','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_34','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_34','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_35','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_35','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_36','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_36','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_37','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_37','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_38','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_38','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_39','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_39','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_40','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_40','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_41','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_41','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_42','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_42','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_43','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_43','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_44','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_44','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_45','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_45','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_46','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_46','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_47','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_47','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_48','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_48','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_49','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_49','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_50','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_50','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_custom_multi_detail','start_full' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFullTextChangeTrackingOn' )=0)  " + &
"       exec sp_fulltext_table 'ctx_custom_multi_detail','start_change_tracking' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom_multi_detail') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
"      exec sp_fulltext_table 'ctx_custom_multi_detail','start_background_updateindex' "

//Added By Jay Chen 12-05-2013
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_1','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_1','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_2','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_2','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_3','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_3','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_4','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_4','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_5','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_5','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_21','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_21','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_22','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_22','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'revision_reason','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','revision_reason','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'master_contract_name','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','master_contract_name','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_basic_info','start_full' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_basic_info','start_change_tracking' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_basic_info') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_basic_info','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_21','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_21','add'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_22','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_22','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_custom','start_full' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_custom','start_change_tracking' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_custom') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_custom','start_background_updateindex' "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_elements'),'field_value','IsFulltextIndexed' ) = 0)  " + &
" 	exec sp_fulltext_column 'ctx_elements','field_value','add'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFullTextPopulateStatus' )=0)  " + &
"	exec sp_fulltext_table 'ctx_elements','start_full' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFullTextChangeTrackingOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_elements','start_change_tracking' "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if  (OBJECTPROPERTY (OBJECT_ID('ctx_elements') , 'TableFullTextBackgroundUpdateIndexOn' )=0)  " + &
" exec sp_fulltext_table 'ctx_elements','start_background_updateindex' "

of_execute_sqls("of_ver130_release_createfulltext1")

return 1 
end function

public function integer of_ver130_release_dropfulltext1 ();//====================================================================
// Function: of_ver130_release_dropfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 08/14/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

of_enable_fulltext()							

//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'ctx_id','IsFulltextIndexed' ) = 1) " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_custom','ctx_id','drop' " + &
//"end "

//Added By Jay Chen 02-12-2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_11','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_11','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_12','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_12','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_13','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_13','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_14','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_14','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_15','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_15','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_16','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_16','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_17','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_17','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_18','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_18','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_19','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_19','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_20','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_20','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_21','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_21','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_22','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_22','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_23','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_23','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_24','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_24','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_25','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_25','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_26','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_26','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_27','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_27','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_28','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_28','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_29','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_29','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_30','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_30','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_31','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_31','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_32','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_32','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_33','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_33','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_34','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_34','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_35','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_35','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_36','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_36','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_37','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_37','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_38','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_38','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_39','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_39','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_40','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_40','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_41','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_41','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_42','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_42','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_43','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_43','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_44','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_44','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_45','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_45','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_46','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_46','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_47','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_47','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_48','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_48','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_49','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_49','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_hdr'),'custom_50','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_hdr','custom_50','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_11','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_11','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_12','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_12','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_13','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_13','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_14','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_14','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_15','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_15','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_16','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_16','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_17','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_17','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_18','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_18','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_19','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_19','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_20','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_20','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_21','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_21','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_22','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_22','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_23','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_23','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_24','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_24','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_25','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_25','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_26','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_26','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_27','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_27','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_28','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_28','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_29','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_29','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_30','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_30','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_31','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_31','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_32','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_32','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_33','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_33','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_34','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_34','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_35','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_35','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_36','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_36','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_37','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_37','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_38','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_38','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_39','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_39','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_40','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_40','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_41','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_41','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_42','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_42','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_43','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_43','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_44','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_44','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_45','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_45','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_46','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_46','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_47','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_47','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_48','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_48','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_49','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_49','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom_multi_detail'),'custom_50','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom_multi_detail','custom_50','drop'  "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_1','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_1','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_2','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_2','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_3','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_3','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_4','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_4','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_notes_5','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_notes_5','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_21','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_21','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'custom_22','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','custom_22','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'revision_reason','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','revision_reason','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_basic_info'),'master_contract_name','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_basic_info','master_contract_name','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_21','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_21','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'custom_22','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_custom','custom_22','drop'  "
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if (COLUMNPROPERTY (OBJECT_ID('ctx_elements'),'field_value','IsFulltextIndexed' ) = 1)  " + &
" 	exec sp_fulltext_column 'ctx_elements','field_value','drop'  "

of_execute_sqls("of_ver130_release_dropfulltext1")
return 1

end function

public function integer of_ver130_updates ();//Added By Mark Lee 08/14/2013

of_ver130_release_table1()
of_ver130_release_view1()
of_ver130_release_storeprocedure1()
of_ver130_release_storeprocedure2()
of_ver130_release_trigger1() 

return 1
end function

public function integer of_ver130_release_storeprocedure2 ();//====================================================================
// Function: of_ver130_release_storeprocedure2
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 12/09/2013
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Exists ( Select 1 From sysobjects where type = 'P' and name = 'sp_create_request_data_table' )~r~n" + &
"Begin~r~n" + &
"~tDrop Procedure sp_create_request_data_table~r~n" + &
"End ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create Procedure sp_create_request_data_table( @rwf_id int,@user_id varchar(50),@ctx_id int, @sql_delete varchar(max) output, @err_msg varchar(8000) output)~r~n" + &
"AS~r~n" + &
"Begin~r~n" + &
"~tDeclare~t@num tinyint ,@count int, @col_number_value int,@scale int, @rowid int, @order_no int,~t@table_id int,~t@record_id int,~t@seq_no int~r~n" + &
"~tDeclare @exists_num int, @rowid_old int, @update_or_insert int, @id int, @fee_sched_nm_id int,~t@error_sum int~r~n" + &
"~tDeclare @col_decimal_value numeric(14,4)~r~n" + &
"~tDeclare @col_type varchar(128),~t@col_string_value varchar(1000),@col_name varchar(50),@table_name varchar(50),@table_old varchar(50)~r~n" + &
"~tDeclare @col_datetime_value datetime~r~n" + &
"~tDeclare @sql_insert varchar(max),@sql_value varchar(max), @sql varchar(max),@sql_delete2 varchar(max), @sql_log varchar(max), @sql_where varchar(max)~r~n" + &
"~tDeclare @sql_execute nvarchar(1000)~r~n" + &
"~t~r~n" + &
"~t~t~t~t~r~n" + &
"~tSet @err_msg =''~r~n" + &
"~tSet @table_old = ''~r~n" + &
"~tSet @sql_delete2 = ''~r~n" + &
"~tSet @sql = ''~r~n" + &
"~tSet @sql_insert = ''~r~n" + &
"~tSet @sql_value = ''~r~n" + &
"~tSet @sql_log = ''~r~n" + &
"~tSet @sql_where = ''~r~n" + &
"~tSet @num = 0~r~n" + &
"~tSet @exists_num = 0~r~n" + &
"~tSet @seq_no = 0~r~n" + &
"~tSet @rowid_old = 0~r~n" + &
"~tSet @update_or_insert = 0~t~r~n" + &
"~tSet @fee_sched_nm_id = 0~r~n" + &
"~t~r~n" + &
"~tDECLARE request_table_insert_cursor CURSOR FOR ~r~n" + &
"      ~tSelect table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ~r~n" + &
"~t~tFrom request_webform_detail~r~n" + &
"~t~tWhere types='column' and table_name in( 'ctx_custom','ctx_products','ctx_fee_sched_nm','ctx_custom_multi_hdr')~tand rwf_id = @rwf_id ~r~n" + &
"~t~tand ( col_string_value is not null or col_datetime_value is not null or col_number_value is not null or col_decimal_value is not null  )~r~n" + &
"~t~tGroup by table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ;~r~n" + &
"~r~n" + &
"~tOPEN request_table_insert_cursor~r~n" + &
"~tFETCH NEXT FROM request_table_insert_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~t~t~t~r~n" + &
"~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~tBEGIN~r~n" + &
"~t~tSet @table_name = lower(@table_name)~r~n" + &
"~t~t/*the table ctx_products need to control the data value that were completed.*/~r~n" + &
"~t~tif (@table_name = 'ctx_products')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @exists_num~t = 0 ~r~n" + &
"~t~t~tSelect @exists_num = sum(num) From (~r~n" + &
"~t~t~t~tSelect count(1) as num From request_webform_detail~r~n" + &
"~t~t~t~tWhere rwf_id = @rwf_id~tand table_name = 'ctx_products'~tand rowid = @rowid~tand col_name = 'product_type'~r~n" + &
"~t~t~t~tand col_number_value in (Select lookup_code From code_lookup Where lookup_name = 'Contract Product Type')~r~n" + &
"~t~t~t~tUnion all~r~n" + &
"~t~t~t~tSelect count(1) as num from request_webform_detail~r~n" + &
"~t~t~t~tWhere rwf_id = @rwf_id and table_name = 'ctx_products'~tand rowid = @rowid~tand col_name = 'product_id'~r~n" + &
"~t~t~t~tand col_number_value in (Select lookup_code From code_lookup Where lookup_name = 'Contract Product Name')~r~n" + &
"~t~t~t~t) dd ;~t~t~t~r~n" + &
"~t~t~tif (@exists_num <> 2 )~r~n" + &
"~t~t~tBegin~t~t~r~n" + &
"~t~t~t~tSet @table_old = @table_name~r~n" + &
"~t~t~t~tSet @rowid_old = @rowid~r~n" + &
"~t~t~t~t/*~tneed it for table ctx_products setting~t*/~r~n" + &
"~t~t~t~tFETCH NEXT FROM request_table_insert_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~t~t~tCONTINUE  ~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* first create  data or multi-row */~r~n" + &
"~t~tif ((@table_old <> @table_name) or (@rowid_old <> @rowid and @rowid > 1 and  @table_old = @table_name ) ) ~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @table_id = table_id from sys_tables where lower(import_table_name) = @table_name;~r~n" + &
"~t~t~tSet @update_or_insert = 0 ~r~n" + &
"~r~n" + &
"~t~t~tSelect @record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @record_id ;~t~t~t~t~r~n" + &
"~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @err_msg =' Table Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~t~treturn ~r~n" + &
"~t~t~tEnd~t~r~n" + &
"~t~t~tSet @record_id = @record_id + 1 ~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*if (@table_name = 'ctx_products')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @rec_id = @record_id~t~t~t~t~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tElse  */~r~n" + &
"~t~t~tif (@table_name = 'ctx_custom')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~t/* the rec_id column value need to change the PB code and it use @record_id value replace */~t~t~t~t~r~n" + &
"~t~t~t~tSet @sql_execute = 'Select @update_or_insert = count(1) From '+@table_name+' Where ctx_id ='+convert(varchar, @ctx_id)~r~n" + &
"~t~t~t~tEXEC SP_EXECUTESQL @sql_execute, N'@update_or_insert int output',@update_or_insert OUTPUT~t~r~n" + &
"~t~t~tEnd ~r~n" + &
"~t~t~telse if (@table_name = 'ctx_custom_multi_hdr')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~t/* the rec_id column value need to change the PB code and it use @record_id value replace */~r~n" + &
"~t~t~t~t/*~tno update the column calc_field_1\calc_field_2\calc_field_3 value on table ctx_custom_multi_hdr */~r~n" + &
"~t~t~t~tSELECT @id = ids.custom_id1 FROM ids ~r~n" + &
"~t~t~t~tUpdate ids SET custom_id1 =( isnull ( custom_id1 , 0 ) + 1 ) Where custom_id1 = @id ;~r~n" + &
"~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg =' Table Position:'+convert(varchar,@num)+'; Invalid custom_id1. '~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd~t~r~n" + &
"~t~t~t~tSet @id = @id + 1 ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if (@table_name = 'ctx_fee_sched_nm')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@fee_sched_nm_id = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @fee_sched_nm_id = Max(fee_sched_nm_id ) FROM ctx_fee_sched_nm WHERE ctx_id =@ctx_id ;~r~n" + &
"~t~t~t~t~tif(@fee_sched_nm_id is null or @fee_sched_nm_id <= 0 )~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @fee_sched_nm_id = 0~r~n" + &
"~t~t~t~t~tEnd~t~t~t~t~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~tSet @fee_sched_nm_id = @fee_sched_nm_id + 1 ~t~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tif (@seq_no = 0)~t~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~t~t~t~t~t~t~t~r~n" + &
"~t~t~tend ~t~t~t~r~n" + &
"~t~t~tSet @seq_no = @seq_no + 1~t~t~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tSet @sql_log = @sql_log + ' INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type ) VALUES('~r~n" + &
"~t~t~t~t~t~t+convert(varchar,@record_id)+' ,1001, '+convert(varchar,@seq_no)+' ,'+convert(varchar,@table_id) +','+convert(varchar, @ctx_id) ~r~n" + &
"~t~t~t~t~t~t+','''',''INSERT'','''+@user_id+''',getdate(),1,''I'') ; '~r~n" + &
"~r~n" + &
"~t~t~tSet @table_old = @table_name~r~n" + &
"~t~t~tSet @rowid_old = @rowid~r~n" + &
"~t~t~t~t~t~t~r~n" + &
"~t~t~tif len(@sql_where) > 0 ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif(right(@sql_insert,1) = ',')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t/* update table action */~r~n" + &
"~t~t~t~t~tSet @sql_insert = left(@sql_insert, len(@sql_insert) - 1)~r~n" + &
"~t~t~t~t~tSet @sql = @sql + @sql_insert +  @sql_where + ' ; '~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t/* insert table action */~r~n" + &
"~t~t~t~t~tSet @sql = @sql + @sql_insert+ @sql_where + @sql_value+ ') ; '~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tSet @sql_value = ''~r~n" + &
"~t~t~tif @update_or_insert = 0 ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~t/* insert table action */~r~n" + &
"~t~t~t~tif (@table_name = 'ctx_products')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @sql_insert = ' INSERT INTO '+@table_name+' ( ctx_id,record_id '~r~n" + &
"~t~t~t~t~tSet @sql_where = ') VALUES ('+ convert(varchar,@ctx_id )+', '+convert(varchar,@record_id )+ ' '~r~n" + &
"~t~t~t~t~tSet @sql_delete2 = @sql_delete2 + ' Delete From '+@table_name+ ' Where ctx_id ='+ convert(varchar,@ctx_id )+ ' and record_id ='+convert(varchar,@record_id )+' ; '~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse if (@table_name = 'ctx_custom_multi_hdr')~r~n" + &
"~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~tSet @sql_insert = ' INSERT INTO '+@table_name+' ( ctx_id,hdr_id '~r~n" + &
"~t~t~t~t~tSet @sql_where = ') VALUES ('+ convert(varchar,@ctx_id )+', '+convert(varchar,@id )+ ' '~r~n" + &
"~t~t~t~t~tSet @sql_delete2 = @sql_delete2 + ' Delete From '+@table_name+ ' Where ctx_id ='+ convert(varchar,@ctx_id )+ ' and hdr_id= '+convert(varchar,@id )+' ; '~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if (@table_name = 'ctx_fee_sched_nm')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @sql_insert = ' INSERT INTO '+@table_name+' ( ctx_id,fee_sched_nm_id '~r~n" + &
"~t~t~t~t~tSet @sql_where = ') VALUES ('+ convert(varchar,@ctx_id )+', '+convert(varchar,@fee_sched_nm_id )+ ' '~r~n" + &
"~t~t~t~t~tSet @sql_delete2 = @sql_delete2 + ' Delete From '+@table_name+ ' Where ctx_id ='+ convert(varchar,@ctx_id )+ ' and fee_sched_nm_id= '+convert(varchar,@fee_sched_nm_id )+' ; '~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @sql_insert = ' INSERT INTO '+@table_name+' ( ctx_id '~r~n" + &
"~t~t~t~t~tSet @sql_where = ') VALUES ('+ convert(varchar,@ctx_id )+' '~r~n" + &
"~t~t~t~t~tSet @sql_delete2 = @sql_delete2 + ' Delete From '+@table_name+ ' Where ctx_id ='+ convert(varchar,@ctx_id )+ ' ; '~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~t/* update table(ctx_custom) action */~r~n" + &
"~t~t~t~tSet @sql_insert = ' Update '+@table_name+' set '~r~n" + &
"~t~t~t~tSet @sql_where = ' Where ctx_id ='+ convert(varchar,@ctx_id )~t~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~t/* make a distinction for commit sql ( 0 , 1 )  */~r~n" + &
"~t~tif (@update_or_insert = 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t/* insert table action */~r~n" + &
"~t~t~tSet @count = 0 ~r~n" + &
"~r~n" + &
"~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_datetime_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = @sql_value + ', convert(datetime,''' + convert(varchar,@col_datetime_value,101)+ ''') '~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='numeric' and @scale = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='numeric' and @scale > 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_decimal_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_decimal_value)~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd ~r~n" + &
"~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = @sql_value + ',''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = @sql_value + ',''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tIf ( @count = 1)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @sql_insert = @sql_insert +' , '+ @col_name +  ' '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t/* update table action */~r~n" + &
"~t~t~tSet @count = 0 ~r~n" + &
"~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_datetime_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = ' convert(datetime,''' + convert(varchar,@col_datetime_value,101)+ ''') '~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='numeric' and @scale = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='numeric' and @scale > 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_decimal_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_decimal_value)~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd ~r~n" + &
"~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value = ' ''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_value =  ' ''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tIf ( @count = 1)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert +' '+ @col_name + '= '+ @sql_value + ' ,'~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tFETCH NEXT FROM request_table_insert_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~tEnd~r~n" + &
"~tCLOSE request_table_insert_cursor~r~n" + &
"~tDEALLOCATE request_table_insert_cursor~r~n" + &
"~r~n" + &
"~tif len(@sql_where) > 0 ~r~n" + &
"~tBegin~r~n" + &
"~t~tif(right(@sql_insert,1) = ',')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~t/* update table action */~r~n" + &
"~t~t~tSet @sql_insert = left(@sql_insert, len(@sql_insert) - 1)~r~n" + &
"~t~t~tSet @sql = @sql + @sql_insert +  @sql_where + ' ; '~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~t/* insert table action */~r~n" + &
"~t~t~tSet @sql = @sql + @sql_insert+ @sql_where + @sql_value+ ') ; '~r~n" + &
"~t~tEnd ~r~n" + &
"~tEnd~r~n" + &
"~t~r~n" + &
"~tSet @num = 2 ~r~n" + &
"~tSet @error_sum = 0~r~n" + &
"~tSet @sql_delete = @sql_delete2~r~n" + &
"~tBEGIN TRY~r~n" + &
"~tBEGIN TRANSACTION ctx_request_table;~t~t~t~r~n" + &
"~t~tExecute(@sql) ;~r~n" + &
"~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~r~n" + &
"~t~tSet @num = 3~r~n" + &
"~t~tExecute(@sql_log) ;~r~n" + &
"~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~tEND TRY~r~n" + &
"~tBEGIN CATCH~r~n" + &
"~t~tSelect @err_msg = 'Table? ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~tROLLBACK TRANSACTION ctx_request_table;~r~n" + &
"~t~treturn ~r~n" + &
"~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~tIf (@error_sum <> 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @err_msg = @err_msg+ ' Table? Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~tROLLBACK TRANSACTION ctx_request_table;~r~n" + &
"~t~treturn ~t~r~n" + &
"~tEnd~r~n" + &
"~telse~r~n" + &
"~tBegin~r~n" + &
"~t~tCOMMIT TRANSACTION ctx_request_table;~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"End~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Exists ( Select 1 From sysobjects where type = 'P' and name = 'sp_create_request_data' )~r~n" + &
"Begin~r~n" + &
"~tDrop Procedure sp_create_request_data~r~n" + &
"End ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create Procedure sp_create_request_data( @rwf_id int,@user_id varchar(50),@notes varchar(8000),@ctx_id int output, @err_msg varchar(8000) output)~r~n" + &
"AS~r~n" + &
"Begin~r~n" + &
"~tDeclare @num tinyint, @error_sum int~r~n" + &
"~tDeclare~t@count int,~t@max int, @template_id int, @category int,~t@lookup_code int,@status int, @record_id int, @app_facility int~r~n" + &
"~tDeclare~t@table_id int, @custom_status1 int,~t@custom_status2 int, @seq_no int,@contact_id int~r~n" + &
"~tDeclare @rowid int, @order_no int,@col_number_value int,@scale int, @doc_id int, @document_id int, @request_id int~r~n" + &
"~tDeclare @col_decimal_value numeric(14,4)~r~n" + &
"~tDeclare @version_number varchar(15), @master_contract_name varchar(255),@return varchar(10)~r~n" + &
"~tDeclare @table_name varchar(50), @col_name varchar(50), @col_string_value varchar(1000), @col_type varchar(128),@owner_user varchar(50), @creator varchar(50)~r~n" + &
"~tDeclare @document_name varchar(200), @doc_ext varchar(10), @description varchar(2000), @doc_type varchar(6)~r~n" + &
"~tDeclare @version_date datetime, @col_datetime_value datetime~r~n" + &
"~tDeclare @allow_update_doc char(1)~r~n" + &
"~tDeclare @sql_insert varchar(max),@sql_value varchar(max), @sql varchar(max), @sql_delete varchar(max),@sql_delete2 varchar(max),@sql_delete_ctx varchar(max)~r~n" + &
"~tDeclare @sql_temp1 varchar(max),@sql_temp2 varchar(max),@sql_temp3 varchar(max),@sql_temp4 varchar(max), @sql_update varchar(max)~r~n" + &
"~r~n" + &
"~tSET ANSI_NULLS ON;~r~n" + &
"~r~n" + &
"~tSET QUOTED_IDENTIFIER ON;~r~n" + &
"~r~n" + &
"~tSet @sql_delete = ''~r~n" + &
"~tSet @sql_delete2 = ''~r~n" + &
"~tSet @num = 1~r~n" + &
"~t/* add adjuest status is 'Waiting for Approval' */~r~n" + &
"~tSELECT @count = Count(*) From request_webform Where rwf_id =@rwf_id ;~r~n" + &
"~tif(@count = 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; The @rwf_id is a invalid.'~r~n" + &
"~t~treturn~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~t/* @ctx_id is come from template module of create value */~r~n" + &
"~tif (@ctx_id is null or @ctx_id = 0)~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSELECT @count = Count(*) FROM ctx_basic_info;~r~n" + &
"~t~tSELECT @max = isnull(MaxContractCnt,0) FROM icred_settings;~r~n" + &
"~r~n" + &
"~t~tSet @num = 2~r~n" + &
"~t~tif (@max > 0 and @count >= @max)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+';Your record limit for number of contracts has been reached. Call Contract Logix sales at 866-371-4445 to purchase an upgrade.'~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*new*/~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @lookup_code~t= lookup_code from code_lookup where   upper(lookup_name) = upper('Contract Status') and upper(code) = upper('active');~r~n" + &
"~t~t~r~n" + &
"~t~tSelect @category =category, @owner_user =owner_user, @allow_update_doc =allow_update_doc, @template_id = template_id,@creator =create_user From request_webform Where rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @count = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='category' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @status = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='status' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @version_date = col_datetime_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='version_date' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @version_number = col_string_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='version_number' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @master_contract_name = col_string_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='master_contract_name' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @app_facility = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='app_facility' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @custom_status1 = count(1) from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='custom_status1' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @custom_status2 = count(1) from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='custom_status2' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect top 1 @contact_id = col_number_value from request_webform_detail where table_name = 'ctx_contacts' and col_name = 'contact_id' ~r~n" + &
"~t~t~t~tand (col_type = 'numeric' or col_type = 'int' ) and rwf_id =@rwf_id;~r~n" + &
"~t~t~r~n" + &
"~t~tif (@owner_user is not null and @owner_user = '$<Creater>$')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @owner_user = @creator~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update default the category value*/~r~n" + &
"~t~tif (@count is not null and @count > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @category = @count~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tif(@version_number is null or @version_number ='')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @version_number~t= '1.0'~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@version_date is null )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @version_date~t= getdate()~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@master_contract_name is null)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @master_contract_name = ''~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tif(@status is null or @status = 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @status = @lookup_code~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*~tget ctx_basic_info table id*/~r~n" + &
"~t~tselect @table_id = table_id from sys_tables where lower(import_table_name) = lower('ctx_basic_info') ;~r~n" + &
"~t~tselect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~tif (@seq_no is null )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @seq_no = MIN(seq_no)  from sys_audit ;~r~n" + &
"~t~t~tif (@seq_no is null )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = @seq_no - 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@seq_no = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = @seq_no + 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @num = 3~r~n" + &
"~t~tSelect @ctx_id = isnull(ctx_id, 0) From ids;~t~r~n" + &
"~t~tUPDATE ids  SET ctx_id = (isnull(ctx_id , 0) + 1) Where ctx_id = @ctx_id ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid CTX id. '~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tSet @num = 4~r~n" + &
"~t~tSelect @record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @record_id ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tSet @ctx_id = @ctx_id + 1 ~r~n" + &
"~t~tSet @record_id = @record_id + 1 ~r~n" + &
"~t~t~r~n" + &
"~t~tSet @sql_insert = 'INSERT INTO ctx_basic_info ( ctx_id, category, status,  record_id, version_number,version_date, app_facility, master_contract_name, come_from '~r~n" + &
"~t~tSet @sql_value = ' VALUES ('+ convert(varchar,@ctx_id )+','+convert(varchar, @category)+','+convert(varchar, @status)+','+convert(varchar, @record_id)+~r~n" + &
"~t~t~t~t~t~t','''+ @version_number+''',convert(datetime,'''+convert(varchar,@version_date)+'''),'+convert(varchar, @app_facility)+','''+@master_contract_name +''', ' +~r~n" + &
"~t~t~t~t~t~t'''request(0)-completed'' '~t~t~t~t~t~r~n" + &
"~r~n" + &
"~t~tDECLARE request_cursor CURSOR FOR ~r~n" + &
"      ~t~tSelect table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ~r~n" + &
"~t~t~tFrom request_webform_detail~r~n" + &
"~t~t~tWhere types='column' and table_name ='ctx_basic_info'~tand rwf_id = @rwf_id ~r~n" + &
"~t~t~tGroup by table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ;~r~n" + &
"~r~n" + &
"~t~tOPEN request_cursor~r~n" + &
"~t~tFETCH NEXT FROM request_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~t~tBEGIN~r~n" + &
"~t~t~tif (@table_name = 'ctx_basic_info' and ( @col_name <> 'category'and @col_name <> 'version_date'and @col_name <> 'version_number'and @col_name <> 'master_contract_name'and @col_name <> 'app_facility' and @col_name <> 'status') ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @count = 0 ~r~n" + &
"~r~n" + &
"~t~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_datetime_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ', convert(datetime,''' + convert(varchar,@col_datetime_value,101)+ ''') '~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale > 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_decimal_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_decimal_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~tIf ( @count = 1)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_insert = @sql_insert + ', '+ @col_name~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tFETCH NEXT FROM request_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~tEnd~r~n" + &
"~t~tCLOSE request_cursor~r~n" + &
"~t~tDEALLOCATE request_cursor~r~n" + &
"~r~n" + &
"~t~tSet @num = 5~r~n" + &
"~t~tSet @error_sum = 0 ~r~n" + &
"~t~tSelect @sql_insert = @sql_insert + ' ) '~r~n" + &
"~t~tSelect @sql_value = @sql_value + ' ) '~r~n" + &
"~t~tSet @sql = @sql_insert + @sql_value~r~n" + &
"~r~n" + &
"~t~t/*about the app_facility table will use new company id */~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION CTX1;~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tExecute(@sql) ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t/* move the detele Statement to the end */~t~t~t~r~n" + &
"~r~n" + &
"~t~t~t/*update sys_audit table 2 */~r~n" + &
"~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~tVALUES(@record_id, 1001,@seq_no ,@table_id,@ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@record_id)+' and field_id = ''1001'' and seq_no = '+convert(varchar,@seq_no) + ' ; '~t~t~t~r~n" + &
"~r~n" + &
"~t~t~t/*update ctx_version table 3 */~r~n" + &
"~t~t~tINSERT INTO ctx_version (ctx_id,version_id,version_number,version_date,user_id,old_value,new_value)~r~n" + &
"~t~t~t~tValues(@ctx_id ,1,@version_number,@version_date,@user_id, '',@version_number);~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_version where ctx_id ='+convert(varchar,@ctx_id)+' and version_id =1 ; '~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*update sys_statusaudit table 4 status*/~r~n" + &
"~t~t~tINSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)~r~n" + &
"~t~t~t~tVALUES (@ctx_id ,1,@lookup_code,getdate(),@user_id,'status');~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@ctx_id)+' and seq_no = 1 and field_name =''status'' ; '~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*update sys_statusaudit table 4 if exists custom_status1 column*/~r~n" + &
"~t~t~tif (@custom_status1 > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tINSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)~r~n" + &
"~t~t~t~t~tVALUES (@ctx_id ,1,@lookup_code,getdate(),@user_id,'custom_status1');~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@ctx_id)+' and seq_no = 1 and field_name =''custom_status1'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~t/*update sys_statusaudit table 4 if exists custom_status2*/~r~n" + &
"~t~t~tif(@custom_status2 > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tINSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)~r~n" + &
"~t~t~t~t~tVALUES (@ctx_id ,1,@lookup_code,getdate(),@user_id,'custom_status2');~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@ctx_id)+' and seq_no = 1 and field_name =''custom_status2'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_basic_info Where ctx_id ='+convert(varchar,@ctx_id)+' ; '~r~n" + &
"~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX1;~r~n" + &
"~t~t~tReturn  ~r~n" + &
"~t~tEND CATCH;~r~n" + &
"~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX1;~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEnd ~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION CTX1;~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* ctx_contract_contacts table */~r~n" + &
"~t~t/*Set @count =0~r~n" + &
"~t~tSELECT @count =Count(1)  FROM ctx_contacts WHERE facility_id = @app_facility;~r~n" + &
"~t~tif (@count =1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSELECT @contact_id =contact_id FROM ctx_contacts  WHERE facility_id = @app_facility;~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse if (@count > 1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSELECT @contact_id =contact_id FROM ctx_contacts  WHERE defaultto = '1' and facility_id = @app_facility ;~r~n" + &
"~t~tEnd*/~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tif(@contact_id is not null and @contact_id > 0 )~r~n" + &
"~t~tBegin~t~t~r~n" + &
"~t~t~t/*~tcheck the contacts if not exsist the company */~r~n" + &
"~t~t~tSet @count =0~r~n" + &
"~t~t~tSELECT @count =Count(1)  FROM ctx_contacts WHERE facility_id = @app_facility and contact_id= @contact_id;~r~n" + &
"~t~t~tif (@count > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 6~r~n" + &
"~t~t~t~tSelect @record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@record_id  ;~r~n" + &
"~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tSet @record_id = @record_id + 1~r~n" + &
"~r~n" + &
"~t~t~t~tSelect @table_id = table_id from sys_tables where charindex('d_contract_det_contact_',lower(table_name) ) > 0~r~n" + &
"~t~t~t~t~tand charindex('contracted company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tSet @error_sum = 0~r~n" + &
"~t~t~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~t~t~tSet @sql_delete2 = ''~r~n" + &
"~t~t~t~tBEGIN TRY~r~n" + &
"~t~t~t~tBEGIN TRANSACTION CTX2;~t~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~t/*update ctx_contract_contacts table 5E */~r~n" + &
"~t~t~t~t~tINSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) ~r~n" + &
"~t~t~t~t~tVALUES ( @ctx_id , @contact_id, 'E', @record_id, 'Y', 'N', 'F' )~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@ctx_id)+' and ic_area =''E'' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~t~t~tVALUES(@record_id ,1001, @seq_no ,@table_id, @ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From sys_audit Where rec_id = '+convert(varchar,@record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tEND TRY~r~n" + &
"~t~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEND CATCH;~r~n" + &
"~r~n" + &
"~t~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tCOMMIT TRANSACTION CTX2;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update ctx_contract_contacts table 5I */~r~n" + &
"~t~tif(@owner_user is null or rtrim(ltrim(@owner_user)) = '')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@template_id is not null and @template_id > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @contact_id = ctx_contract_contacts.contact_id,@owner_user = ctx_contacts.user_d~r~n" + &
"~t~t~t~tFrom ctx_templates_info, ctx_contract_contacts, ctx_contacts~r~n" + &
"~t~t~t~tWhere ctx_templates_info.ctx_id = ctx_contract_contacts.ctx_id ~r~n" + &
"~t~t~t~tAnd ctx_contacts.contact_id = ctx_contract_contacts.contact_id~r~n" + &
"~t~t~t~tAnd ctx_templates_info.ib_our_contacts = 1 and ctx_templates_info.add_contact = 1 and ctx_templates_info.ib_owner = 1~r~n" + &
"~t~t~t~tAnd ctx_contract_contacts.ic_area = 'I' and ctx_contract_contacts.owner = 'Y' and ctx_templates_info.id = @template_id;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tSet @num = 7~r~n" + &
"~t~tSelect @contact_id = contact_id from ctx_contacts where user_d = @owner_user;~t~t~r~n" + &
"~t~tSelect @record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@record_id  ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~t~tSet @record_id = @record_id + 1 ~r~n" + &
"~r~n" + &
"~t~tSelect @table_id = table_id from sys_tables where charindex('d_contract_det_contact_',lower(table_name) ) > 0~r~n" + &
"~t~t~tand charindex('our company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~r~n" + &
"~t~tSet @num = 8~r~n" + &
"~t~tSet @error_sum = 0~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION CTX3;~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*update ctx_contract_contacts table 5I */~r~n" + &
"~t~t~tINSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) ~r~n" + &
"~t~t~tVALUES ( @ctx_id , @contact_id, 'I', @record_id , 'Y', 'Y', 'F' )~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@ctx_id)+' and ic_area =''I'' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~r~n" + &
"~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~tVALUES(@record_id,1001, @seq_no ,@table_id, @ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~t~t~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~r~n" + &
"~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From sys_audit Where rec_id = '+convert(varchar,@record_id )+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX3;~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEND CATCH;~t~r~n" + &
"~t~t~t~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX3;~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd ~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION CTX3;~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* except ctx_basic_info table */~r~n" + &
"~t~tSet @err_msg = ''~r~n" + &
"~t~tSet @num = 9~r~n" + &
"~t~tSet @error_sum = 0~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~t~texecute sp_create_request_data_table @rwf_id ,@user_id ,@ctx_id , @sql_delete2 output, @err_msg output~r~n" + &
"~t~tif (@@error <> 0 or len(@err_msg) > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform_document table  */~r~n" + &
"~t~tSet @sql = ''~r~n" + &
"~t~tSet @sql_insert = ''~r~n" + &
"~t~tSet @sql_value = ''~r~n" + &
"~t~tSet @sql_update = ''~r~n" + &
"~t~tSet @sql_temp1 = ''~r~n" + &
"~t~tSet @sql_temp2 = ''~r~n" + &
"~t~tSet @sql_temp3 = ''~r~n" + &
"~t~tSet @sql_temp4 = ''~t~t~r~n" + &
"~t~tSet @status = NULL~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~r~n" + &
"~t~tselect @status = lookup_code from code_lookup where upper(lookup_name) = upper('Contract Document Status') and upper(code) = upper('New') ;~r~n" + &
"~r~n" + &
"~t~tSet @num = 10~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @count = count(*) from request_webform_document Where datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tSELECT @doc_id = doc_id FROM ids ;~r~n" + &
"~t~tupdate ids SET doc_id =( isnull ( doc_id , 0 ) + @count ) Where doc_id~t= @doc_id ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid doc_id. '~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tDeclare document_cursor Cursor For ~r~n" + &
"~t~t~tSelect document_id,doc_type,request_id from request_webform_document~r~n" + &
"~t~t~tWhere datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tOpen document_cursor~r~n" + &
"~t~tFetch Next From document_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tWhile @@FETCH_STATUS = 0~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = @count + 1~r~n" + &
"~t~t~tSelect @sql_insert = @sql_insert + 'INSERT INTO ctx_am_document ( doc_id, ctx_id, doc_name, revision, doc_type,doc_ext, category, base_type, create_by, create_date,~r~n" + &
"~t~t~t~t~t status,status_by, status_date, filename, revision_control, received_by, received_date,notes )' +~r~n" + &
"~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+','+ convert(varchar,@ctx_id)+',document_name,1.0,''Other'', left(doc_ext,3), '+ convert(varchar, @category)+~r~n" + &
"~t~t~t~t~t~t', ''3'',''' +@user_id+''',GETDATE(),'+ convert(varchar, @status) +', '''+@user_id+''',GETDATE(), document_name +'+'''.'''+ '+doc_ext,1, ''' +~r~n" + &
"~t~t~t~t~t~t@user_id+''' ,GETDATE(),description From request_webform_document Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp1 = @sql_temp1 + ' Delete From ctx_am_document Where doc_id ='+convert(varchar, @doc_id + @count)+' ; '~r~n" + &
"~r~n" + &
"~t~t~tSelect @sql = @sql + 'INSERT INTO ctx_am_doc_image ( doc_id , revision, image_file , doc_ext , modify_date , doc_ext_full ) ' +~r~n" + &
"~t~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+', 1.0,document_content, left(doc_ext,3), getdate() , doc_ext From request_webform_document~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~r~n" + &
"~t~t~tSelect @sql_temp2 = @sql_temp2 + ' Delete From ctx_am_doc_image Where doc_id ='+convert(varchar, @doc_id + @count)+' and revision =1.0 ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tSelect @sql_value = @sql_value + 'INSERT INTO ctx_am_doc_audit ( doc_id, audit_id, revision, doc_ext, action, action_by, action_date,~r~n" + &
"~t~t~t~t~t~t~t filename,notes,esign_type) Select '+convert(varchar, @doc_id + @count)+', 1, 1.0, left(doc_ext,3),''New - Existing'','''+@user_id+''',~r~n" + &
"~t~t~t~t~t~t~t GETDATE(),document_name +'+'''.'''+ '+doc_ext,description,''sertifi'' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~t~r~n" + &
"~t~t~tSelect @sql_temp3 = @sql_temp3 + ' Delete From ctx_am_doc_audit Where doc_id ='+convert(varchar, @doc_id + @count)+' and audit_id =1 ; '~t~t~t~t~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tSelect @sql_update = @sql_update + ' Update request_webform_document Set file_id ='+convert(varchar, @doc_id + @count)+ ' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp4 = @sql_temp4 + ' Update request_webform_document Set file_id = null From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~tFetch Next From document_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tEnd~t~r~n" + &
"~t~tClose document_cursor~r~n" + &
"~t~tDeallocate document_cursor~r~n" + &
"~r~n" + &
"~t~tif (@count > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @num = 11~r~n" + &
"~t~t~tSet @error_sum = 0~t~t~t~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~tBEGIN TRANSACTION document_trans;~t~r~n" + &
"~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~tExecute(@sql_insert) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp1~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp2~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_value) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp3~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_update) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp4~r~n" + &
"~r~n" + &
"~t~t~tEnd TRY~r~n" + &
"~t~t~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~r~n" + &
"~t~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tCOMMIT TRANSACTION document_trans;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform table and add the log */~r~n" + &
"~t~tSet @num = 12~r~n" + &
"~t~tSet @error_sum = 0~t~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION ctx_request_log;~t~r~n" + &
"~t~t~tUpdate request_webform~tSet status ='Completed', ctx_id = @ctx_id Where rwf_id = @rwf_id ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Update request_webform~tSet status =''Waiting for Approval'' , ctx_id =0 Where rwf_id ='+convert(varchar,@rwf_id) + ' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tINSERT INTO request_webform_log (rwf_id,notes ,user_id,modify_date ,action, ctx_id)~r~n" + &
"~t~t~t~tValues(@rwf_id, @notes, @user_id, getdate(), 'Approved', @ctx_id) ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Delete From request_webform_log Where rwf_id ='+convert(varchar,@rwf_id) + ' and action = ''Approved'' and ctx_id ='+convert(varchar,@ctx_id)+ ' ; '~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_request_log;~r~n" + &
"~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_request_log;~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION ctx_request_log;~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd~r~n" + &
"~telse~r~n" + &
"~tBegin~r~n" + &
"~t~t/* use the template create the request webform data.*/~r~n" + &
"~t~tSet @sql_insert = ' Update ctx_basic_info set '~r~n" + &
"~t~tSet @sql = ' Where ctx_id ='+ convert(varchar,@ctx_id )~r~n" + &
"~t~tSet @sql_value = ''~r~n" + &
"~t~tSet @sql_delete_ctx = ' delete from ctx_location_contacts where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_location_specialty where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_location_pracs where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_loc where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_elements where ctx_req_profile_hdr_id in ( select a.ctx_req_profile_hdr_id from ctx_req_profile_hdr a where a.ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_req_profile_hdr where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_data where fee_sched_location_id in ( select a.fee_sched_location_id from ctx_fee_sched_locations a where a.fee_sched_id in ( select b.fee_sched_id from ctx_fee_sched_hdr b where b.ctx_id ='+ convert(varchar,@ctx_id) +' ) )  ; ' +~r~n" + &
"~t~t~t' delete from ctx_fee_sched_locations where fee_sched_id in ( select a.fee_sched_id from ctx_fee_sched_hdr a where a.ctx_id ='+ convert(varchar,@ctx_id) +') ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_pracs where fee_sched_id in ( select a.fee_sched_id from ctx_fee_sched_hdr a where a.ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_hdr where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_file_location where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' +~r~n" + &
"~t~t~t' delete from ctx_orgs_contact where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_notification_users where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_notification where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_action_items where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_image where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_images where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_notification_users where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_notification where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_nm where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_products where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_contract_contacts where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_custom where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_custom_multi_detail where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_custom_multi_hdr where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_version where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from sys_statusaudit where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from dashboard_gadgets_recent where upper ( recent_type ) =''CTX'' and data_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_templates_info where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_doc_audit where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +') ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_ai_notification_users where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +')  ; ' +~r~n" + &
"~t~t~t' delete from ctx_am_ai_alarm_attachment where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_ai_notification where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' )  ; ' +~r~n" + &
"~t~t~t' delete from ctx_am_action_item where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +') ; ' +  ~r~n" + &
"~t~t~t' delete from ctx_am_document_clause where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +') ; ' +~r~n" + &
"~t~t~t' delete from ctx_am_doc_image where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_notification where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_products where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from sys_statusaudit where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' update ctx_basic_info set master_contract_id =0 where master_contract_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_basic_info where ctx_id = '+ convert(varchar,@ctx_id) +' ; ' ~r~n" + &
"~r~n" + &
"~t~tDECLARE template_cursor CURSOR FOR ~r~n" + &
"      ~t~tSelect table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ~r~n" + &
"~t~t~tFrom request_webform_detail~r~n" + &
"~t~t~tWhere types='column' and table_name ='ctx_basic_info'~tand rwf_id = @rwf_id ~r~n" + &
"~t~t~tGroup by table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ;~r~n" + &
"~r~n" + &
"~t~tOPEN template_cursor~r~n" + &
"~t~tFETCH NEXT FROM template_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~t~tBEGIN~r~n" + &
"~t~t~tif (@table_name = 'ctx_basic_info' ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @count = 0 ~r~n" + &
"~r~n" + &
"~t~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_datetime_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = ' convert(datetime,''' + convert(varchar,@col_datetime_value,101)+ ''') '~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale > 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_decimal_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_decimal_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = ' ''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  ' ''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~tIf ( @count = 1)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @sql_insert = @sql_insert +' '+ @col_name + '= '+ @sql_value + ' ,'~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tFETCH NEXT FROM template_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~tEnd~r~n" + &
"~t~tCLOSE template_cursor~r~n" + &
"~t~tDEALLOCATE template_cursor~r~n" + &
"~r~n" + &
"~t~tif(right(@sql_insert,1) = ',')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_insert = left(@sql_insert, len(@sql_insert) - 1)~r~n" + &
"~t~t~tSelect @sql_insert = @sql_insert + @sql~r~n" + &
"~r~n" + &
"~t~t~tSet @num = 101~r~n" + &
"~t~t~tSet @error_sum = 0~t~r~n" + &
"~t~t~tSet @sql_delete = ''~r~n" + &
"~t~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~tBEGIN TRANSACTION ctx_template1;~t~r~n" + &
"~t~t~t~tExecute(@sql_insert);~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~t~t~tSet @sql_delete2 = @sql_delete_ctx~t~t~t~t~t~r~n" + &
"~t~t~tEND TRY~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION ctx_template1;~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_delete_ctx);~r~n" + &
"~t~t~t~tif @@error <> 0 ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Delete Ctx:'+@sql_delete_ctx~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~r~n" + &
"~t~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION ctx_template1;~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tExecute(@sql_delete_ctx);~r~n" + &
"~t~t~t~tif @@error <> 0 ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ '  Delete Ctx:'+@sql_delete_ctx~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tCOMMIT TRANSACTION ctx_template1;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* set delete2 value */~r~n" + &
"~t~tSet @sql_delete2 = @sql_delete_ctx~t~t~r~n" + &
"~r~n" + &
"~t~t/* insert ctx_contract_contacts table */~r~n" + &
"~t~tSelect @template_id = template_id From request_webform Where rwf_id =@rwf_id;~r~n" + &
"~t~tSelect top 1 @contact_id = col_number_value from request_webform_detail where table_name = 'ctx_contacts' and col_name = 'contact_id' ~r~n" + &
"~t~t~t~tand (col_type = 'numeric' or col_type = 'int' ) and rwf_id =@rwf_id;~t~r~n" + &
"~t~tSelect @app_facility = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='app_facility' ~r~n" + &
"~t~t~t~tand (col_type = 'numeric' or col_type = 'int' )~tand rwf_id =@rwf_id;~t~t~t~t~t~t~t~r~n" + &
"~r~n" + &
"~t~tif(@app_facility is null or @app_facility <= 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @app_facility = ctx_basic_info.app_facility FROM ctx_templates_info, ctx_basic_info~r~n" + &
"~t~t~twhere ctx_templates_info.ctx_id = ctx_basic_info.ctx_id~r~n" + &
"~t~t~tAnd ctx_templates_info.ib_contract_detail = 1 and ctx_templates_info.clear_company = 0  ~r~n" + &
"~t~t~tAnd ctx_basic_info.app_facility is not null and len(ctx_basic_info.app_facility ) > 0 and ctx_templates_info.id = @template_id ;~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@contact_id is not null and @contact_id > 0 )~r~n" + &
"~t~tBegin~t~t~r~n" + &
"~t~t~t/*~tcheck the contacts if not exsist the company */~r~n" + &
"~t~t~tSet @count =0~r~n" + &
"~t~t~tSELECT @count =Count(1)  FROM ctx_contacts WHERE facility_id = @app_facility and contact_id= @contact_id;~r~n" + &
"~t~t~tif (@count > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 102~r~n" + &
"~t~t~t~tSelect @record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@record_id  ;~r~n" + &
"~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tSet @record_id = @record_id + 1~r~n" + &
"~r~n" + &
"~t~t~t~tSelect @table_id = table_id from sys_tables where charindex('d_contract_det_contact_',lower(table_name) ) > 0~r~n" + &
"~t~t~t~t~tand charindex('contracted company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tSet @error_sum = 0~r~n" + &
"~t~t~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~t~t~tSet @sql_delete2 = ''~r~n" + &
"~t~t~t~tBEGIN TRY~r~n" + &
"~t~t~t~tBEGIN TRANSACTION CTX2;~t~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~t/*update ctx_contract_contacts table 5E */~r~n" + &
"~t~t~t~t~tINSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) ~r~n" + &
"~t~t~t~t~tVALUES ( @ctx_id , @contact_id, 'E', @record_id, 'Y', 'N', 'F' )~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@ctx_id)+' and ic_area =''E'' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~t~t~tVALUES(@record_id ,1001, @seq_no ,@table_id, @ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From sys_audit Where rec_id = '+convert(varchar,@record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tEND TRY~r~n" + &
"~t~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEND CATCH;~r~n" + &
"~r~n" + &
"~t~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tCOMMIT TRANSACTION CTX2;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* except ctx_basic_info table */~r~n" + &
"~t~tSet @err_msg = ''~r~n" + &
"~t~tSet @num = 103~r~n" + &
"~t~tSet @error_sum = 0~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~t~texecute sp_create_request_data_table @rwf_id ,@user_id ,@ctx_id , @sql_delete2 output, @err_msg output~r~n" + &
"~t~tif (@@error <> 0 or len(@err_msg) > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform_document table  */~r~n" + &
"~t~tSet @category = null~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @category =category, @template_id = template_id From request_webform Where rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @count = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='category' and rwf_id =@rwf_id;~r~n" + &
"~t~tif(@count is not null and @count > 0 ) ~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @category = @count~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @sql = ''~r~n" + &
"~t~tSet @sql_insert = ''~r~n" + &
"~t~tSet @sql_value = ''~r~n" + &
"~t~tSet @sql_update = ''~r~n" + &
"~t~tSet @sql_temp1 = ''~r~n" + &
"~t~tSet @sql_temp2 = ''~r~n" + &
"~t~tSet @sql_temp3 = ''~r~n" + &
"~t~tSet @sql_temp4 = ''~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~t~r~n" + &
"~t~tSet @status = NULL~r~n" + &
"~t~tselect @status = lookup_code from code_lookup where upper(lookup_name) = upper('Contract Document Status') and upper(code) = upper('New') ;~r~n" + &
"~r~n" + &
"~t~tSet @num = 130~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @count = count(*) from request_webform_document Where datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tSELECT @doc_id = doc_id FROM ids ;~r~n" + &
"~t~tUpdate ids SET doc_id =( isnull ( doc_id , 0 ) + @count ) where doc_id = @doc_id;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid doc_id. '~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tDeclare document_template_cursor Cursor For ~r~n" + &
"~t~t~tSelect document_id,doc_type,request_id from request_webform_document~r~n" + &
"~t~t~tWhere datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tOpen document_template_cursor~r~n" + &
"~t~tFetch Next From document_template_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tWhile @@FETCH_STATUS = 0~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = @count + 1~r~n" + &
"~t~t~tSelect @sql_insert = @sql_insert + 'INSERT INTO ctx_am_document ( doc_id, ctx_id, doc_name, revision, doc_type,doc_ext, category, base_type, create_by, create_date,~r~n" + &
"~t~t~t~t~t status,status_by, status_date, filename, revision_control, received_by, received_date,notes )' +~r~n" + &
"~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+','+ convert(varchar,@ctx_id)+',document_name,1.0,''Other'', left(doc_ext,3), '+ convert(varchar, @category)+~r~n" + &
"~t~t~t~t~t~t', ''3'',''' +@user_id+''',GETDATE(),'+ convert(varchar, @status) +', '''+@user_id+''',GETDATE(), document_name +'+'''.'''+ '+doc_ext,1, ''' +~r~n" + &
"~t~t~t~t~t~t@user_id+''' ,GETDATE(),description From request_webform_document Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp1 = @sql_temp1 + ' Delete From ctx_am_document Where doc_id ='+convert(varchar, @doc_id + @count)+' ; '~r~n" + &
"~r~n" + &
"~t~t~tSelect @sql = @sql + 'INSERT INTO ctx_am_doc_image ( doc_id , revision, image_file , doc_ext , modify_date , doc_ext_full ) ' +~r~n" + &
"~t~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+', 1.0,document_content, left(doc_ext,3), getdate() , doc_ext From request_webform_document~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~r~n" + &
"~t~t~tSelect @sql_temp2 = @sql_temp2 + ' Delete From ctx_am_doc_image Where doc_id ='+convert(varchar, @doc_id + @count)+' and revision =1.0 ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tSelect @sql_value = @sql_value + 'INSERT INTO ctx_am_doc_audit ( doc_id, audit_id, revision, doc_ext, action, action_by, action_date,~r~n" + &
"~t~t~t~t~t~t~t filename,notes,esign_type) Select '+convert(varchar, @doc_id + @count)+', 1, 1.0, left(doc_ext,3),''New - Existing'','''+@user_id+''',~r~n" + &
"~t~t~t~t~t~t~t GETDATE(),document_name +'+'''.'''+ '+doc_ext,description,''sertifi'' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~t~r~n" + &
"~t~t~tSelect @sql_temp3 = @sql_temp3 + ' Delete From ctx_am_doc_audit Where doc_id ='+convert(varchar, @doc_id + @count)+' and audit_id =1 ; '~t~t~t~t~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tSelect @sql_update = @sql_update + ' Update request_webform_document Set file_id ='+convert(varchar, @doc_id + @count)+ ' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp4 = @sql_temp4 + ' Update request_webform_document Set file_id = null From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~tFetch Next From document_template_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tEnd~t~r~n" + &
"~t~tClose document_template_cursor~r~n" + &
"~t~tDeallocate document_template_cursor~r~n" + &
"~r~n" + &
"~t~tif (@count > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @num = 131~r~n" + &
"~t~t~tSet @error_sum = 0~t~t~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~tBEGIN TRANSACTION document_trans;~t~t~t~t~t~r~n" + &
"~t~t~t~tExecute(@sql_insert) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp1~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp2~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_value) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp3~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_update) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp4~r~n" + &
"~r~n" + &
"~t~t~tEnd TRY~r~n" + &
"~t~t~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~r~n" + &
"~t~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tCOMMIT TRANSACTION document_trans;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform table and add the log */~r~n" + &
"~t~tSet @num = 131~r~n" + &
"~t~tSet @error_sum = 0~t~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~tif(@template_id is null)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @template_id = 0~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION ctx_template_log;~t~r~n" + &
"~t~t~tUpdate request_webform~tSet status ='Completed', ctx_id = @ctx_id Where rwf_id = @rwf_id ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Update request_webform~tSet status =''Waiting for Approval'', ctx_id =0~tWhere rwf_id ='+convert(varchar,@rwf_id) + ' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tINSERT INTO request_webform_log (rwf_id,notes ,user_id,modify_date ,action, ctx_id)~r~n" + &
"~t~t~t~tValues(@rwf_id, @notes, @user_id, getdate(), 'Approved', @ctx_id) ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Delete From request_webform_log Where rwf_id ='+convert(varchar,@rwf_id) + ' and action = ''Approved'' and ctx_id ='+convert(varchar,@ctx_id)+ ' ; '~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tUpdate ctx_basic_info Set come_from = ( case when charindex('-',come_from) > 0 then left(come_from,charindex('-',come_from) ) + 'completed'~r~n" + &
"~t~t~t~t~telse 'request(0)-completed' end ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_template_log;~r~n" + &
"~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_template_log;~r~n" + &
"~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION ctx_template_log;~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd ~r~n" + &
"End"

of_execute_sqls("of_ver130_release_storeprocedure2")

return 1
end function

public function integer of_ver140_updates ();//Added By Mark Lee 03/03/2014

of_ver140_release_table1()
of_ver140_release_view1()
of_ver140_release_storeprocedure1()
of_ver140_release_storeprocedure2()
of_ver140_release_trigger1() 

//Added By Ken.Guo 06/11/2014. update v_ctx_basic_info alias
n_cst_update_view_fields_alias lnv_alias
String ls_main_version,ls_patch_version
Select set_18,set_patch_ver Into :ls_main_version, :ls_patch_version From icred_settings;
If ls_main_version < '140' or ( ls_main_version = '140' and ls_patch_version <= '020' ) Then
	lnv_alias = Create n_cst_update_view_fields_alias
	lnv_alias.of_update_view_fields_alias(0,0,False,'v_name = "v_ctx_basic_info" or v_name = "v_ctx_custom"')
	If isvalid(lnv_alias) Then Destroy lnv_alias
End If

//Correct Old Data.
If ls_main_version = '140' and ls_patch_version < '022' Then
	Update icred_settings set ctx_web_link = REPLACE(ctx_web_link,'/ContractRequest', '/ContractlogixWeb') 
	Where CHARINDEX('/ContractRequest',ctx_web_link) > 0;
End If


Return 1
end function

public function integer of_ver140_release_table1 ();//====================================================================
// Function: of_ver140_release_table1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 03/03/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//Add SQL Here

//e.g.
//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"IF Not EXISTS(SELECT name  FROM  sysobjects WHERE  name = 'security_user_options'  AND ~t type = 'U')~r~n" + &
//"CREATE TABLE security_user_options~r~n" + &
//"(~r~n" + &
//"user_id varchar(50) not null,~r~n" + &
//"option_name varchar(100)  not null,~r~n" + &
//"option_value varchar(100) null,~r~n" + &
//"last_update datetime null,~r~n" + &
//"Primary Key(user_id,option_name)~r~n" + &
//"~t)"

//Added By Mark Lee 03/06/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='template_ctx_id' and t.name='ctx_am_document'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_am_document add template_ctx_id int null~r~n"

//added by gavins 20140310
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not exists (select 1   from  sysobjects  where  id = object_id('sys_webapi_log')    and   type = 'U')~r~n" + &
"create table sys_webapi_log (	~r~n" + &
"   ID                   int                  identity,~r~n" + &
"   APIKEY               varchar(100)         null,~r~n" + &
"   USERID               varchar(50)          null,~r~n" + &
"   APINAME              varchar(100)         null,~r~n" + &
"   APIARGUMENTS         varchar(200)         null,~r~n" + &
"   APIRESULT            varchar(200)         null,~r~n" + &
"   ACCESSEDTIME         datetime             null,~r~n" + &
"   NOTES                varchar(1000)        null,~r~n" + &
"   constraint PK_SYS_WEBAPI_LOG primary key (ID))~r~n" 

//Added By Mark Lee 03/10/2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select  1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='webapi' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add webapi int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select  1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='webapi_log' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add webapi_log int null "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not exists (select 1   from  sysobjects  where  id = object_id('webapi_settings')    and   type = 'U')~r~n" + &
"CREATE TABLE webapi_settings(~r~n" + &
"       webapi_id int identity NOT NULL,~r~n" + &
"       api_key varchar(100) not null,~r~n" + &
"       description varchar(200) null,~r~n" + &
"       active char(1) default 'T' not null,~r~n" + &
"       expiration_date datetime null,~r~n" + &
"       creator varchar(50) null,~r~n" + &
"       create_date datetime null,~r~n" + &
"       CONSTRAINT PK_webapi_settings_webapi_id PRIMARY KEY CLUSTERED (webapi_id ASC)~r~n" + &
")  ~r~n"

//Added By Jay Chen 03-19-2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select  1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='get_field_before_export' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add get_field_before_export char(1) null "

//Added By Jay Chen 04-09-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='docusign_apicode' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add docusign_apicode varchar(50) null  ~r~n"
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='docusign_username' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add docusign_username varchar(50) null  ~r~n"
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='docusign_password' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add docusign_password varchar(50) null  ~r~n"
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='docusign_userid' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add docusign_userid varchar(50) null  ~r~n"
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='docusign_accountid' and t.name='icred_settings'	and t.type = 'U')~r~n" + &
"ALTER table icred_settings add docusign_accountid varchar(50) null  ~r~n"

//Added by Jimmy Lee 04-17-2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not exists (select 1   from  sysobjects  where  id = object_id('saml_sp_application')    and   type = 'U')~r~n" + &
"CREATE TABLE saml_sp_application(~r~n" + &
"~tapp_sno int IDENTITY(1,1) NOT NULL,~r~n" + &
"~tapp_name varchar(50)  NULL,~r~n" + &
"~tapp_login_url varchar(300)  NULL,~r~n" + &
"~tapp_logout_url varchar(300)  NULL~r~n" + &
"       CONSTRAINT PK_saml_sp_application_id PRIMARY KEY CLUSTERED (app_sno ASC)~r~n" + &
") "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not exists (select 1   from  sysobjects  where  id = object_id('idp_users')    and   type = 'U')~r~n" + &
"CREATE TABLE idp_users(~r~n" + &
"~tsno int IDENTITY(1,1) NOT NULL,~r~n" + &
"~tmap_user_id varchar(10)  NOT NULL,~r~n" + &
"~tidp_user_id varchar(100)  NOT NULL,~r~n" + &
"~tidp_server_id int  NOT NULL,~r~n" + &
"~tapp_name varchar(50)  NULL,~r~n" + &
"~tcachename varchar(50)  NULL,~r~n" + &
"~tapp_verifycode nvarchar(100)  NULL,~r~n" + &
"~tidpuser_createtime datetime NULL,~r~n" + &
"~tidpuser_validetime datetime NULL,~r~n" + &
" CONSTRAINT PK_idp_users PRIMARY KEY CLUSTERED ~r~n" + &
"(~r~n" + &
"~tsno ASC~r~n" + &
")~r~n" + &
")"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not exists (select 1   from  sysobjects  where  id = object_id('idp_servers')    and   type = 'U')~r~n" + &
"CREATE TABLE idp_servers(~r~n" + &
"~tidp_sno int IDENTITY(1,1) NOT NULL,~r~n" + &
"~tidp_name varchar(50)  NULL,~r~n" + &
"~tSingleSignOnServiceUrl varchar(300)  NULL,~r~n" + &
"~tSingleLogoutServiceUrl varchar(300)  NULL,~r~n" + &
"~tIssuser varchar(50)  NULL,~r~n" + &
"~tCentificateName varchar(50)  NULL,~r~n" + &
"~tCertificateFile image NULL,~r~n" + &
"~tCentificatePassword varchar(50)  NULL,~r~n" + &
"~tNameIdentifier varchar(50)  NULL,~r~n" + &
"~tIdpToSPBinding varchar(50)  NULL,~r~n" + &
"~tSPToIdpBinding varchar(50)  NULL, ~r~n" + &
"       CONSTRAINT PK_idp_servers_id PRIMARY KEY CLUSTERED (idp_sno ASC)~r~n" + &
") ~r~n" + &
""

//Added By Ken.Guo 04/21/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='idp_server_id' and t.name='idp_users'~tand t.type = 'U')~r~n" + &
"	Alter table idp_users add idp_server_id int null~r~n"

//added by gavins 20140505
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not exists (select 1   from  sysobjects  where  id = object_id('sys_notifications')    and   type = 'U')~r~n" + &
"create table sys_notifications (~r~n" + &
 "  PID                  int                  identity,~r~n" + &
 "  OrganizationId       varchar(50)          null,~r~n" + &
 "  ActionId             varchar(50)          null,~r~n" + &
 "  SessionId            varchar(100)         null,~r~n" + &
 "  EnterpriseUrl        varchar(100)         null,~r~n" + &
 "  PartnerUrl           varchar(100)         null,~r~n" + &
 "  calltime             datetime             null,~r~n" + &
 "  apikey               varchar(50)          null,~r~n" + &
 "  Notificationid       varchar(50)          null,~r~n" + &
 "  completestate       varchar(10)          null,~r~n" + &
 "  errormessage       varchar(100)          null,~r~n" + &
 "  constraint PK_SYS_NOTIFICATIONS primary key (PID))~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not exists (select 1   from  sysobjects  where  id = object_id('sys_notifications_sobject')    and   type = 'U')~r~n" + &
"create table sys_notifications_sobject (~r~n" + &
"   cid                  int                  identity,~r~n" + &
"   notificationid       varchar(50)          null,~r~n" + &
"   fields               varchar(60)          null,~r~n" + &
"   fvalues             varchar(100)         null,~r~n" + &
"   constraint PK_SYS_NOTIFICATIONS_SOBJECT primary key (cid)~r~n" + &
")"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='errormessage' and t.name='sys_notifications'~tand t.type = 'U')~r~n" + &
"	Alter table sys_notifications alter column errormessage varchar(1000) ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='import_type' and t.name='import_hdr'~tand t.type = 'U')~r~n" + &
"	Alter table import_hdr add import_type varchar(10) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='import_sfobject' and t.name='import_hdr'~tand t.type = 'U')~r~n" + &
"	Alter table import_hdr add import_sfobject varchar(60) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='import_flag' and t.name='import_hdr'~tand t.type = 'U')~r~n" + &
"	Alter table import_hdr add import_flag varchar(10) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='imp_field_label' and t.name='import_file_fields'~tand t.type = 'U')~r~n" + &
"	Alter table import_file_fields add imp_field_label varchar(500) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='imp_field_type' and t.name='import_file_fields'~tand t.type = 'U')~r~n" + &
"	Alter table import_file_fields add imp_field_type varchar(40) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='imp_field_name' and t.name='import_file_fields'~tand t.type = 'U')~r~n" + &
"	Alter table import_file_fields alter column imp_field_name varchar(100) ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='app_facility'~tand t.type = 'U')~r~n" + &
"	Alter table app_facility add salesforce_id varchar(30) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='ctx_contacts'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_contacts add salesforce_id varchar(30) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='ctx_basic_info'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_basic_info add salesforce_id varchar(30) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='ctx_custom'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_custom add salesforce_id varchar(30) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='ctx_fee_sched_nm'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_fee_sched_nm add salesforce_id varchar(30) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='ctx_custom_multi_hdr'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_custom_multi_hdr add salesforce_id varchar(30) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='salesforce_id' and t.name='ctx_products'~tand t.type = 'U')~r~n" + &
"	Alter table ctx_products add salesforce_id varchar(30) null~r~n"

//Added By Mark 05/09/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not exists (select 1   from  sysobjects  where  id = object_id('import_webform')    and   type = 'U')~r~n" + &
"CREATE TABLE import_webform(~r~n" + &
"~tid int IDENTITY(1,1) NOT NULL,~t~r~n" + &
"~timport_id int not null,~r~n" + &
"~tnotificationid varchar(50) null,~r~n" + &
"~tnotes varchar(500) NULL,~r~n" + &
"~tstatus varchar(20) NULL,~r~n" + &
"~tuser_id varchar(50) NULL,~r~n" + &
"~tmodify_date datetime NULL,~r~n" + &
" CONSTRAINT PK_import_webform_id PRIMARY KEY CLUSTERED ~r~n" + &
"(~r~n" + &
"~tid ASC~r~n" + &
")~r~n" + &
")"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not exists (select 1   from  sysobjects  where  id = object_id('import_webform_detail')    and   type = 'U')~r~n" + &
"CREATE TABLE import_webform_detail(~r~n" + &
"~tdetail_id int IDENTITY(1,1) NOT NULL,~r~n" + &
"~tmain_id int NULL,~r~n" + &
"~ttable_records_id int NOT NULL,~r~n" + &
"~ttable_name varchar(50) NULL,~r~n" + &
"~trowid int NOT NULL,~r~n" + &
"~tcol_value varchar(1000) NULL,~r~n" + &
" CONSTRAINT PK_import_webform_detail_id PRIMARY KEY CLUSTERED ~r~n" + &
"(~r~n" + &
"~tdetail_id ASC~r~n" + &
")~r~n" + &
")"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='col' and t.name='import_webform_detail'~tand t.type = 'U')~r~n" + &
"	Alter table import_webform_detail add col varchar(100) null~r~n"

//Added By Jay Chen 05-16-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'FK_CTX_BASI_REFERENCE_CODE_LOO_DIVISION') AND parent_object_id = OBJECT_ID(N'CTX_BASIC_INFO'))~r~n" + &
"ALTER TABLE CTX_BASIC_INFO DROP CONSTRAINT FK_CTX_BASI_REFERENCE_CODE_LOO_DIVISION~r~n" 

//Added By Mark 05/22/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='sys_notification_pid' and t.name='sys_audit'~tand t.type = 'U')~r~n" + &
"	Alter table sys_audit add sys_notification_pid int null~r~n"

//added by jimmy 20140522
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if Not exists (select 1   from  sysobjects  where  id = object_id('css_templates_detail')    and   type = 'U')~r~n" + &
"create table css_templates_detail (~r~n" + &
 "  detail_id                  int          IDENTITY(1,1)  not null,~r~n" + &
 "  template_id       			 int          not null,~r~n" + &
 "  template_name             nvarchar(50)          not null,~r~n" + &
 "  element_id            nvarchar(128)         not null,~r~n" + &
 "  element_name        nvarchar(128)         not null,~r~n" + &
 "  fontfamily           nvarchar(128)         null,~r~n" + &
 "  fontsize             nvarchar(50)             null,~r~n" + &
 "  fontcolor               nvarchar(50)          null,~r~n" + &
 "  fontbgcolor       nvarchar(50)          null,~r~n" + &
 "  color       nvarchar(50)          null,~r~n" + &
 "  backgroundcolor       nvarchar(50)          null,~r~n" + &
 "  backgroundpicture       nvarchar(50)          null,~r~n" + &
 "  picturedata       image          null,~r~n" + &
 "  element_hight       nvarchar(50)          null,~r~n" + &
 "  element_weight       nvarchar(50)          null,~r~n" + &
 "  isuse       int          null,~r~n" + &
 "  constraint PK_css_templates_detail PRIMARY KEY CLUSTERED (template_id ASC,element_id ASC) )~r~n"
 
 //Added By Mark 05/24/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='sql_syntax' and t.name='sys_audit'~tand t.type = 'U')~r~n" + &
"	Alter table sys_audit add sql_syntax varchar(8000) null~r~n"

//Added By Jay Chen 05-28-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='export_format' and t.name='export_fields'	and t.type = 'U')~r~n" + &
"ALTER table export_fields alter column export_format varchar(100)"
 
 //Added By Mark 06/03/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='user_id' and t.name='sys_statusaudit'	and t.type = 'U')~r~n" + &
 " alter table sys_statusaudit alter column user_id varchar(50) null "

//Added By Jimmy 06/04/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='use_saml' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"	Alter table icred_settings add use_saml char(1) null~r~n"

//Added By Jimmy 06/04/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='only_saml_user' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"	Alter table icred_settings add only_saml_user char(1) null~r~n"

//Added By Jimmy 06/04/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='saml_force_https' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"	Alter table icred_settings add saml_force_https char(1) null~r~n"

//Added By Gavin 06/11/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='http_visit' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"	Alter table icred_settings add  http_visit char(1) null~r~n"

 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='http_timeout' and t.name='icred_settings'~tand t.type = 'U')~r~n" + &
"	Alter table icred_settings add  http_timeout int null~r~n"

//Added By Mark 06/11/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='data_view_label' and t.name='export_fields'	and t.type = 'U')~r~n" + &
 " alter table export_fields alter column data_view_label varchar(500) null "
 
  is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='lookup_code' and t.name='export_fields'	and t.type = 'U')~r~n" + &
 " alter table export_fields alter column lookup_code varchar(500) null "

//Add by Jimmy 06/19/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='export_format' and t.name='request_webform_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_webform_detail add  export_format varchar(100) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='export_format' and t.name='request_webform_detail' and t.type = 'U' )~r~n" + &
"Begin~r~n" + &
"~tif not exists(select 1 from syscolumns c, sysobjects t   ~r~n" + &
"~twhere c.id=t.id  and c.name='formats' and t.name='request_webform_detail' and t.type = 'U' )~r~n" + &
"~tBegin~r~n" + &
"~t~texec sp_rename 'request_webform_detail.export_format', 'formats','column'~r~n" + &
"~tEnd~r~n" + &
"End"

//Added By Mark 07/10/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='formats' and t.name='request_webform_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_webform_detail add  formats varchar(100) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='export_format' and t.name='request_webform_detail' and t.type = 'U')~r~n" + &
" alter table request_webform_detail drop column export_format "

//Add by Jimmy 06/23/2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='idp_name' and t.name='idp_users'~tand t.type = 'U')~r~n" + &
"	Alter table idp_users alter column idp_name varchar(50) null~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='idp_name' and t.name='idp_users'~tand t.type = 'U')~r~n" + &
"	Alter table idp_users drop column idp_name ~r~n"

//Added By Mark 06/25/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='formats' and t.name='request_form_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_form_detail add  formats varchar(100) null~r~n"

 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='column_height' and t.name='request_form_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_form_detail add  column_height int null~r~n"

//Added By Jay Chen 06-30-2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"where c.id=t.id  and c.name='wf_retrigger' and t.name='wf_workflow' and t.type = 'U')~r~n" + &
 " alter table wf_workflow add wf_retrigger int null "

//Added By Mark 07/03/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='user_password' and t.name='security_users'~tand t.type = 'U')~r~n" + &
"	alter table security_users alter column user_password nvarchar(200) null~r~n"

//Added By Mark 07/11/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='column_height' and t.name='request_webform_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_webform_detail add  column_height int null~r~n"

 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='column_width' and t.name='request_form_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_form_detail add  column_width int null~r~n"

 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='column_width' and t.name='request_webform_detail'~tand t.type = 'U')~r~n" + &
"	Alter table request_webform_detail add  column_width int null~r~n"

//Added By Ken.Guo 07/17/2014
 is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
 "if exists(select 1 from syscolumns c, sysobjects t ~r~n" + &
"	where c.id=t.id  and c.name='file_name' and t.name='ctx_am_image_approve'~tand t.type = 'U')~r~n" + &
"	alter table ctx_am_image_approve alter column file_name varchar(255) null~r~n"

//Added By Jay Chen 07-24-2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if not exists( select  1 from syscolumns c, sysobjects t where c.id=t.id and " + &
"   c.name='optimize_comparison_workflow' and t.name='icred_settings' and t.type = 'U') " + &
"alter table icred_settings add optimize_comparison_workflow char(1) null "

//Added By Jimmy Lee 08-22-2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if Not exists (select 1   from  sysobjects  where  id = object_id('user_requester')    and   type = 'U')~r~n" + &
"CREATE TABLE user_requester(~r~n" + &
"~tusercode int IDENTITY(1,1) NOT NULL,~r~n" + &
"~tuser_id varchar(50)  NOT NULL,~r~n" + &
"~tuser_password nvarchar(200)  NOT NULL,~r~n" + &
"~temail nvarchar(100)  NULL,~r~n" + &
"~trole_id int NULL,~r~n" + &
"~tdisabled_status int NULL,~r~n" + &
"~tlast_login_date datetime NULL,~r~n" + &
"~tlast_login_ip nchar(36)  NULL,~r~n" + &
"~treg_code nvarchar(200)  NULL,~r~n" + &
"~tcreated_date datetime NULL,~r~n" + &
"~treg_effective_date datetime NULL,~r~n" + &
"~taddress nvarchar(300)  NULL,~r~n" + &
"~tfirst_name nvarchar(100)  NULL,~r~n" + &
"~tmiddle_name nvarchar(100)  NULL,~r~n" + &
"~tlast_name nvarchar(100)  NULL,~r~n" + &
"~tfax nvarchar(50)  NULL,~r~n" + &
"~tphone nvarchar(50)  NULL,~r~n" + &
"~tmobilephone nvarchar(50)  NULL,~r~n" + &
"~tzip nvarchar(32)  NULL,~r~n" + &
"~tcity nvarchar(50)  NULL,~r~n" + &
"~tstate nvarchar(50)  NULL,~r~n" + &
"~tpbox nvarchar(50)  NULL,~r~n" + &
"~tsex nvarchar(32)  NULL,~r~n" + &
"~ttitle nvarchar(100)  NULL,~r~n" + &
"~tsafe_q nvarchar(200)  NULL,~r~n" + &
"~tsafe_a nvarchar(200)  NULL,~r~n" + &
"~tsafe_email nvarchar(200)  NULL,~r~n" + &
"~tnotes nvarchar(1000)  NULL,~r~n" + &
" CONSTRAINT PK_user_requestor PRIMARY KEY CLUSTERED ~r~n" + &
"(~r~n" + &
"~tuser_id ASC~r~n" + &
") ) "

//Added By Jay Chen 09-02-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists( select 1 from sysobjects where name = 'personal_license_setting' AND type = 'U' )~r~n" + &
"Create table personal_license_setting~r~n" + &
"(~r~n" + &
"~tuser_id VARCHAR(10) NOT NULL,~r~n" + &
"~tesign_type VARCHAR(50) NOT NULL,~r~n" + &
"~tesign_apicode VARCHAR(50) ,~r~n" + &
"~tesign_username VARCHAR(50) ,~r~n" + &
"~tesign_password VARCHAR(50) ,~r~n" + &
"~tesign_userid VARCHAR(50) ,~r~n" + &
"~tesign_accountid VARCHAR(50) ,~r~n" + &
"~tCONSTRAINT pk_personal_license_setting PRIMARY KEY(user_id,esign_type)  ~r~n" + &
")"

//Added By Jay Chen 09-03-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_license_user_id' and t.name='ctx_am_document' and t.type = 'U')~r~n" + &
"ALTER table ctx_am_document add es_license_user_id varchar(50) null  ~r~n"

is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
"if not exists(	select 1 from syscolumns c, sysobjects t   ~r~n" + &
"where c.id=t.id  and c.name='es_license_user_id' and t.name='ctx_am_doc_audit'	and t.type = 'U')~r~n" + &
"ALTER table ctx_am_doc_audit add es_license_user_id varchar(50) null  ~r~n"

//Added By Gavin 09-16-2014
is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
" if  exists(	select 1 from syscolumns c, sysobjects t    ~r~n" + &
" where c.id=t.id  and c.name='filename' and t.name='em_attachment_temp'	and t.type = 'U') ~r~n" + &
" ALTER table em_attachment_temp alter column  filename nvarchar(300) not null  ~r~n" 

of_execute_sqls("of_ver140_release_table1")

Return 1
end function

public function integer of_ver140_release_view1 ();//====================================================================
// Function: of_ver140_release_view1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 03/03/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//Add SQL Here

//e.g.

//Added By Ken.Guo 06/11/2014. Custom_status.		//Added By Mark Lee 08/28/2014 modify app_facility table to Left OUTER JOIN ...on...
is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_basic_info') ~r~n" + &
" drop view v_ctx_basic_info"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_basic_info AS~r~n" + &
"SELECT TOP 100 percent~r~n" + &
"       app_facility.facility_name AS Company_Name,~r~n" + &
"       app_facility.street AS Company_street_1,~r~n" + &
"       app_facility.street_2 AS Company_street_2,~r~n" + &
"       app_facility.city AS Company_city,~r~n" + &
"       app_facility.state AS Company_state,~r~n" + &
"       app_facility.zip AS Company_zip,~r~n" + &
"       app_facility.country AS Company_country,~r~n" + &
"       app_facility.phone AS Company_phone,~r~n" + &
"       app_facility.fax AS Company_fax,~r~n" + &
"       app_facility.web_address AS Company_web_address,~r~n" + &
"       app_facility.contact_type2 AS Company_contact_type2,~r~n" + &
"       app_facility.corp_office_flag AS Company_corp_office_flag,~r~n" + &
"       app_facility.corp_office_link AS Company_corp_office_link,~r~n" + &
"       code_lookup.code AS Contract_Category_code,~r~n" + &
"       code_lookup.description AS Contract_Category_description,~r~n" + &
"       code_lookup_1.code AS Contract_Status_code,~r~n" + &
"       code_lookup_2.code AS contract_type_code,~r~n" + &
"       code_lookup_2.description AS contract_type_Description,~r~n" + &
"       code_lookup_3.code AS term_reason_code,~r~n" + &
"       code_lookup_3.description AS term_Reason_Desciption,~r~n" + &
"       code_lookup_4.description AS product_type_desc,~r~n" + &
"       code_lookup_4.code AS product_type_code,~r~n" + &
"       code_lookup_5.code AS product_code,~r~n" + &
"       code_lookup_5.description AS product_description,~r~n" + &
"       ctx_basic_info.ctx_id,~r~n" + &
"       ctx_basic_info.category,~r~n" + &
"       ctx_basic_info.status,~r~n" + &
"       ctx_basic_info.facility_id,~r~n" + &
"       ctx_basic_info.contract_type,~r~n" + &
"       ctx_basic_info.product_type,~r~n" + &
"       ctx_basic_info.product_name,~r~n" + &
"       ctx_basic_info.reimbursment_menth,~r~n" + &
"       ctx_basic_info.file_location,~r~n" + &
"       ctx_basic_info.effective_date,~r~n" + &
"       ctx_basic_info.expriation_date,~r~n" + &
"       ctx_basic_info.review_date,~r~n" + &
"       ctx_basic_info.review_by,~r~n" + &
"       ctx_basic_info.term_date,~r~n" + &
"       ctx_basic_info.term_reason,~r~n" + &
"       ctx_basic_info.last_revis_date,~r~n" + &
"       ctx_basic_info.other_date_1,~r~n" + &
"       ctx_basic_info.other_date_2,~r~n" + &
"       ctx_basic_info.oc_signed_by,~r~n" + &
"       ctx_basic_info.oc_title,~r~n" + &
"       ctx_basic_info.oc_department,~r~n" + &
"       ctx_basic_info.oc_legal_rep,~r~n" + &
"       ctx_basic_info.cc_signed_by,~r~n" + &
"       ctx_basic_info.cc_title,~r~n" + &
"       ctx_basic_info.cc_department,~r~n" + &
"       ctx_basic_info.cc_legal_rep,~r~n" + &
"       ctx_basic_info.keyword,~r~n" + &
"       ctx_basic_info.dvision,~r~n" + &
"       ctx_basic_info.custom_1,~r~n" + &
"       ctx_basic_info.custom_2,~r~n" + &
"       ctx_basic_info.custom_3,~r~n" + &
"       ctx_basic_info.custom_4,~r~n" + &
"       ctx_basic_info.custom_5,~r~n" + &
"       ctx_basic_info.custom_6,~r~n" + &
"       ctx_basic_info.custom_7,~r~n" + &
"       ctx_basic_info.custom_8,~r~n" + &
"       ctx_basic_info.custom_9,~r~n" + &
"       ctx_basic_info.custom_10,~r~n" + &
"       ctx_basic_info.group_multi_loc_id,~r~n" + &
"       ctx_basic_info.revision_reason,~r~n" + &
"       ctx_basic_info.group_id,~r~n" + &
"       ctx_basic_info.record_id,~r~n" + &
"       ctx_basic_info.custom_11,~r~n" + &
"       ctx_basic_info.custom_12,~r~n" + &
"       ctx_basic_info.custom_13,~r~n" + &
"       ctx_basic_info.custom_14,~r~n" + &
"       ctx_basic_info.custom_15,~r~n" + &
"       ctx_basic_info.custom_16,~r~n" + &
"       ctx_basic_info.custom_17,~r~n" + &
"       ctx_basic_info.custom_18,~r~n" + &
"       ctx_basic_info.custom_19,~r~n" + &
"       ctx_basic_info.custom_20,~r~n" + &
"       ctx_basic_info.custom_21,~r~n" + &
"       ctx_basic_info.custom_22,~r~n" + &
"       ctx_basic_info.custom_date1,~r~n" + &
"       ctx_basic_info.custom_date2,~r~n" + &
"       ctx_basic_info.custom_date3,~r~n" + &
"       ctx_basic_info.custom_date4,~r~n" + &
"       ctx_basic_info.custom_date5,~r~n" + &
"       ctx_basic_info.custom_date6,~r~n" + &
"       ctx_basic_info.custom_date7,~r~n" + &
"       ctx_basic_info.custom_date8,~r~n" + &
"       ctx_basic_info.custom_date9,~r~n" + &
"       ctx_basic_info.custom_date10,~r~n" + &
"       ctx_basic_info.custom_date16,~r~n" + &
"       ctx_basic_info.custom_date17,~r~n" + &
"       ctx_basic_info.custom_n1,~r~n" + &
"       ctx_basic_info.custom_n2,~r~n" + &
"       ctx_basic_info.custom_n3,~r~n" + &
"       ctx_basic_info.custom_n4,~r~n" + &
"       ctx_basic_info.custom_n5,~r~n" + &
"       ctx_basic_info.custom_n6,~r~n" + &
"       ctx_basic_info.custom_n7,~r~n" + &
"       ctx_basic_info.custom_n8,~r~n" + &
"       ctx_basic_info.custom_n9,~r~n" + &
"       ctx_basic_info.custom_n10,~r~n" + &
"       ctx_basic_info.custom_n11,~r~n" + &
"       ctx_basic_info.custom_n12,~r~n" + &
"       ctx_basic_info.custom_n13,~r~n" + &
"       ctx_basic_info.custom_n14,~r~n" + &
"       ctx_basic_info.custom_n15,~r~n" + &
"       ctx_basic_info.custom_n16,~r~n" + &
"       ctx_basic_info.custom_n17,~r~n" + &
"       ctx_basic_info.custom_n18,~r~n" + &
"       ctx_basic_info.custom_n19,~r~n" + &
"       ctx_basic_info.custom_n20,~r~n" + &
"       ctx_basic_info.custom_n21,~r~n" + &
"       ctx_basic_info.custom_n22,~r~n" + &
"       ctx_basic_info.custom_n23,~r~n" + &
"       ctx_basic_info.custom_n24,~r~n" + &
"       ctx_basic_info.custom_n25,~r~n" + &
"       ctx_basic_info.custom_n26,~r~n" + &
"       ctx_basic_info.custom_n27,~r~n" + &
"       ctx_basic_info.custom_notes_1,~r~n" + &
"       ctx_basic_info.custom_notes_2,~r~n" + &
"       ctx_basic_info.custom_notes_3,~r~n" + &
"       ctx_basic_info.custom_notes_4,~r~n" + &
"       ctx_basic_info.custom_notes_5,~r~n" + &
"       ctx_basic_info.work_flow_n1,~r~n" + &
"       ctx_basic_info.work_flow_n2,~r~n" + &
"       ctx_basic_info.work_flow_n3,~r~n" + &
"       ctx_basic_info.work_flow_n4,~r~n" + &
"       ctx_basic_info.work_flow_n5,~r~n" + &
"       ctx_basic_info.custom_status1,~r~n" + &
"       ctx_basic_info.custom_status2,~r~n" + &
"       ctx_basic_info.salesforce_id,~r~n" + &
"       ctx_basic_info.version_number,~r~n" + &
"       ctx_basic_info.version_date,~r~n" + &
"       ctx_basic_info.notes,~r~n" + &
"       ctx_basic_info.app_facility,~r~n" + &
"       ctx_basic_info.master_contract_id AS master_ctx_id,~r~n" + &
"       ctx_basic_info.master_contract_name,~r~n" + &
"       code_lookup_6.code AS dvision_code,~r~n" + &
"       code_lookup_6.description AS dvision_description~r~n" + &
"  FROM (((((((ctx_basic_info LEFT OUTER JOIN code_lookup ON ctx_basic_info.category = code_lookup.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_1 ON ctx_basic_info.status = code_lookup_1.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_2 ON ctx_basic_info.contract_type = code_lookup_2.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_3 ON ctx_basic_info.term_reason = code_lookup_3.lookup_code)~r~n" + &
"       Left OUTER JOIN app_facility ON ctx_basic_info.app_facility = app_facility.facility_id)~r~n" + &
"       Left OUTER JOIN ctx_products ON ctx_basic_info.ctx_id = ctx_products.ctx_id)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_4 ON ctx_products.product_type = code_lookup_4.lookup_code)~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_5 ON ctx_products.product_id = code_lookup_5.lookup_code~r~n" + &
"       LEFT OUTER JOIN code_lookup AS code_lookup_6 ON ctx_basic_info.dvision = code_lookup_6.lookup_code~r~n" + &
"	WHERE ctx_basic_info.is_template = 0 ~r~n" + &
"ORDER BY ctx_basic_info.ctx_id"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"if exists(select 1 from sysobjects where name = 'v_ctx_custom') ~r~n" + &
" drop view v_ctx_custom"

is_sql_statements[UpperBound(is_sql_statements) + 1] = &
"CREATE VIEW v_ctx_custom AS ~r~n" + &
"SELECT TOP 100 PERCENT~r~n" + &
"       ctx_id,~r~n" + &
"       custom_1,~r~n" + &
"       custom_2,~r~n" + &
"       custom_3,~r~n" + &
"       custom_4,~r~n" + &
"       custom_5,~r~n" + &
"       custom_6,~r~n" + &
"       custom_7,~r~n" + &
"       custom_8,~r~n" + &
"       custom_9,~r~n" + &
"       custom_10,~r~n" + &
"       custom_11,~r~n" + &
"       custom_12,~r~n" + &
"       custom_13,~r~n" + &
"       custom_14,~r~n" + &
"       custom_15,~r~n" + &
"       custom_16,~r~n" + &
"       custom_17,~r~n" + &
"       custom_18,~r~n" + &
"       custom_19,~r~n" + &
"       custom_20,~r~n" + &
"       custom_date1,~r~n" + &
"       custom_date2,~r~n" + &
"       custom_date3,~r~n" + &
"       custom_date4,~r~n" + &
"       custom_date5,~r~n" + &
"       custom_date6,~r~n" + &
"       custom_date7,~r~n" + &
"       custom_date8,~r~n" + &
"       custom_date9,~r~n" + &
"       custom_date10,~r~n" + &
"       custom_date11,~r~n" + &
"       custom_date12,~r~n" + &
"       custom_date13,~r~n" + &
"       custom_date14,~r~n" + &
"       custom_date15,~r~n" + &
"       custom_n1,~r~n" + &
"       custom_n2,~r~n" + &
"       custom_n3,~r~n" + &
"       custom_n4,~r~n" + &
"       custom_n5,~r~n" + &
"       custom_n6,~r~n" + &
"       custom_n7,~r~n" + &
"       custom_n8,~r~n" + &
"       custom_n9,~r~n" + &
"       custom_n10,~r~n" + &
"       custom_n11,~r~n" + &
"       custom_n12,~r~n" + &
"       custom_n13,~r~n" + &
"       custom_n14,~r~n" + &
"       custom_n15,~r~n" + &
"       custom_n16,~r~n" + &
"       custom_n17,~r~n" + &
"       custom_n18,~r~n" + &
"       custom_n19,~r~n" + &
"       custom_n20,~r~n" + &
"       custom_n21,~r~n" + &
"       custom_n22,~r~n" + &
"       custom_n23,~r~n" + &
"       custom_n24,~r~n" + &
"       custom_n25,~r~n" + &
"       custom_percent_1, custom_percent_2, " + &
"       custom_percent_3, custom_percent_4, custom_percent_5, custom_percent_6, custom_percent_7, custom_percent_9, custom_percent_10, " + &
"		  custom_percent_8, custom_21, custom_22, custom_n26, custom_n27, custom_date16, custom_date17," + &
"       ctx_basic_info.custom_notes_1,~r~n" + &
"       ctx_basic_info.custom_notes_2,~r~n" + &
"       ctx_basic_info.custom_notes_3,~r~n" + &
"       ctx_basic_info.custom_notes_4,~r~n" + &
"       ctx_basic_info.custom_notes_5,~r~n" + &
"       custom_status1,~r~n" + &
"       custom_status2~r~n" + &
"  FROM ctx_basic_info~r~n" + &
"ORDER BY ctx_id"

of_execute_sqls("of_ver140_release_view1")

Return 1
end function

public function integer of_ver140_release_storeprocedure1 ();//====================================================================
// Function: of_ver140_release_storeprocedure1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 03/03/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"If Exists (SELECT name FROM sysobjects WHERE name = 'up_calculate_date_alarms' AND type = 'P')~r~n" + &
//"~tDROP PROCEDURE up_calculate_date_alarms~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Exists ( Select 1 From sysobjects where type = 'P' and name = 'sp_create_request_data' )~r~n" + &
"Begin~r~n" + &
"~tDrop Procedure sp_create_request_data~r~n" + &
"End ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create Procedure sp_create_request_data( @rwf_id int,@user_id varchar(50),@notes varchar(8000),@ctx_id int output, @err_msg varchar(8000) output)~r~n" + &
"AS~r~n" + &
"Begin~r~n" + &
"~tDeclare @num tinyint, @error_sum int~r~n" + &
"~tDeclare~t@count int,~t@max int, @template_id int, @category int,~t@lookup_code int,@status int, @record_id int, @app_facility int~r~n" + &
"~tDeclare~t@table_id int, @custom_status1 int,~t@custom_status2 int, @seq_no int,@contact_id int~r~n" + &
"~tDeclare @rowid int, @order_no int,@col_number_value int,@scale int, @doc_id int, @document_id int, @request_id int~r~n" + &
"~tDeclare @col_decimal_value numeric(14,4)~r~n" + &
"~tDeclare @version_number varchar(15), @master_contract_name varchar(255),@return varchar(10)~r~n" + &
"~tDeclare @table_name varchar(50), @col_name varchar(50), @col_string_value varchar(1000), @col_type varchar(128),@owner_user varchar(50), @creator varchar(50)~r~n" + &
"~tDeclare @document_name varchar(200), @doc_ext varchar(10), @description varchar(2000), @doc_type varchar(6)~r~n" + &
"~tDeclare @version_date datetime, @col_datetime_value datetime~r~n" + &
"~tDeclare @allow_update_doc char(1)~r~n" + &
"~tDeclare @sql_insert varchar(max),@sql_value varchar(max), @sql varchar(max), @sql_delete varchar(max),@sql_delete2 varchar(max),@sql_delete_ctx varchar(max)~r~n" + &
"~tDeclare @sql_temp1 varchar(max),@sql_temp2 varchar(max),@sql_temp3 varchar(max),@sql_temp4 varchar(max), @sql_update varchar(max)~r~n" + &
"~r~n" + &
"~tSET ANSI_NULLS ON;~r~n" + &
"~r~n" + &
"~tSET QUOTED_IDENTIFIER ON;~r~n" + &
"~r~n" + &
"~tSet @sql_delete = ''~r~n" + &
"~tSet @sql_delete2 = ''~r~n" + &
"~tSet @num = 1~r~n" + &
"~t/* add adjuest status is 'Waiting for Approval' */~r~n" + &
"~tSELECT @count = Count(*) From request_webform Where rwf_id =@rwf_id ;~r~n" + &
"~tif(@count = 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; The @rwf_id is a invalid.'~r~n" + &
"~t~treturn~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~t/* @ctx_id is come from template module of create value */~r~n" + &
"~tif (@ctx_id is null or @ctx_id = 0)~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSELECT @count = Count(*) FROM ctx_basic_info;~r~n" + &
"~t~tSELECT @max = isnull(MaxContractCnt,0) FROM icred_settings;~r~n" + &
"~r~n" + &
"~t~tSet @num = 2~r~n" + &
"~t~tif (@max > 0 and @count >= @max)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+';Your record limit for number of contracts has been reached. Call Contract Logix sales at 866-371-4445 to purchase an upgrade.'~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*new*/~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @lookup_code~t= lookup_code from code_lookup where   upper(lookup_name) = upper('Contract Status') and upper(code) = upper('active');~r~n" + &
"~t~t~r~n" + &
"~t~tSelect @category =category, @owner_user =owner_user, @allow_update_doc =allow_update_doc, @template_id = template_id,@creator =create_user From request_webform Where rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @count = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='category' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @status = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='status' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @version_date = col_datetime_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='version_date' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @version_number = col_string_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='version_number' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @master_contract_name = col_string_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='master_contract_name' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @app_facility = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='app_facility' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @custom_status1 = count(1) from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='custom_status1' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @custom_status2 = count(1) from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='custom_status2' and rwf_id =@rwf_id;~r~n" + &
"~t~tSelect top 1 @contact_id = col_number_value from request_webform_detail where table_name = 'ctx_contacts' and col_name = 'contact_id' ~r~n" + &
"~t~t~t~tand (col_type = 'numeric' or col_type = 'int' ) and rwf_id =@rwf_id;~r~n" + &
"~t~t~r~n" + &
"~t~tif (@owner_user is not null and @owner_user = '$<Creater>$')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @owner_user = @creator~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update default the category value*/~r~n" + &
"~t~tif (@count is not null and @count > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @category = @count~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tif(@version_number is null or @version_number ='')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @version_number~t= '1.0'~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@version_date is null )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @version_date~t= getdate()~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@master_contract_name is null)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @master_contract_name = ''~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tif(@status is null or @status = 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @status = @lookup_code~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*~tget ctx_basic_info table id*/~r~n" + &
"~t~tselect @table_id = table_id from sys_tables where lower(import_table_name) = lower('ctx_basic_info') ;~r~n" + &
"~t~tselect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~tif (@seq_no is null )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @seq_no = MIN(seq_no)  from sys_audit ;~r~n" + &
"~t~t~tif (@seq_no is null )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = @seq_no - 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@seq_no = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tset @seq_no = @seq_no + 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @num = 3~r~n" + &
"~t~tSelect @ctx_id = isnull(ctx_id, 0) From ids;~t~r~n" + &
"~t~tUPDATE ids  SET ctx_id = (isnull(ctx_id , 0) + 1) Where ctx_id = @ctx_id ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid CTX id. '~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tSet @num = 4~r~n" + &
"~t~tSelect @record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @record_id ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tSet @ctx_id = @ctx_id + 1 ~r~n" + &
"~t~tSet @record_id = @record_id + 1 ~r~n" + &
"~t~t~r~n" + &
"~t~tSet @sql_insert = 'INSERT INTO ctx_basic_info ( ctx_id, category, status,  record_id, version_number,version_date, app_facility, master_contract_name, come_from '~r~n" + &
"~t~tSet @sql_value = ' VALUES ('+ convert(varchar,@ctx_id )+','+convert(varchar, @category)+','+convert(varchar, @status)+','+convert(varchar, @record_id)+~r~n" + &
"~t~t~t~t~t~t','''+ @version_number+''',convert(datetime,'''+convert(varchar,@version_date)+'''),'+convert(varchar, @app_facility)+','''+@master_contract_name +''', ' +~r~n" + &
"~t~t~t~t~t~t'''request(0)-completed'' '~t~t~t~t~t~r~n" + &
"~r~n" + &
"~t~tDECLARE request_cursor CURSOR FOR ~r~n" + &
"      ~t~tSelect table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ~r~n" + &
"~t~t~tFrom request_webform_detail~r~n" + &
"~t~t~tWhere types='column' and table_name ='ctx_basic_info'~tand rwf_id = @rwf_id ~r~n" + &
"~t~t~tGroup by table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ;~r~n" + &
"~r~n" + &
"~t~tOPEN request_cursor~r~n" + &
"~t~tFETCH NEXT FROM request_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~t~tBEGIN~r~n" + &
"~t~t~tif (@table_name = 'ctx_basic_info' and ( @col_name <> 'category'and @col_name <> 'version_date'and @col_name <> 'version_number'and @col_name <> 'master_contract_name'and @col_name <> 'app_facility' and @col_name <> 'status') ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @count = 0 ~r~n" + &
"~r~n" + &
"~t~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_datetime_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ', convert(datetime,''' + convert(varchar,@col_datetime_value,101)+ ''') '~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale > 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_decimal_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',' + convert(varchar,@col_decimal_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = @sql_value + ',''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~tIf ( @count = 1)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sql_insert = @sql_insert + ', '+ @col_name~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tFETCH NEXT FROM request_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~tEnd~r~n" + &
"~t~tCLOSE request_cursor~r~n" + &
"~t~tDEALLOCATE request_cursor~r~n" + &
"~r~n" + &
"~t~tSet @num = 5~r~n" + &
"~t~tSet @error_sum = 0 ~r~n" + &
"~t~tSelect @sql_insert = @sql_insert + ' ) '~r~n" + &
"~t~tSelect @sql_value = @sql_value + ' ) '~r~n" + &
"~t~tSet @sql = @sql_insert + @sql_value~r~n" + &
"~r~n" + &
"~t~t/*about the app_facility table will use new company id */~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION CTX1;~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tExecute(@sql) ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t/* move the detele Statement to the end */~t~t~t~r~n" + &
"~r~n" + &
"~t~t~t/*update sys_audit table 2 */~r~n" + &
"~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~tVALUES(@record_id, 1001,@seq_no ,@table_id,@ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@record_id)+' and field_id = ''1001'' and seq_no = '+convert(varchar,@seq_no) + ' ; '~t~t~t~r~n" + &
"~r~n" + &
"~t~t~t/*update ctx_version table 3 */~r~n" + &
"~t~t~tINSERT INTO ctx_version (ctx_id,version_id,version_number,version_date,user_id,old_value,new_value)~r~n" + &
"~t~t~t~tValues(@ctx_id ,1,@version_number,@version_date,@user_id, '',@version_number);~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_version where ctx_id ='+convert(varchar,@ctx_id)+' and version_id ='+convert(varchar,@version_number)+' ; '~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*update sys_statusaudit table 4 status*/~r~n" + &
"~t~t~tINSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)~r~n" + &
"~t~t~t~tVALUES (@ctx_id ,1,@lookup_code,getdate(),@user_id,'status');~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@ctx_id)+' and seq_no = 1 and field_name =''status'' ; '~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*update sys_statusaudit table 4 if exists custom_status1 column*/~r~n" + &
"~t~t~tif (@custom_status1 > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tINSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)~r~n" + &
"~t~t~t~t~tVALUES (@ctx_id ,1,@lookup_code,getdate(),@user_id,'custom_status1');~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@ctx_id)+' and seq_no = 1 and field_name =''custom_status1'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~t/*update sys_statusaudit table 4 if exists custom_status2*/~r~n" + &
"~t~t~tif(@custom_status2 > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tINSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)~r~n" + &
"~t~t~t~t~tVALUES (@ctx_id ,1,@lookup_code,getdate(),@user_id,'custom_status2');~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@ctx_id)+' and seq_no = 1 and field_name =''custom_status2'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_basic_info Where ctx_id ='+convert(varchar,@ctx_id)+' ; '~r~n" + &
"~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX1;~r~n" + &
"~t~t~tReturn  ~r~n" + &
"~t~tEND CATCH;~r~n" + &
"~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX1;~r~n" + &
"~t~t~treturn  ~r~n" + &
"~t~tEnd ~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION CTX1;~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* ctx_contract_contacts table */~r~n" + &
"~t~t/*Set @count =0~r~n" + &
"~t~tSELECT @count =Count(1)  FROM ctx_contacts WHERE facility_id = @app_facility;~r~n" + &
"~t~tif (@count =1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSELECT @contact_id =contact_id FROM ctx_contacts  WHERE facility_id = @app_facility;~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse if (@count > 1 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSELECT @contact_id =contact_id FROM ctx_contacts  WHERE defaultto = '1' and facility_id = @app_facility ;~r~n" + &
"~t~tEnd*/~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tif(@contact_id is not null and @contact_id > 0 )~r~n" + &
"~t~tBegin~t~t~r~n" + &
"~t~t~t/*~tcheck the contacts if not exsist the company */~r~n" + &
"~t~t~tSet @count =0~r~n" + &
"~t~t~tSELECT @count =Count(1)  FROM ctx_contacts WHERE facility_id = @app_facility and contact_id= @contact_id;~r~n" + &
"~t~t~tif (@count > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 6~r~n" + &
"~t~t~t~tSelect @record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@record_id  ;~r~n" + &
"~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tSet @record_id = @record_id + 1~r~n" + &
"~r~n" + &
"~t~t~t~tSelect @table_id = table_id from sys_tables where charindex('d_contract_det_contact_',lower(table_name) ) > 0~r~n" + &
"~t~t~t~t~tand charindex('contracted company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tSet @error_sum = 0~r~n" + &
"~t~t~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~t~t~tSet @sql_delete2 = ''~r~n" + &
"~t~t~t~tBEGIN TRY~r~n" + &
"~t~t~t~tBEGIN TRANSACTION CTX2;~t~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~t/*update ctx_contract_contacts table 5E */~r~n" + &
"~t~t~t~t~tINSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) ~r~n" + &
"~t~t~t~t~tVALUES ( @ctx_id , @contact_id, 'E', @record_id, 'Y', 'N', 'F' )~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@ctx_id)+' and ic_area =''E'' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~t~t~tVALUES(@record_id ,1001, @seq_no ,@table_id, @ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From sys_audit Where rec_id = '+convert(varchar,@record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tEND TRY~r~n" + &
"~t~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEND CATCH;~r~n" + &
"~r~n" + &
"~t~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tCOMMIT TRANSACTION CTX2;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update ctx_contract_contacts table 5I */~r~n" + &
"~t~tif(@owner_user is null or rtrim(ltrim(@owner_user)) = '')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@template_id is not null and @template_id > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @contact_id = ctx_contract_contacts.contact_id,@owner_user = ctx_contacts.user_d~r~n" + &
"~t~t~t~tFrom ctx_templates_info, ctx_contract_contacts, ctx_contacts~r~n" + &
"~t~t~t~tWhere ctx_templates_info.ctx_id = ctx_contract_contacts.ctx_id ~r~n" + &
"~t~t~t~tAnd ctx_contacts.contact_id = ctx_contract_contacts.contact_id~r~n" + &
"~t~t~t~tAnd ctx_templates_info.ib_our_contacts = 1 and ctx_templates_info.add_contact = 1 and ctx_templates_info.ib_owner = 1~r~n" + &
"~t~t~t~tAnd ctx_contract_contacts.ic_area = 'I' and ctx_contract_contacts.owner = 'Y' and ctx_templates_info.id = @template_id;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tSet @num = 7~r~n" + &
"~t~tSelect @contact_id = contact_id from ctx_contacts where user_d = @owner_user;~t~t~r~n" + &
"~t~tSelect @record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@record_id  ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~t~tSet @record_id = @record_id + 1 ~r~n" + &
"~r~n" + &
"~t~tSelect @table_id = table_id from sys_tables where charindex('d_contract_det_contact_',lower(table_name) ) > 0~r~n" + &
"~t~t~tand charindex('our company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~r~n" + &
"~t~tSet @num = 8~r~n" + &
"~t~tSet @error_sum = 0~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION CTX3;~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~t/*update ctx_contract_contacts table 5I */~r~n" + &
"~t~t~tINSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) ~r~n" + &
"~t~t~tVALUES ( @ctx_id , @contact_id, 'I', @record_id , 'Y', 'Y', 'F' )~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@ctx_id)+' and ic_area =''I'' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~r~n" + &
"~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~tVALUES(@record_id,1001, @seq_no ,@table_id, @ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~t~t~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~r~n" + &
"~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From sys_audit Where rec_id = '+convert(varchar,@record_id )+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX3;~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEND CATCH;~t~r~n" + &
"~t~t~t~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION CTX3;~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd ~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION CTX3;~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* except ctx_basic_info table */~r~n" + &
"~t~tSet @err_msg = ''~r~n" + &
"~t~tSet @num = 9~r~n" + &
"~t~tSet @error_sum = 0~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~t~texecute sp_create_request_data_table @rwf_id ,@user_id ,@ctx_id , @sql_delete2 output, @err_msg output~r~n" + &
"~t~tif (@@error <> 0 or len(@err_msg) > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform_document table  */~r~n" + &
"~t~tSet @sql = ''~r~n" + &
"~t~tSet @sql_insert = ''~r~n" + &
"~t~tSet @sql_value = ''~r~n" + &
"~t~tSet @sql_update = ''~r~n" + &
"~t~tSet @sql_temp1 = ''~r~n" + &
"~t~tSet @sql_temp2 = ''~r~n" + &
"~t~tSet @sql_temp3 = ''~r~n" + &
"~t~tSet @sql_temp4 = ''~t~t~r~n" + &
"~t~tSet @status = NULL~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~r~n" + &
"~t~tselect @status = lookup_code from code_lookup where upper(lookup_name) = upper('Contract Document Status') and upper(code) = upper('New') ;~r~n" + &
"~r~n" + &
"~t~tSet @num = 10~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @count = count(*) from request_webform_document Where datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tSELECT @doc_id = doc_id FROM ids ;~r~n" + &
"~t~tupdate ids SET doc_id =( isnull ( doc_id , 0 ) + @count ) Where doc_id~t= @doc_id ;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid doc_id. '~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tDeclare document_cursor Cursor For ~r~n" + &
"~t~t~tSelect document_id,doc_type,request_id from request_webform_document~r~n" + &
"~t~t~tWhere datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tOpen document_cursor~r~n" + &
"~t~tFetch Next From document_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tWhile @@FETCH_STATUS = 0~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = @count + 1~r~n" + &
"~t~t~tSelect @sql_insert = @sql_insert + 'INSERT INTO ctx_am_document ( doc_id, ctx_id, doc_name, revision, doc_type,doc_ext, category, base_type, create_by, create_date,~r~n" + &
"~t~t~t~t~t status,status_by, status_date, filename, revision_control, received_by, received_date,notes )' +~r~n" + &
"~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+','+ convert(varchar,@ctx_id)+',document_name,1.0,''Other'', left(doc_ext,3), '+ convert(varchar, @category)+~r~n" + &
"~t~t~t~t~t~t', ''3'',''' +@user_id+''',GETDATE(),'+ convert(varchar, @status) +', '''+@user_id+''',GETDATE(), document_name +'+'''.'''+ '+doc_ext,1, ''' +~r~n" + &
"~t~t~t~t~t~t@user_id+''' ,GETDATE(),description From request_webform_document Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp1 = @sql_temp1 + ' Delete From ctx_am_document Where doc_id ='+convert(varchar, @doc_id + @count)+' ; '~r~n" + &
"~r~n" + &
"~t~t~tSelect @sql = @sql + 'INSERT INTO ctx_am_doc_image ( doc_id , revision, image_file , doc_ext , modify_date , doc_ext_full ) ' +~r~n" + &
"~t~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+', 1.0,document_content, left(doc_ext,3), getdate() , doc_ext From request_webform_document~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~r~n" + &
"~t~t~tSelect @sql_temp2 = @sql_temp2 + ' Delete From ctx_am_doc_image Where doc_id ='+convert(varchar, @doc_id + @count)+' and revision =1.0 ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tSelect @sql_value = @sql_value + 'INSERT INTO ctx_am_doc_audit ( doc_id, audit_id, revision, doc_ext, action, action_by, action_date,~r~n" + &
"~t~t~t~t~t~t~t filename,notes,esign_type) Select '+convert(varchar, @doc_id + @count)+', 1, 1.0, left(doc_ext,3),''New - Existing'','''+@user_id+''',~r~n" + &
"~t~t~t~t~t~t~t GETDATE(),document_name +'+'''.'''+ '+doc_ext,description,''sertifi'' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~t~r~n" + &
"~t~t~tSelect @sql_temp3 = @sql_temp3 + ' Delete From ctx_am_doc_audit Where doc_id ='+convert(varchar, @doc_id + @count)+' and audit_id =1 ; '~t~t~t~t~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tSelect @sql_update = @sql_update + ' Update request_webform_document Set file_id ='+convert(varchar, @doc_id + @count)+ ' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp4 = @sql_temp4 + ' Update request_webform_document Set file_id = null From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~tFetch Next From document_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tEnd~t~r~n" + &
"~t~tClose document_cursor~r~n" + &
"~t~tDeallocate document_cursor~r~n" + &
"~r~n" + &
"~t~tif (@count > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @num = 11~r~n" + &
"~t~t~tSet @error_sum = 0~t~t~t~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~tBEGIN TRANSACTION document_trans;~t~r~n" + &
"~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~tExecute(@sql_insert) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp1~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp2~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_value) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp3~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_update) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp4~r~n" + &
"~r~n" + &
"~t~t~tEnd TRY~r~n" + &
"~t~t~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~r~n" + &
"~t~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tCOMMIT TRANSACTION document_trans;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform table and add the log */~r~n" + &
"~t~tSet @num = 12~r~n" + &
"~t~tSet @error_sum = 0~t~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~tif(@notes is null or ltrim(rtrim(@notes))= '')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @notes = 'Your contract #'+ convert(varchar,@ctx_id)+ ' has been successfully created.'~r~n" + &
"~t~tEnd ~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @notes = 'Your contract #'+ convert(varchar,@ctx_id)+ ' has been successfully created. '+char(10)+char(13) + @notes~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION ctx_request_log;~t~r~n" + &
"~t~t~tUpdate request_webform~tSet status ='Completed', ctx_id = @ctx_id Where rwf_id = @rwf_id ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Update request_webform~tSet status =''Waiting for Approval'' , ctx_id =0 Where rwf_id ='+convert(varchar,@rwf_id) + ' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tINSERT INTO request_webform_log (rwf_id,notes ,user_id,modify_date ,action, ctx_id)~r~n" + &
"~t~t~t~tValues(@rwf_id, @notes, @user_id, getdate(), 'Approved', @ctx_id) ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Delete From request_webform_log Where rwf_id ='+convert(varchar,@rwf_id) + ' and action = ''Approved'' and ctx_id ='+convert(varchar,@ctx_id)+ ' ; '~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_request_log;~r~n" + &
"~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_request_log;~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION ctx_request_log;~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd~r~n" + &
"~telse~r~n" + &
"~tBegin~r~n" + &
"~t~t/* use the template create the request webform data.*/~r~n" + &
"~t~tSet @sql_insert = ' Update ctx_basic_info set '~r~n" + &
"~t~tSet @sql = ' Where ctx_id ='+ convert(varchar,@ctx_id )~r~n" + &
"~t~tSet @sql_value = ''~r~n" + &
"~t~tSet @sql_delete_ctx = ' delete from ctx_location_contacts where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_location_specialty where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_location_pracs where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_loc where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_elements where ctx_req_profile_hdr_id in ( select a.ctx_req_profile_hdr_id from ctx_req_profile_hdr a where a.ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_req_profile_hdr where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_data where fee_sched_location_id in ( select a.fee_sched_location_id from ctx_fee_sched_locations a where a.fee_sched_id in ( select b.fee_sched_id from ctx_fee_sched_hdr b where b.ctx_id ='+ convert(varchar,@ctx_id) +' ) )  ; ' +~r~n" + &
"~t~t~t' delete from ctx_fee_sched_locations where fee_sched_id in ( select a.fee_sched_id from ctx_fee_sched_hdr a where a.ctx_id ='+ convert(varchar,@ctx_id) +') ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_pracs where fee_sched_id in ( select a.fee_sched_id from ctx_fee_sched_hdr a where a.ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_hdr where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_file_location where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' +~r~n" + &
"~t~t~t' delete from ctx_orgs_contact where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_notification_users where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_notification where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_action_items where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_image where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_images where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_notification_users where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_notification where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_fee_sched_nm where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_products where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_contract_contacts where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_custom where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_custom_multi_detail where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_custom_multi_hdr where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_version where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from sys_statusaudit where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from dashboard_gadgets_recent where upper ( recent_type ) =''CTX'' and data_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_templates_info where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_doc_audit where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +') ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_ai_notification_users where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +')  ; ' +~r~n" + &
"~t~t~t' delete from ctx_am_ai_alarm_attachment where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_ai_notification where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' )  ; ' +~r~n" + &
"~t~t~t' delete from ctx_am_action_item where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +') ; ' +  ~r~n" + &
"~t~t~t' delete from ctx_am_document_clause where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +') ; ' +~r~n" + &
"~t~t~t' delete from ctx_am_doc_image where doc_id in ( select doc_id from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' ) ; ' + ~r~n" + &
"~t~t~t' delete from ctx_am_document where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_alarm_attachment where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_ai_notification where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_products where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from sys_statusaudit where ctx_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' update ctx_basic_info set master_contract_id =0 where master_contract_id ='+ convert(varchar,@ctx_id) +' ; ' + ~r~n" + &
"~t~t~t' delete from ctx_basic_info where ctx_id = '+ convert(varchar,@ctx_id) +' ; ' ~r~n" + &
"~r~n" + &
"~t~tDECLARE template_cursor CURSOR FOR ~r~n" + &
"      ~t~tSelect table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ~r~n" + &
"~t~t~tFrom request_webform_detail~r~n" + &
"~t~t~tWhere types='column' and table_name ='ctx_basic_info'~tand rwf_id = @rwf_id ~r~n" + &
"~t~t~tGroup by table_name,rowid,order_no,col_name,col_string_value,col_datetime_value,col_number_value,col_decimal_value,col_type,scale ;~r~n" + &
"~r~n" + &
"~t~tOPEN template_cursor~r~n" + &
"~t~tFETCH NEXT FROM template_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~t~tBEGIN~r~n" + &
"~t~t~tif (@table_name = 'ctx_basic_info' ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @count = 0 ~r~n" + &
"~r~n" + &
"~t~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_datetime_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = ' convert(datetime,''' + convert(varchar,@col_datetime_value,101)+ ''') '~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_number_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_number_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse if(@col_type ='numeric' and @scale > 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_decimal_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  convert(varchar,@col_decimal_value)~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value = ' ''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (@col_string_value is not null)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_value =  ' ''' +@col_string_value+''' ' ~r~n" + &
"~t~t~t~t~t~tSet @count = 1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~tIf ( @count = 1)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @sql_insert = @sql_insert +' '+ @col_name + '= '+ @sql_value + ' ,'~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tFETCH NEXT FROM template_cursor INTO  @table_name,@rowid,@order_no,@col_name,@col_string_value,@col_datetime_value,@col_number_value,@col_decimal_value,@col_type,@scale ~r~n" + &
"~t~tEnd~r~n" + &
"~t~tCLOSE template_cursor~r~n" + &
"~t~tDEALLOCATE template_cursor~r~n" + &
"~r~n" + &
"~t~tif(right(@sql_insert,1) = ',')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_insert = left(@sql_insert, len(@sql_insert) - 1)~r~n" + &
"~t~t~tSelect @sql_insert = @sql_insert + @sql~r~n" + &
"~r~n" + &
"~t~t~tSet @num = 101~r~n" + &
"~t~t~tSet @error_sum = 0~t~r~n" + &
"~t~t~tSet @sql_delete = ''~r~n" + &
"~t~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~tBEGIN TRANSACTION ctx_template1;~t~r~n" + &
"~t~t~t~tExecute(@sql_insert);~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~t~t~tSet @sql_delete2 = @sql_delete_ctx~t~t~t~t~t~r~n" + &
"~t~t~tEND TRY~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION ctx_template1;~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_delete_ctx);~r~n" + &
"~t~t~t~tif @@error <> 0 ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Delete Ctx:'+@sql_delete_ctx~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~r~n" + &
"~t~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION ctx_template1;~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tExecute(@sql_delete_ctx);~r~n" + &
"~t~t~t~tif @@error <> 0 ~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ '  Delete Ctx:'+@sql_delete_ctx~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tCOMMIT TRANSACTION ctx_template1;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* set delete2 value */~r~n" + &
"~t~tSet @sql_delete2 = @sql_delete_ctx~t~t~r~n" + &
"~r~n" + &
"~t~t/* insert ctx_contract_contacts table */~r~n" + &
"~t~tSelect @template_id = template_id From request_webform Where rwf_id =@rwf_id;~r~n" + &
"~t~tSelect top 1 @contact_id = col_number_value from request_webform_detail where table_name = 'ctx_contacts' and col_name = 'contact_id' ~r~n" + &
"~t~t~t~tand (col_type = 'numeric' or col_type = 'int' ) and rwf_id =@rwf_id;~t~r~n" + &
"~t~tSelect @app_facility = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='app_facility' ~r~n" + &
"~t~t~t~tand (col_type = 'numeric' or col_type = 'int' )~tand rwf_id =@rwf_id;~t~t~t~t~t~t~t~r~n" + &
"~r~n" + &
"~t~tif(@app_facility is null or @app_facility <= 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @app_facility = ctx_basic_info.app_facility FROM ctx_templates_info, ctx_basic_info~r~n" + &
"~t~t~twhere ctx_templates_info.ctx_id = ctx_basic_info.ctx_id~r~n" + &
"~t~t~tAnd ctx_templates_info.ib_contract_detail = 1 and ctx_templates_info.clear_company = 0  ~r~n" + &
"~t~t~tAnd ctx_basic_info.app_facility is not null and len(ctx_basic_info.app_facility ) > 0 and ctx_templates_info.id = @template_id ;~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@contact_id is not null and @contact_id > 0 )~r~n" + &
"~t~tBegin~t~t~r~n" + &
"~t~t~t/*~tcheck the contacts if not exsist the company */~r~n" + &
"~t~t~tSet @count =0~r~n" + &
"~t~t~tSELECT @count =Count(1)  FROM ctx_contacts WHERE facility_id = @app_facility and contact_id= @contact_id;~r~n" + &
"~t~t~tif (@count > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 102~r~n" + &
"~t~t~t~tSelect @record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@record_id  ;~r~n" + &
"~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid record_id. '~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tSet @record_id = @record_id + 1~r~n" + &
"~r~n" + &
"~t~t~t~tSelect @table_id = table_id from sys_tables where charindex('d_contract_det_contact_',lower(table_name) ) > 0~r~n" + &
"~t~t~t~t~tand charindex('contracted company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tSet @error_sum = 0~r~n" + &
"~t~t~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~t~t~tSet @sql_delete2 = ''~r~n" + &
"~t~t~t~tBEGIN TRY~r~n" + &
"~t~t~t~tBEGIN TRANSACTION CTX2;~t~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~t/*update ctx_contract_contacts table 5E */~r~n" + &
"~t~t~t~t~tINSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) ~r~n" + &
"~t~t~t~t~tVALUES ( @ctx_id , @contact_id, 'E', @record_id, 'Y', 'N', 'F' )~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@ctx_id)+' and ic_area =''E'' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~t~tINSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type )~r~n" + &
"~t~t~t~t~t~tVALUES(@record_id ,1001, @seq_no ,@table_id, @ctx_id ,'','INSERT',@user_id,getdate(),1,'I') ~r~n" + &
"~t~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~t~tSelect @sql_delete2 = @sql_delete2 + ' Delete From sys_audit Where rec_id = '+convert(varchar,@record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tEND TRY~r~n" + &
"~t~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEND CATCH;~r~n" + &
"~r~n" + &
"~t~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~t~tROLLBACK TRANSACTION CTX2;~r~n" + &
"~t~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~telse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id;~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~treturn ~r~n" + &
"~t~t~t~tEnd ~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tCOMMIT TRANSACTION CTX2;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/* except ctx_basic_info table */~r~n" + &
"~t~tSet @err_msg = ''~r~n" + &
"~t~tSet @num = 103~r~n" + &
"~t~tSet @error_sum = 0~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~r~n" + &
"~t~texecute sp_create_request_data_table @rwf_id ,@user_id ,@ctx_id , @sql_delete2 output, @err_msg output~r~n" + &
"~t~tif (@@error <> 0 or len(@err_msg) > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform_document table  */~r~n" + &
"~t~tSet @category = null~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @category =category, @template_id = template_id From request_webform Where rwf_id =@rwf_id;~r~n" + &
"~t~tSelect @count = col_number_value from request_webform_detail where table_name = 'ctx_basic_info' and col_name ='category' and rwf_id =@rwf_id;~r~n" + &
"~t~tif(@count is not null and @count > 0 ) ~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @category = @count~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @sql = ''~r~n" + &
"~t~tSet @sql_insert = ''~r~n" + &
"~t~tSet @sql_value = ''~r~n" + &
"~t~tSet @sql_update = ''~r~n" + &
"~t~tSet @sql_temp1 = ''~r~n" + &
"~t~tSet @sql_temp2 = ''~r~n" + &
"~t~tSet @sql_temp3 = ''~r~n" + &
"~t~tSet @sql_temp4 = ''~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~t~r~n" + &
"~t~tSet @status = NULL~r~n" + &
"~t~tselect @status = lookup_code from code_lookup where upper(lookup_name) = upper('Contract Document Status') and upper(code) = upper('New') ;~r~n" + &
"~r~n" + &
"~t~tSet @num = 130~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tSelect @count = count(*) from request_webform_document Where datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tSELECT @doc_id = doc_id FROM ids ;~r~n" + &
"~t~tUpdate ids SET doc_id =( isnull ( doc_id , 0 ) + @count ) where doc_id = @doc_id;~r~n" + &
"~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @err_msg =' Position:'+convert(varchar,@num)+'; Invalid doc_id. '~r~n" + &
"~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @count = 0~r~n" + &
"~t~tDeclare document_template_cursor Cursor For ~r~n" + &
"~t~t~tSelect document_id,doc_type,request_id from request_webform_document~r~n" + &
"~t~t~tWhere datalength(document_content) > 0 and rwf_id = @rwf_id ;~r~n" + &
"~t~tOpen document_template_cursor~r~n" + &
"~t~tFetch Next From document_template_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tWhile @@FETCH_STATUS = 0~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = @count + 1~r~n" + &
"~t~t~tSelect @sql_insert = @sql_insert + 'INSERT INTO ctx_am_document ( doc_id, ctx_id, doc_name, revision, doc_type,doc_ext, category, base_type, create_by, create_date,~r~n" + &
"~t~t~t~t~t status,status_by, status_date, filename, revision_control, received_by, received_date,notes )' +~r~n" + &
"~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+','+ convert(varchar,@ctx_id)+',document_name,1.0,''Other'', left(doc_ext,3), '+ convert(varchar, @category)+~r~n" + &
"~t~t~t~t~t~t', ''3'',''' +@user_id+''',GETDATE(),'+ convert(varchar, @status) +', '''+@user_id+''',GETDATE(), document_name +'+'''.'''+ '+doc_ext,1, ''' +~r~n" + &
"~t~t~t~t~t~t@user_id+''' ,GETDATE(),description From request_webform_document Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp1 = @sql_temp1 + ' Delete From ctx_am_document Where doc_id ='+convert(varchar, @doc_id + @count)+' ; '~r~n" + &
"~r~n" + &
"~t~t~tSelect @sql = @sql + 'INSERT INTO ctx_am_doc_image ( doc_id , revision, image_file , doc_ext , modify_date , doc_ext_full ) ' +~r~n" + &
"~t~t~t~t~t~t~t' Select '+convert(varchar, @doc_id + @count)+', 1.0,document_content, left(doc_ext,3), getdate() , doc_ext From request_webform_document~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~r~n" + &
"~t~t~tSelect @sql_temp2 = @sql_temp2 + ' Delete From ctx_am_doc_image Where doc_id ='+convert(varchar, @doc_id + @count)+' and revision =1.0 ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tSelect @sql_value = @sql_value + 'INSERT INTO ctx_am_doc_audit ( doc_id, audit_id, revision, doc_ext, action, action_by, action_date,~r~n" + &
"~t~t~t~t~t~t~t filename,notes,esign_type) Select '+convert(varchar, @doc_id + @count)+', 1, 1.0, left(doc_ext,3),''New - Existing'','''+@user_id+''',~r~n" + &
"~t~t~t~t~t~t~t GETDATE(),document_name +'+'''.'''+ '+doc_ext,description,''sertifi'' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~t~t~r~n" + &
"~t~t~tSelect @sql_temp3 = @sql_temp3 + ' Delete From ctx_am_doc_audit Where doc_id ='+convert(varchar, @doc_id + @count)+' and audit_id =1 ; '~t~t~t~t~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tSelect @sql_update = @sql_update + ' Update request_webform_document Set file_id ='+convert(varchar, @doc_id + @count)+ ' From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~tSelect @sql_temp4 = @sql_temp4 + ' Update request_webform_document Set file_id = null From request_webform_document ~r~n" + &
"~t~t~t~t~t~t~t Where rwf_id = '+convert(varchar,@rwf_id)+' and document_id ='+~r~n" + &
"~t~t~t~t~t~tconvert(varchar,@document_id) +' and request_id ='+convert(varchar, @request_id)+ 'and doc_type = '''+convert(varchar,@doc_type) +''' ; '~r~n" + &
"~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~t~tFetch Next From document_template_cursor Into @document_id, @doc_type, @request_id ;~r~n" + &
"~t~tEnd~t~r~n" + &
"~t~tClose document_template_cursor~r~n" + &
"~t~tDeallocate document_template_cursor~r~n" + &
"~r~n" + &
"~t~tif (@count > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @num = 131~r~n" + &
"~t~t~tSet @error_sum = 0~t~t~r~n" + &
"~t~t~tBEGIN TRY~r~n" + &
"~t~t~tBEGIN TRANSACTION document_trans;~t~t~t~t~t~r~n" + &
"~t~t~t~tExecute(@sql_insert) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp1~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp2~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_value) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp3~r~n" + &
"~r~n" + &
"~t~t~t~tExecute(@sql_update) ;~r~n" + &
"~t~t~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~t~t~tSelect @sql_delete2 = @sql_delete2 + @sql_temp4~r~n" + &
"~r~n" + &
"~t~t~tEnd TRY~r~n" + &
"~t~t~r~n" + &
"~t~t~tBEGIN CATCH~r~n" + &
"~t~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete);~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~r~n" + &
"~t~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~t~tROLLBACK TRANSACTION document_trans;~r~n" + &
"~t~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~telse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~treturn ~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tCOMMIT TRANSACTION document_trans;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~t/*update request_webform table and add the log */~r~n" + &
"~t~tSet @num = 131~r~n" + &
"~t~tSet @error_sum = 0~t~r~n" + &
"~t~tSet @sql_delete = @sql_delete2 + @sql_delete~r~n" + &
"~t~tSet @sql_delete2 = '' ~t~r~n" + &
"~t~tif(@template_id is null)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @template_id = 0~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@notes is null or ltrim(rtrim(@notes))= '')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @notes = 'Your contract #'+ convert(varchar,@ctx_id)+ ' has been successfully created.'~r~n" + &
"~t~tEnd ~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @notes = 'Your contract #'+ convert(varchar,@ctx_id)+ ' has been successfully created. '+char(10)+char(13) + @notes~r~n" + &
"~t~tEnd ~r~n" + &
"~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~tBEGIN TRANSACTION ctx_template_log;~t~r~n" + &
"~t~t~tUpdate request_webform~tSet status ='Completed', ctx_id = @ctx_id Where rwf_id = @rwf_id ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Update request_webform~tSet status =''Waiting for Approval'', ctx_id =0~tWhere rwf_id ='+convert(varchar,@rwf_id) + ' ; '~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~tINSERT INTO request_webform_log (rwf_id,notes ,user_id,modify_date ,action, ctx_id)~r~n" + &
"~t~t~t~tValues(@rwf_id, @notes, @user_id, getdate(), 'Approved', @ctx_id) ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~t~tSet @sql_delete2 = @sql_delete2 +' Delete From request_webform_log Where rwf_id ='+convert(varchar,@rwf_id) + ' and action = ''Approved'' and ctx_id ='+convert(varchar,@ctx_id)+ ' ; '~r~n" + &
"~t~t~t~r~n" + &
"~t~t~tUpdate ctx_basic_info Set come_from = ( case when charindex(')',come_from) > 0 then 'request('+ substring(come_from,charindex('(',come_from)+ 1 ,charindex(')',come_from) - charindex('(',come_from) - 1 ) + ')completed'~r~n" + &
"~t~t~t~t~telse 'request(0)-completed' end ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tSet @error_sum = @error_sum + @@error~t~t~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSelect @err_msg = ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_template_log;~r~n" + &
"~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEND CATCH;~t~r~n" + &
"~r~n" + &
"~t~tIf (@error_sum <> 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)~r~n" + &
"~t~t~tROLLBACK TRANSACTION ctx_template_log;~r~n" + &
"~t~t~tExecute(@sql_delete );~r~n" + &
"~t~t~tif (@@error <> 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @err_msg = @err_msg+ ' Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tUPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id = @ctx_id ;~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~treturn ~t~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tCOMMIT TRANSACTION ctx_template_log;~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd ~r~n" + &
"End"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Exists ( Select 1 From sysobjects where type = 'P' and name = 'up_update_session' )~r~n" + &
"Begin~r~n" + &
"~tDrop Procedure up_update_session~r~n" + &
"End ~r~n"

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"CREATE PROCEDURE up_update_session     " + &  
"(     " + &  
"@as_session_id varchar(20),                " + &  
"@as_login_user       varchar(50),                    " + &  
"@as_client_ip varchar(20),                    " + &  
"@as_exec_type varchar(10)                   " + &  
")     " + &  
"AS     " + &  
"Begin     " + &  
"         Declare @ll_timeout numeric(5)     " + &  
"         Declare @ll_session_exist numeric(5)     " + &  
"         Declare @ld_current_datetime datetime     " + &  
"         Select @as_exec_type = Upper(@as_exec_type)     " + &  
"         Select Top 1 @ld_current_datetime =  getdate() From sysobjects     " + &  
"         Select @ll_timeout = session_refresh_frequency from icred_settings     " + &  
"        Delete From Session_Info Where Datediff(Second,last_update_datetime,@ld_current_datetime) > (@ll_timeout + 1) * 60     " + &  
"         If @as_exec_type = 'CREATE' or @as_exec_type = 'UPDATE'     " + &  
"                   Begin     " + &  
"                            Select @ll_session_exist = Count(*) From Session_Info Where session_id = @as_session_id     " + &  
"                            If @ll_session_exist = 0      " + &  
"                                     Begin     " + &  
"                                               Insert Into Session_Info Values(@as_session_id,@as_login_user,@as_client_ip,@ld_current_datetime,@ld_current_datetime)     " + &  
"                                     End     " + &  
"                            Else     " + &  
"                                     Begin     " + &  
"     " + &  
"                                               Update Session_Info Set last_update_datetime = @ld_current_datetime Where session_id = @as_session_id     " + &  
"																Update idp_users Set idpuser_validetime = dateadd(minute,3,idpuser_validetime) Where map_user_id = @as_login_user and app_verifycode <> '' " + &
"                                     End     " + &
"                   End     " + &  
"         Else IF @as_exec_type = 'DELETE'      " + &  
"                   Begin     " + &  
"                            If @as_session_id <> ''      " + &  
"                                     Delete From Session_Info Where session_id = @as_session_id     " + &  
"                   End     " + &  
"End     " 

//Added By Jay Chen 06-18-2014
is_sql_statements[upperbound(is_sql_statements) + 1] = &
"if exists (select TOP 1 1 from sysobjects where name = 'uf_get_contact_address' and type = 'FN') " + &
"  DROP FUNCTION uf_get_contact_address "

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create function uf_get_contact_address( @ctx_id INT,@as_user_id NUMERIC) returns varchar(8000) ~r~n " + &
"as ~r~n" + &
" begin	~r~n" + &
"~t~tdeclare @returnstring varchar(4000) ~r~n" + &
"~t~tdeclare @contact_id int ~r~n" + &
"~t~tdeclare @user_d varchar(50) ~r~n" + &
"~t~tdeclare @contact_email varchar(50)~r~n " + &
"~t~tdeclare @smtp_email varchar(50) ~r~n" + &
" ~t~tset  @returnstring = '' ~r~n " + &
" ~t~t/* Get the contact_id value */~r~n " + &
" ~t~tdeclare cur_get_contact_id cursor for~r~n " + &
"~t~tselect contact_id from ctx_contract_contacts where ctx_contract_contacts.ctx_id = @ctx_id ~r~n" + &
"~t~t AND (@as_user_id in (ctx_contract_contacts.association,ctx_contract_contacts.association2,ctx_contract_contacts.association3,~r~n" + &
"~t~t ctx_contract_contacts.association4,ctx_contract_contacts.association5,ctx_contract_contacts.association6,~r~n" + &
"~t~t ctx_contract_contacts.association7,ctx_contract_contacts.association8,~r~n" + &
"~t~tctx_contract_contacts.association9,ctx_contract_contacts.association10)) ~r~n" + &
"~t~t AND ctx_contract_contacts.ic_area = 'I' ~r~n" + &
"~t~topen cur_get_contact_id ~r~n" + &
"~t~tfetch next from cur_get_contact_id into @contact_id ~r~n" + &
"~t~twhile @@fetch_status = 0 ~r~n" + &
"~t~tbegin ~r~n" + &
"~t~t~tset @user_d = '' ~r~n" + &
"~t~t~tselect @user_d = user_d from ctx_contacts where contact_id = @contact_id  /* check the user_d */ ~r~n" + &
"~t~t~tif (@user_d is NULL) OR (@user_d = '')		/* get email address from contact number when user_d is null */ ~r~n" + &
"~t~t~tbegin ~r~n" + &
"~t~t~t~tset @contact_email = '' ~r~n" + &
"~t~t~t~tselect @contact_email = contact_email from ctx_contacts_numbers where contact_id = @contact_id ~r~n " + &
"~t~t~t~tand via = (SELECT lookup_code FROM code_lookup WHERE code = 'EMAIL' AND lookup_name = 'Contract Contact VIA')~r~n " + &
"~t~t~t~tif @contact_email is not NULL~r~n " + &
"~t~t~t~tbegin~r~n " + &
"~t~t~t~t~tif (@returnstring IS NULL) OR (@returnstring = '')~r~n " + &
"~t~t~t~t~tbegin ~r~n" + &
"~t~t~t~t~t~tset @returnstring = @contact_email~r~n " + &
"~t~t~t~t~tend~r~n " + &
"~t~t~t~t~telse ~r~n" + &
"~t~t~t~t~tbegin ~r~n" + &
"~t~t~t~t~t~tset @returnstring = @returnstring + ';' + @contact_email~r~n " + &
"~t~t~t~t~tend ~r~n" + &
"~t~t~t~tend~r~n " + &
"~t~t~tend ~r~n" + &
"~t~t~telse					/* get email address from email painter when user_d is not null */~r~n " + &
"~t~t~tbegin ~r~n" + &
"~t~t~t~tset @smtp_email = '' ~r~n" + &
"~t~t~t~tselect @smtp_email = em_smtp_accounts.email from ctx_contract_contacts,ctx_contacts,em_smtp_accounts~r~n " + &
"~t~t~t~twhere ctx_contract_contacts.contact_id = ctx_contacts.contact_id and ctx_contacts.user_d = em_smtp_accounts.user_id~r~n " + &
"~t~t~t~tand ctx_contract_contacts.ctx_id = @ctx_id and ctx_contract_contacts.ic_area = 'I'  ~r~n" + &
"~t~t~t~tand (@as_user_id in (ctx_contract_contacts.association,ctx_contract_contacts.association2,ctx_contract_contacts.association3,~r~n " + &
"~t~t~t~t~t~t~t~t~t~t~t~t~tctx_contract_contacts.association4,ctx_contract_contacts.association5,ctx_contract_contacts.association6,~r~n " + &
"~t~t~t~t~t~t~t~t~t~t~t~t~tctx_contract_contacts.association7,ctx_contract_contacts.association8,~r~n " + &
"~t~t~t~t~t~t~t~t~t~t~t~t~tctx_contract_contacts.association9,ctx_contract_contacts.association10))  ~r~n " + &
"~t~t~t~tand em_smtp_accounts.Is_Default = 'Y' and em_smtp_accounts.Email is not NULL ~r~n" + &
"~t~t~t~tand ctx_contacts.user_d = @user_d ~r~n" + &
"~t~t~t~tif (@smtp_email is NULL) OR (@smtp_email = '')~r~n " + &
"~t~t~t~tbegin ~r~n" + &
"~t~t~t~t~tset @contact_email = '' ~r~n" + &
"~t~t~t~t~tselect @contact_email = contact_email from ctx_contacts_numbers where contact_id = @contact_id ~r~n " + &
"~t~t~t~t~tand via = (SELECT lookup_code FROM code_lookup WHERE code = 'EMAIL' AND lookup_name = 'Contract Contact VIA')~r~n " + &
"~t~t~t~t~tif @contact_email is not NULL~r~n " + &
"~t~t~t~t~tbegin~r~n " + &
"~t~t~t~t~t~tif (@returnstring IS NULL) OR (@returnstring = '')~r~n " + &
"~t~t~t~t~t~tbegin ~r~n " + &
"~t~t~t~t~t~t~tset @returnstring = @contact_email ~r~n" + &
"~t~t~t~t~t~tend~r~n " + &
"~t~t~t~t~t~telse~r~n " + &
"~t~t~t~t~t~tbegin~r~n " + &
"~t~t~t~t~t~t~tset @returnstring = @returnstring + ';' + @contact_email~r~n " + &
"~t~t~t~t~t~tend ~r~n" + &
"~t~t~t~t~tend ~r~n" + &
"~t~t~t~tend ~r~n" + &
"~t~t~t~telse~r~n " + &
"~t~t~t~tbegin~r~n " + &
"~t~t~t~tif (@returnstring IS NULL) OR (@returnstring = '')~r~n " + &
"~t~t~t~tbegin ~r~n" + &
"~t~t~t~t~tset @returnstring = @smtp_email~r~n " + &
"~t~t~t~tend~r~n " + &
"~t~t~t~telse~r~n " + &
"~t~t~t~tbegin ~r~n" + &
"~t~t~t~t~tset @returnstring = @returnstring + ';' + @smtp_email ~r~n" + &
"~t~t~t~tend ~r~n" + &
"~t~t~tend ~r~n" + &
"~t~tend ~r~n" + &
"~t~tfetch next from cur_get_contact_id into @contact_id ~r~n" + &
"~tend ~r~n" + &
"~tCLOSE cur_get_contact_id ~r~n" + &
"~tDEALLOCATE cur_get_contact_id  ~r~n" + &
"~treturn @returnstring ~r~n" + &
"end " 

of_execute_sqls("of_ver140_release_storeprocedure1")


return 1
end function

public function integer of_ver140_release_trigger1 ();//====================================================================
// Function: of_ver140_release_trigger1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 03/03/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

// added code here
//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if exists(select 1 from sysobjects where name = 'tri_ctx_custom_update' and type = 'TR') ~r~n" + &
//"	drop trigger tri_ctx_custom_update ~r~n" 

//of_execute_sqls("of_ver140_release_trigger1")


return 1
end function

public function integer of_ver140_release_createfulltext1 ();//====================================================================
// Function: of_ver140_release_createfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 03/03/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//if use this function, need enable this comment.
//of_enable_fulltext()							//Added By Mark Lee 12/22/2015

//is_sql_statements[upperbound(is_sql_statements) + 1] = &
//"if not exists (select TOP 1 1 from sysfulltextcatalogs where name = 'ctx_custom_catalog') " + &
//"begin " + &
//"   	exec sp_fulltext_catalog 'ctx_custom_catalog','create' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver140_release_createfulltext1")			//Added By Mark Lee 12/22/2015

return 1 
end function

public function integer of_ver140_release_dropfulltext1 ();//====================================================================
// Function: of_ver140_release_dropfulltext1
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark Lee		Date: 03/03/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contract Logix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================
//if use this function, need enable this comment.
//of_enable_fulltext()						//Added By Mark Lee 12/22/2015

//is_sql_statements[UpperBound(is_sql_statements) + 1] = &
//"if (COLUMNPROPERTY (OBJECT_ID('ctx_custom'),'ctx_id','IsFulltextIndexed' ) = 1) " + &
//"begin " + &
//"	exec sp_fulltext_column 'ctx_custom','ctx_id','drop' " + &
//"end "

//if use this function, need enable this comment.
//of_execute_sqls("of_ver140_release_dropfulltext1")					//Added By Mark Lee 12/22/2015

return 1

end function

public function integer of_ver140_release_storeprocedure2 ();//====================================================================
// Function: of_ver140_release_storeprocedure2
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
//--------------------------------------------------------------------
// Returns:  integer
//--------------------------------------------------------------------
// Author:	Mark		Date: 05/22/2014
//--------------------------------------------------------------------
//	Copyright (c) 2008-2013 Contractlogix, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

//is_sql_statements[UpperBound(is_sql_statements) + 1] =  &
//"If Exists (SELECT name FROM sysobjects WHERE name = 'up_calculate_date_alarms' AND type = 'P')~r~n" + &
//"~tDROP PROCEDURE up_calculate_date_alarms~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"If Exists ( Select 1 From sysobjects where type = 'P' and name = 'sp_create_import_data' )~r~n" + &
"Begin~r~n" + &
"~tDrop Procedure sp_create_import_data~r~n" + &
"End ~r~n" 

is_sql_statements[upperbound(is_sql_statements) + 1] = &
"Create Procedure sp_create_import_data( @id int,@notification_pid int,@notes varchar(8000), @err_msg varchar(8000) output)~r~n" + &
"AS~r~n" + &
"Begin~r~n" + &
"~tDeclare @num tinyint, @error_sum int,@rowid int,@count int~r~n" + &
"~tDeclare @scale int,@table_name varchar(50), @col varchar(100), @col_value varchar(1000),@origin_col_value varchar(1000), @col_type varchar(128)~r~n" + &
"~tDeclare @sql_insert varchar(max),@sql_value varchar(max),@sql_delete varchar(max), @sql_update varchar(max),@sql_where varchar(max),@sql_param nvarchar(max)~r~n" + &
"~tDeclare @table_records_id int, @col_length smallint, @prec smallint, @key_field tinyint, @no_match_procd tinyint, @lu_type char(1), @lu_table varchar(50), @lu_field_name varchar(50)~r~n" + &
"~tDeclare @sys_ctx_id int,@primary_key varchar(1000), @sys_record_id int, @filter_table varchar(100), @sys_id int, @sys_facility_id int, @sys_contact_id int~r~n" + &
"~tDeclare @old_table_name varchar(50), @old_rowid int, @flag varchar(10),@tmp_id int, @salesforce_id varchar(30),@fieldname varchar(50), @owner varchar(1)~r~n" + &
"~tDeclare @contact_id int, @ic_area char(1),@contact_id1 int, @ic_area1 char(1), @table_id int,@seq_no int, @status int,@custom_status1 int,@custom_status2 int~r~n" + &
"~r~n" + &
"~tSet @count = 0~r~n" + &
"~tSelect @count = count(1) from sysobjects where name = '#import_external_tmp_data' and type = 'U';~r~n" + &
"~tIf (@count is not null ) and (@count = 1 ) ~r~n" + &
"~tBegin~r~n" + &
"~t~tDrop TABLE #import_external_tmp_data;~r~n" + &
"~tEnd ~r~n" + &
"~t~t~r~n" + &
"~tSet @num = 1~r~n" + &
"~tBEGIN TRY~r~n" + &
"~t~tselect import_webform_detail.table_records_id,import_webform_detail.table_name, import_webform_detail.rowid,~r~n" + &
"~t~timport_webform_detail.col, import_webform_detail.col_value, aa.col_type,aa.col_length,aa.prec, aa.scale, import_mapping_fields.key_field, ~r~n" + &
"~t~timport_mapping_fields.no_match_procd, import_mapping_fields.lu_type, import_mapping_fields.lu_table, import_mapping_fields.lu_field_name,~r~n" + &
"~t~tspace(1000) as actual_value into #import_external_tmp_data~r~n" + &
"~t~tfrom import_webform_detail ~r~n" + &
"~t~tinner join ~t(select object_name(syscolumns.id) as table_name, syscolumns.name as col_name, syscolumns.length as col_length,systypes.name as col_type, ~r~n" + &
"~t~tsyscolumns.prec as prec, syscolumns.scale as scale from syscolumns , systypes where syscolumns.xtype = systypes.xtype ) aa ~t~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~tOn import_webform_detail.table_name = aa.table_name and import_webform_detail.col = aa.col_name ~r~n" + &
"~t~tinner join (select import_fields.field_id, import_fields.field_name,import_tables.table_id, import_tables.table_name~r~n" + &
"~t~t~tfrom import_fields, import_tables where import_fields.table_id = import_tables.table_id~tand import_tables.isoft_module = 2 ) bb ~r~n" + &
"~t~t~ton import_webform_detail.table_name = bb.table_name and import_webform_detail.col = bb.field_name~r~n" + &
"~t~tleft join import_mapping_fields on import_mapping_fields.table_records_id = import_webform_detail.table_records_id and import_mapping_fields.isoft_field_id = bb.field_id~r~n" + &
"~t~twhere import_webform_detail.rowid >= 0 and import_webform_detail.main_id = @id and (import_webform_detail.col_value is not null)~r~n" + &
"~t~torder by import_webform_detail.table_records_id,import_webform_detail.rowid, import_webform_detail.col~r~n" + &
"~r~n" + &
"~t~tSet @error_sum = @@ERROR~r~n" + &
"~tEND TRY~r~n" + &
"~tBEGIN CATCH~r~n" + &
"~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~tSelect @err_msg ='('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Error:'+Convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn -1 ~r~n" + &
"~tEND CATCH~r~n" + &
"~tIf @error_sum <> 0 ~r~n" + &
"~tBegin ~r~n" + &
"~t~tSelect @err_msg ='('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn -1 ~r~n" + &
"~tEnd ~r~n" + &
"~r~n" + &
"~tSet @count = 0~r~n" + &
"~tSelect @count = count(1) from #import_external_tmp_data;~r~n" + &
"~tif (@count <= 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+ 'Error: No data need to import.'~r~n" + &
"~t~treturn -1 ~r~n" + &
"~tEnd ~r~n" + &
"~r~n" + &
"~t/*~tGet the foreign key value */~r~n" + &
"~tSet @sql_where = ''~r~n" + &
"~tSet @filter_table = ''~r~n" + &
"~tSet @contact_id = 0~r~n" + &
"~tSet @contact_id1 = 0~r~n" + &
"~tSet @ic_area=''~r~n" + &
"~tSet @ic_area1=''~r~n" + &
"~tSet @sys_ctx_id = 0~r~n" + &
"~tSet @sys_id = 0~r~n" + &
"~tSet @sys_facility_id = 0~r~n" + &
"~tSelect @sql_where = @sql_where +' [' + ab.table_name + ']' from (select distinct table_name from #import_external_tmp_data) ab ;~r~n" + &
"~tif (charindex('[ctx_basic_info]',@sql_where) > 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @filter_table = 'ctx_contract_contacts'~r~n" + &
"~t~tif (charindex('[ctx_contract_contacts]',@sql_where) > 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @contact_id =col_value from #import_external_tmp_data where table_name = 'ctx_contract_contacts' and col ='contact_id' and rowid =0~r~n" + &
"~t~t~tSelect @ic_area = col_value from #import_external_tmp_data where table_name = 'ctx_contract_contacts' and col ='ic_area' and rowid =0~r~n" + &
"~t~t~tSelect @contact_id1 =col_value from #import_external_tmp_data where table_name = 'ctx_contract_contacts' and col ='contact_id' and rowid =1~r~n" + &
"~t~t~tSelect @ic_area1 = col_value from #import_external_tmp_data where table_name = 'ctx_contract_contacts' and col ='ic_area' and rowid =1~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd~r~n" + &
"~t~r~n" + &
"~t/*~tupdate the column of actual value */~r~n" + &
"~tSet @num = 2~r~n" + &
"~tSet @sql_update =''~r~n" + &
"~tUpdate #import_external_tmp_data~r~n" + &
"~tSet actual_value = col_value~r~n" + &
"~tWhere lu_type is null or ltrim(rtrim(lu_type)) = '' ;~r~n" + &
"~tSet @error_sum = @@ERROR~r~n" + &
"~tIf @error_sum <> 0 ~r~n" + &
"~tBegin ~r~n" + &
"~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~treturn -1  ~r~n" + &
"~tEnd ~r~n" + &
"~r~n" + &
"~tDeclare update_import_data_cursor Cursor For~r~n" + &
"~tselect table_records_id,table_name,rowid,col,col_value,col_type,col_length,prec,scale,key_field,no_match_procd,lu_type,lu_table,lu_field_name~r~n" + &
"~tfrom #import_external_tmp_data Where   table_name <> @filter_table ~r~n" + &
"~torder by table_records_id,rowid, col~r~n" + &
"~tOpen update_import_data_cursor~r~n" + &
"~tFetch Next From update_import_data_cursor Into @table_records_id,@table_name,@rowid,@col,@col_value,@col_type,@col_length,@prec,@scale,@key_field,@no_match_procd,@lu_type,@lu_table,@lu_field_name~r~n" + &
"~tWhile @@FETCH_STATUS = 0~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @count = 0 ~r~n" + &
"~t~tSet @tmp_id = 0~r~n" + &
"~t~tSet @sql_param = ''~t~r~n" + &
"~t~tif (@lu_type is not null and datalength(ltrim(rtrim(@lu_type))) > 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @num = 3~t~r~n" + &
"~t~t~tSelect @sql_param =  Case @lu_type ~tWhen 'A' then N'Select top 1 @tmp_id = lookup_code From address_lookup Where '+ @lu_field_name + N' =''' +@col_value+ N''' and lookup_name =''' + @lu_table+ N'''' ~t~t~r~n" + &
"~t~t~t~tWhen 'C' then N'Select top 1 @tmp_id = lookup_code From code_lookup Where '+ @lu_field_name + N' =''' +@col_value+ N''' and lookup_name =''' + @lu_table+ N'''' ~t~r~n" + &
"~t~t~t~tWhen 'F' then N'Select top 1 @tmp_id = facility_id From facility Where '+ @lu_field_name + N' =''' +@col_value+ N''' ' ~t~t~t~r~n" + &
"~t~t~t~tWhen 'M' then N'Select top 1 @tmp_id = committee_id From committee_lookup Where '+ @lu_field_name + N' =''' +@col_value+ N''' ' ~r~n" + &
"~t~t~t~tWhen 'I' then N'Select top 1 @tmp_id = facility_id From app_facility Where '+ @lu_field_name + N' =''' +@col_value+ N''' ' ~r~n" + &
"~t~t~t~tWhen 'J' then N'Select top 1 @tmp_id = ctx_id From ctx_basic_info Where '+ @lu_field_name + N' =''' +@col_value+ N''' '~tEnd~r~n" + &
"~t~t~tEXEC SP_EXECUTESQL @sql_param, N'@tmp_id int output',@tmp_id OUTPUT~r~n" + &
"~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~tBegin ~r~n" + &
"~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~treturn -1 ~r~n" + &
"~t~t~tEnd ~r~n" + &
"~t~t~tif (@tmp_id is null or @tmp_id = 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (@no_match_procd is not null and @no_match_procd = 1 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t/*~tadd lookup table value */~r~n" + &
"~t~t~t~t~tSet @tmp_id =0~r~n" + &
"~t~t~t~t~tif (@lu_type='A')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @num = 4~t~r~n" + &
"~t~t~t~t~t~tSELECT @tmp_id = isnull(ids.lookup_code_id,0)  ~tFROM ids ;~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET lookup_code_id =( isnull ( lookup_code_id , 0 ) + 1 ) Where lookup_code_id = @tmp_id ;~r~n" + &
"~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Invalid lookup_code_id ('+convert(varchar,@tmp_id)+').'~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~r~n" + &
"~t~t~t~t~t~tSet @num = 5~r~n" + &
"~t~t~t~t~t~tInsert Into address_lookup(lookup_code,lookup_name,code,entity_name) Values(@tmp_id+1,left(@lu_table,20),left(@col_value,15),left(@col_value,100)) ;~r~n" + &
"~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1 ~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~tSet @col_value =  convert(varchar,@tmp_id+ 1)~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif (@lu_type='C')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @num = 6~r~n" + &
"~t~t~t~t~t~tSELECT @tmp_id = isnull(ids.lookup_code_id,0)  ~tFROM ids ;~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET lookup_code_id =( isnull ( lookup_code_id , 0 ) + 1 ) Where lookup_code_id = @tmp_id ;~r~n" + &
"~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+ 'Position:'+convert(varchar,@num)+'; Invalid lookup_code_id ('+convert(varchar,@tmp_id)+').'~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~r~n" + &
"~t~t~t~t~t~tSet @num = 7~r~n" + &
"~t~t~t~t~t~tInsert Into code_lookup(lookup_code,lookup_name,code,description) Values(@tmp_id+1,left(@lu_table,35),left(@col_value,30),left(@col_value,75)) ;~r~n" + &
"~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1 ~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~tSet @col_value =  convert(varchar,@tmp_id+ 1)~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif (@lu_type='F')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @num = 8~r~n" + &
"~t~t~t~t~t~tSELECT @tmp_id = isnull(ids.facility_id,0)  ~tFROM ids ;~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET facility_id =( isnull ( facility_id , 0 ) + 1 ) Where facility_id = @tmp_id ;~r~n" + &
"~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid facility_id ('+convert(varchar,@tmp_id)+').'~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~r~n" + &
"~t~t~t~t~t~tSet @num = 9~r~n" + &
"~t~t~t~t~t~tInsert Into facility(facility_id,facility_name) Values(@tmp_id+1,left(@col_value,100)) ;~r~n" + &
"~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~tSet @col_value =  convert(varchar,@tmp_id+ 1)~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif (@lu_type='M')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @num = 10~r~n" + &
"~t~t~t~t~t~tSELECT @tmp_id = isnull(ids.committee_id,0)  ~tFROM ids ;~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tUPDATE ids~tSET committee_id =( isnull ( committee_id , 0 ) + 1 ) Where committee_id = @tmp_id ;~r~n" + &
"~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid committee_id ('+convert(varchar,@tmp_id)+').'~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~r~n" + &
"~t~t~t~t~t~tSet @num = 11~r~n" + &
"~t~t~t~t~t~tInsert Into committee_lookup(committee_id,committee_name,facility_id) Values(@tmp_id+1,left(@col_value,50), 1) ;~r~n" + &
"~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tSet @col_value =  convert(varchar,@tmp_id+ 1)~t~t~t~t~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif (@lu_type='I')~r~n" + &
"~t~t~t~t~tBegin~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tif (lower(@lu_field_name) <> 'facility_name')~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @err_msg = '('+Convert(varchar,@id)+') '+'Error: When the value for Lu Type is ''company'' and the Lu field value is not ''company name'', the system will ignore ''no match procd'' option. If the imported value does not match any value in company lookup, it will be written to the error log.'~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tElse~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @num = 12~r~n" + &
"~t~t~t~t~t~t~tSELECT @tmp_id = max(facility_id) FROM app_facility;~t~r~n" + &
"~t~t~t~t~t~t~tInsert Into app_facility(facility_id,facility_name,contact_type2,corp_office_flag) Values(@tmp_id+1,left(@col_value,150),'B',0) ;~r~n" + &
"~t~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tSet @col_value =  convert(varchar,@tmp_id+ 1)~t~t~t~t~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif (@lu_type='J')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @err_msg = '('+Convert(varchar,@id)+') '+'Error: no match '+@col_value+ ' in the '+@table_name+'.ctx_id column.'~r~n" + &
"~t~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~t~tSet @num = 13~r~n" + &
"~t~t~t~t~tEXEC SP_EXECUTESQL @sql_param, N'@tmp_id int output',@tmp_id OUTPUT~r~n" + &
"~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg = '('+Convert(varchar,@id)+') '+'Error: no match '+@col_value+ ' in the '+@table_name+'.'+@col+' column.'~r~n" + &
"~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tElse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @col_value =  convert(varchar,@tmp_id)~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (isdate(@col_value) = 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg = '('+Convert(varchar,@id)+') '+'Error: this value ('+@col_value+') is not of the valid data type ('+ @col_type +') for this column ('+@table_name+'.'+@col+'). Please correct the import data.'~r~n" + &
"~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint'or @col_type ='bigint'or @col_type ='money'or @col_type ='smallmoney' or @col_type ='numeric' or @col_type ='decimal')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif (isnumeric(@col_value) = 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg = '('+Convert(varchar,@id)+') '+'Error: this value ('+@col_value+ ') is not of the valid data type ('+ @col_type +') for this column ('+@table_name+'.'+@col+'). Please correct the import data or if the field is a lookup type please set it as Lookup in the Import Painter.'~r~n" + &
"~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~t~t~t~r~n" + &
"~t~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tif(DATALENGTH(@col_value) > @col_length)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @err_msg = '('+Convert(varchar,@id)+') '+'Error: the length of this value('+@col_value+ ') exceeds the defined length ('+convert(varchar,@col_length)+') for this column ('+@table_name+'.'+@col+'). Please correct the import data.'~r~n" + &
"~t~t~t~t~tClose update_import_data_cursor~r~n" + &
"~t~t~t~t~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~t~t~r~n" + &
"~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @col_value = ' convert(datetime,''' + convert(varchar,@col_value,101)+ ''') '~t~t~t~t~t~t~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @col_value = ' ''' +@col_value+''' ' ~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~t~t~t~t~t~t~t~t~t~t~t~t~r~n" + &
"~t~tSelect @sql_update = @sql_update + ' Update #import_external_tmp_data Set actual_value ='+@col_value+' where table_records_id='+convert(varchar,@table_records_id)+~r~n" + &
"~t~t~t' and table_name ='''+@table_name+''' and rowid='+convert(varchar,@rowid)+' and col='''+@col+''' ;'~r~n" + &
"~t~tFetch Next From update_import_data_cursor Into @table_records_id,@table_name,@rowid,@col,@col_value,@col_type,@col_length,@prec,@scale,@key_field,@no_match_procd,@lu_type,@lu_table,@lu_field_name~r~n" + &
"~tEnd~r~n" + &
"~tClose update_import_data_cursor~r~n" + &
"~tDEALLOCATE update_import_data_cursor~r~n" + &
"~t~r~n" + &
"~tif (ltrim(rtrim(@sql_update))  <> '')~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @num = 14  ~r~n" + &
"~t~tBEGIN TRY~r~n" + &
"~t~t~texecute(@sql_update)~r~n" + &
"~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~tEND TRY~r~n" + &
"~t~tBEGIN CATCH~r~n" + &
"~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn -1~r~n" + &
"~t~tEND CATCH~r~n" + &
"~t~tIf @error_sum <> 0 ~r~n" + &
"~t~tBegin ~r~n" + &
"~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~treturn -1~r~n" + &
"~t~tEnd ~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tSet @old_rowid = 0~r~n" + &
"~tSet @old_table_name = ''~r~n" + &
"~tSet @sql_insert = ''~r~n" + &
"~tSet @sql_value =''~r~n" + &
"~tSet @sql_update = ''~r~n" + &
"~tSet @sql_where = ''~r~n" + &
"~tSet @sql_delete =''~r~n" + &
"~tSet @flag = ''~r~n" + &
"~tSet @status = 0~r~n" + &
"~tSet @custom_status1 = 0~r~n" + &
"~tSet @custom_status2 = 0~r~n" + &
"~tSet @sys_record_id = 0~r~n" + &
"~tSet @sys_contact_id = 0~r~n" + &
"~tSet @fieldname =''~r~n" + &
"~tSet @origin_col_value =''~r~n" + &
"~tSet @seq_no = 0~r~n" + &
"~tSet @num = 15~r~n" + &
"~tDeclare external_import_cursor Cursor For~r~n" + &
"~tselect table_records_id,table_name,rowid,col,actual_value,col_type,col_length,prec,scale,key_field,no_match_procd,lu_type,lu_table,lu_field_name~r~n" + &
"~tfrom #import_external_tmp_data Where table_name <> @filter_table ~r~n" + &
"~torder by table_records_id,rowid, col~r~n" + &
"~tOpen external_import_cursor~r~n" + &
"~tFetch Next From external_import_cursor Into @table_records_id,@table_name,@rowid,@col,@col_value,@col_type,@col_length,@prec,@scale,@key_field,@no_match_procd,@lu_type,@lu_table,@lu_field_name~r~n" + &
"~tWHILE @@FETCH_STATUS = 0~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @origin_col_value = @col_value~r~n" + &
"~t~tSet @count = 0 ~t~t~r~n" + &
"~t~tif(@col_type ='datetime' or @col_type ='smalldatetime')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@col_value is not null)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @col_value = ' convert(datetime,''' + convert(varchar,@col_value,101)+ ''') '~t~t~t~t~t~t~r~n" + &
"~t~t~t~tSet @count = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse if(@col_type ='int' or @col_type ='integer' or @col_type ='real' or @col_type ='float' or @col_type ='smallint'or @col_type ='tinyint' or @col_type ='numeric')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@col_value is not null)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~t/* Select @col_value =  convert(varchar,@col_value) */~r~n" + &
"~t~t~t~tSet @count = 1~r~n" + &
"~t~t~tEnd ~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse if (@col_type ='char' or @col_type ='varchar' or @col_type ='nchar' or @col_type ='nvarchar' ) ~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@col_value is not null)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @col_value = ' ''' +@col_value+''' ' ~r~n" + &
"~t~t~t~tSet @count = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~telse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@col_value is not null)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSelect @col_value =  ' ''' +@col_value+''' ' ~r~n" + &
"~t~t~t~tSet @count = 1~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tIf ( @count = 1)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif (@old_table_name <> @table_name or @old_rowid <>  @rowid )~r~n" + &
"~t~t~tBegin ~t~t~t~t~t~r~n" + &
"~t~t~t~tif (Datalength(@sql_update) > 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (right(@sql_update,1)=',')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where = replace(@sql_where,'top 1','')~r~n" + &
"~t~t~t~t~t~tSet @sql_update = left(@sql_update,datalength(@sql_update) -1 ) + ' where '+ @sql_where + ' ;'~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tSet @sql_where = ''~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tif (Datalength(@sql_insert) > 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif (right(@sql_insert,1)=',')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @sql_insert = left(@sql_insert,len(@sql_insert) - 1)+ ') ' + left(@sql_value,len(@sql_value ) -1 ) + ') ;'~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tSet @sql_value = ''~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~t~r~n" + &
"~t~t~t~tif (lower(@old_table_name) ='ctx_contacts' and lower(@table_name) = 'ctx_contacts_numbers')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @table_id = 10004~r~n" + &
"~t~t~t~t~tif (@seq_no = 0)~t~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id =-9999 ;~t~t~t~t~r~n" + &
"~t~t~t~t~tend ~t~t~t~r~n" + &
"~t~t~t~t~tSet @seq_no = @seq_no + 1~t~r~n" + &
"~t~t~t~t~tif (@flag = 'insert')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,facility_id,tfield_name,tfield_name_allias,sql_syntax )'+~r~n" + &
"~t~t~t~t~t~t~t~t' VALUES('+convert(varchar,@sys_id)+', -9999,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+',0 ,'''',''INSERT'',''salesforce user'',getdate(),0,''I'','+convert(varchar,@notification_pid)+','+convert(varchar,@sys_facility_id)+','''+@fieldname+''','''+@fieldname+''','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tElse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @sql_update = @sql_update + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,facility_id,tfield_name,tfield_name_allias,sql_syntax )' +~r~n" + &
"~t~t~t~t~t~t~t~t' VALUES('+convert(varchar,@sys_id)+', -9999,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+',0 ,'''',''UPDATE'',''salesforce user'',getdate(),0,''I'','+convert(varchar,@notification_pid)+','+convert(varchar,@sys_facility_id)+','''+@fieldname+''','''+@fieldname+''','''+left(replace(@sql_update,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@sys_id)+' and field_id = -9999 and seq_no = '+convert(varchar,@seq_no) + ' ;'~t~t~t~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~tSet @old_table_name = @table_name~r~n" + &
"~t~t~t~tSet @old_rowid = @rowid~r~n" + &
"~t~t~t~tSet @sql_param = ''~t~t~t~t~r~n" + &
"~t~t~t~tSet @tmp_id = 0~r~n" + &
"~t~t~t~tSet @primary_key = ''~r~n" + &
"~r~n" + &
"~t~t~t~tif (lower(@table_name) <> 'ctx_contacts_numbers')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @num = 16~r~n" + &
"~t~t~t~t~tSelect @salesforce_id = CONVERT(varchar(30),actual_value) from #import_external_tmp_data ~r~n" + &
"~t~t~t~t~t~twhere  col = 'salesforce_id' and table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid ;~r~n" + &
"~t~t~t~t~tSet @sql_param = N'select @tmp_id = count(1) from ' +@table_name+ N' where salesforce_id='''+ @salesforce_id+ N''' '~r~n" + &
"~t~t~t~t~tEXEC SP_EXECUTESQL @sql_param, N'@tmp_id int output',@tmp_id OUTPUT~r~n" + &
"~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~tif (@tmp_id is not null and @tmp_id > 0 )~r~n" + &
"~t~t~t~tBegin ~t~t~t~t~t~r~n" + &
"~t~t~t~t~tSet @flag = 'update'~r~n" + &
"~t~t~t~t~tSet @sql_update = @sql_update +' Update '+@table_name+ ' Set '~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('app_facility'))~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 facility_id='+ convert(varchar,facility_id) from app_facility where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect top 1 @sys_id = facility_id  from app_facility where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~tEnd~t~t~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('ctx_contacts'))~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 contact_id='+ convert(varchar,contact_id) from ctx_contacts where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect top 1 @sys_id = contact_id  from ctx_contacts where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSet @sys_contact_id = @sys_id~r~n" + &
"~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('ctx_basic_info'))~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 ctx_id='+ convert(varchar,ctx_id) from ctx_basic_info where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect @sys_ctx_id = ctx_id from ctx_basic_info where salesforce_id =@salesforce_id; ~r~n" + &
"~t~t~t~t~t~tSelect @status = Case  when ISNUMERIC(actual_value) = 1 then CONVERT(int,actual_value) else 0 end ~r~n" + &
"~t~t~t~t~t~t~t~tfrom #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='status';~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('ctx_products'))~r~n" + &
"~t~t~t~t~tBegin~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 ctx_id='+ convert(varchar,ctx_id)+ ' and product_id='+convert(varchar,product_id)+' and product_type='+convert(varchar,product_type) from ctx_products where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect @sys_ctx_id = ctx_id from ctx_products where salesforce_id =@salesforce_id; ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('ctx_fee_sched_nm'))~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 ctx_id='+ convert(varchar,ctx_id)+' and fee_sched_nm_id='+ convert(varchar,fee_sched_nm_id) from ctx_fee_sched_nm where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect @sys_ctx_id = ctx_id from ctx_fee_sched_nm where salesforce_id =@salesforce_id; ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('ctx_custom'))~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 ctx_id='+ convert(varchar,ctx_id) from ctx_custom where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect @sys_ctx_id = ctx_id from ctx_custom where salesforce_id =@salesforce_id; ~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tif(lower(@table_name) = lower('ctx_custom_multi_hdr'))~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_where =' top 1 ctx_id='+ convert(varchar,ctx_id)+' and hdr_id='+ convert(varchar,hdr_id) from ctx_custom_multi_hdr where salesforce_id =@salesforce_id;~r~n" + &
"~t~t~t~t~t~tSelect @sys_ctx_id = ctx_id from ctx_custom_multi_hdr where salesforce_id =@salesforce_id; ~r~n" + &
"~t~t~t~t~tEnd~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @sql_param =''~r~n" + &
"~t~t~t~t~tSet @tmp_id =0~r~n" + &
"~t~t~t~t~tif (lower(@table_name) <> 'ctx_contacts_numbers')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSelect @sql_param = @sql_param + ' and ' + col + ' ='+~r~n" + &
"~t~t~t~t~t~tcase when col_type ='datetime' or col_type ='smalldatetime' then ' convert(datetime,''' + convert(varchar,actual_value,101)+ ''') '~r~n" + &
"~t~t~t~t~t~t~twhen col_type ='int' or col_type ='integer' or col_type ='real' or col_type ='float' or col_type ='smallint'or col_type ='tinyint' ~r~n" + &
"~t~t~t~t~t~t~t~t or col_type ='numeric' then actual_value~r~n" + &
"~t~t~t~t~t~t~twhen col_type ='char' or col_type ='varchar' or col_type ='nchar' or col_type ='nvarchar' then ' ''' +actual_value+''' ' ~r~n" + &
"~t~t~t~t~t~t~telse ' ''' +actual_value+''' ' end ~r~n" + &
"~t~t~t~t~t~t  from #import_external_tmp_data where key_field ='1' and col <> 'salesforce_id' and table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid ;~r~n" + &
"~t~t~t~t~t~tif(@sql_param is not null and ltrim(rtrim(@sql_param)) <> '')~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @num = 17~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = stuff(@sql_param, 1, 4,'')~r~n" + &
"~t~t~t~t~t~t~tSet @sql_where = @sql_param~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select @tmp_id = count(1) from '+@table_name+ N' where '+ @sql_param~r~n" + &
"~t~t~t~t~t~t~tEXEC SP_EXECUTESQL @sql_param, N'@tmp_id int output',@tmp_id OUTPUT~r~n" + &
"~t~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tElse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t/*~tThe column contact_email must be in the front of other column orders.~t*/~r~n" + &
"~t~t~t~t~t~tSet @tmp_id =0 ~r~n" + &
"~t~t~t~t~t~tif (@col = 'contact_email')~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSelect @tmp_id = count(1) from ctx_contacts_numbers where contact_email = @origin_col_value and contact_id = @sys_contact_id;~r~n" + &
"~t~t~t~t~t~t~tSet @sql_where = ' contact_email = '''+convert(varchar,@origin_col_value)+''' and contact_id = '+convert(varchar,@sys_contact_id)~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tElse~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSelect @tmp_id = count(1) from #import_external_tmp_data where table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid and (col = 'phone' or col = 'ext');~r~n" + &
"~t~t~t~t~t~t~tif (@tmp_id > 1 )~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSelect @tmp_id = count(1) from ctx_contacts_numbers ~r~n" + &
"~t~t~t~t~t~t~t~twhere phone = (Select actual_value from #import_external_tmp_data where table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid and (col = 'phone')) ~r~n" + &
"~t~t~t~t~t~t~t~tand ext = (Select actual_value from #import_external_tmp_data where table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid and (col = 'ext')) ~r~n" + &
"~t~t~t~t~t~t~t~tand contact_id = @sys_contact_id;~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_where = ' phone = '''+convert(varchar,(Select actual_value from #import_external_tmp_data where table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid and (col = 'phone')) )~r~n" + &
"~t~t~t~t~t~t~t~t~t+ ''' and ext = '''+convert(varchar,(Select actual_value from #import_external_tmp_data where table_records_id = @table_records_id and table_name = @table_name and rowid = @rowid and (col = 'ext')) )~r~n" + &
"~t~t~t~t~t~t~t~t~t+''' and contact_id = '+convert(varchar,@sys_contact_id)~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tElse if(@tmp_id = 1)~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tif (@col = 'phone')~r~n" + &
"~t~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~t~tSelect @tmp_id = count(1) from ctx_contacts_numbers where phone = @origin_col_value and contact_id = @sys_contact_id and ext is null;~r~n" + &
"~t~t~t~t~t~t~t~t~tSet @sql_where = ' phone = '''+convert(varchar,@origin_col_value)+''' and contact_id = '+convert(varchar,@sys_contact_id)~r~n" + &
"~t~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~t~tElse if (@col = 'ext')~r~n" + &
"~t~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~t~tSelect @tmp_id = count(1) from ctx_contacts_numbers where ext = @origin_col_value and contact_id = @sys_contact_id and phone is null;~r~n" + &
"~t~t~t~t~t~t~t~t~tSet @sql_where = ' ext = '''+convert(varchar,@origin_col_value)+''' and contact_id = '+convert(varchar,@sys_contact_id)~r~n" + &
"~t~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~t~tif (@tmp_id is not null and @tmp_id > 0 )~r~n" + &
"~t~t~t~t~tBegin~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tSet @flag = 'update'~r~n" + &
"~t~t~t~t~t~tSet @sql_update = @sql_update +' Update '+@table_name+ ' Set '~r~n" + &
"~t~t~t~t~t~tSet @tmp_id = 0~r~n" + &
"~t~t~t~t~t~tSet @num = 18~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('app_facility'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' facility_id='' + convert(varchar,facility_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_contacts'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' contact_id='' + convert(varchar,contact_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_contacts_numbers'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' contact_num_id='' + convert(varchar,contact_num_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_basic_info'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' ctx_id='' + convert(varchar,ctx_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~t~tSelect @status = Case  when ISNUMERIC(actual_value) = 1 then CONVERT(int,actual_value) else 0 end ~r~n" + &
"~t~t~t~t~t~t~t~tfrom #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='status';~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_products'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' product_id='' + convert(varchar,product_id) + '' and ctx_id=''+ convert(varchar,ctx_id) + '' and product_type=''+ convert(varchar,product_type) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_fee_sched_nm'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' ctx_id='' + convert(varchar,ctx_id) + '' and fee_sched_nm_id=''+ convert(varchar,fee_sched_nm_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_custom'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' ctx_id='' + convert(varchar,ctx_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_custom_multi_hdr'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_param = N'select top 1 @primary_key = '' ctx_id='' + convert(varchar,ctx_id) + '' and hdr_id=''+ convert(varchar,hdr_id) from '+@table_name+ N' where '+ @sql_where~r~n" + &
"~t~t~t~t~t~tEnd~t~t~t~r~n" + &
"~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tEXEC SP_EXECUTESQL @sql_param, N'@primary_key varchar(1000) output',@primary_key OUTPUT~r~n" + &
"~t~t~t~t~t~tSet @error_sum = @@ERROR~r~n" + &
"~t~t~t~t~t~tIf @error_sum <> 0 ~r~n" + &
"~t~t~t~t~t~tBegin ~r~n" + &
"~t~t~t~t~t~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~tEnd ~r~n" + &
"~r~n" + &
"~t~t~t~t~t~tif (@primary_key is not null and ltrim(rtrim(@primary_key)) <> '')~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @sql_where = @sql_where + ' and ' + @primary_key~r~n" + &
"~r~n" + &
"~t~t~t~t~t~t~tif(lower(@table_name) = 'ctx_basic_info')~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @sys_ctx_id = convert(int, right(@primary_key,len(@primary_key) - charindex('=',@primary_key)) )~r~n" + &
"~t~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~t~tElse if(lower(@table_name) = 'ctx_contacts')~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @sys_contact_id = convert(int, right(@primary_key,len(@primary_key) - charindex('=',@primary_key)) )~r~n" + &
"~t~t~t~t~t~t~tEnd~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tElse~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @flag = 'insert'~r~n" + &
"~t~t~t~t~t~tSet @sql_insert =@sql_insert + ' Insert Into '+@table_name+ ' ( '~r~n" + &
"~t~t~t~t~t~tSet @sql_value = ' VALUES( '~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tSet @tmp_id = 0~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('app_facility'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @primary_key = ' facility_id '~r~n" + &
"~t~t~t~t~t~t~tSELECT @tmp_id = max(facility_id) FROM app_facility; ~r~n" + &
"~t~t~t~t~t~t~tif (@tmp_id is null or @tmp_id <= 0 )~t~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @tmp_id = 0 ~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tSet @tmp_id = @tmp_id + 1~r~n" + &
"~t~t~t~t~t~t~tSet @sys_id = @tmp_id ~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~t~tSelect @fieldname =  isnull(actual_value,'')  from #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col in ('facility_name');~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' '+ @primary_key + ','~r~n" + &
"~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@tmp_id)+ ','~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~tEnd~t~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_contacts'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @primary_key = ' contact_id '~r~n" + &
"~t~t~t~t~t~t~tSELECT @tmp_id = max(contact_id) FROM ctx_contacts; ~r~n" + &
"~t~t~t~t~t~t~tif (@tmp_id is null or @tmp_id <= 0 )~t~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @tmp_id = 0 ~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tSet @tmp_id = @tmp_id + 1~r~n" + &
"~t~t~t~t~t~t~tSet @sys_id = @tmp_id ~r~n" + &
"~t~t~t~t~t~t~tSet @num = 19~r~n" + &
"~t~t~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~t~t~t~t~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @sys_record_id ;~r~n" + &
"~t~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid record_id ('+CONVERT(varchar,@sys_record_id)+'). '~r~n" + &
"~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~t~t~t~t~t~t~tSet @sys_id = @tmp_id ~r~n" + &
"~t~t~t~t~t~t~tSet @sys_contact_id = @tmp_id ~r~n" + &
"~t~t~t~t~t~t~tSelect @sys_facility_id = Case  when ISNUMERIC(actual_value) = 1 then CONVERT(int,actual_value) else 0 end ~r~n" + &
"~t~t~t~t~t~t~t~tfrom #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='facility_id';~r~n" + &
"~t~t~t~t~t~t~tSelect @fieldname = @fieldname + isnull(actual_value,'') + ' ' from #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col in ('first_name','last_name') order by col;~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~t~tSet @fieldname =ltrim(rtrim(@fieldname))~r~n" + &
"~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' '+ @primary_key + ', record_id,'~r~n" + &
"~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@tmp_id)+ ','+CONVERT(varchar,@sys_record_id) + ','~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_contacts_numbers'))~r~n" + &
"~t~t~t~t~t~tBegin~t~t~t~r~n" + &
"~t~t~t~t~t~t~tSet @num = 20~r~n" + &
"~t~t~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~t~t~t~t~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @sys_record_id ;~r~n" + &
"~t~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id('+CONVERT(varchar,@sys_record_id)+'). '~r~n" + &
"~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~r~n" + &
"~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' contact_id,record_id,'~r~n" + &
"~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@sys_contact_id)+ ','~t+CONVERT(varchar,@sys_record_id)+ ','~t~r~n" + &
"~r~n" + &
"~t~t~t~t~t~t~tif (lower(@col) =lower('contact_email'))~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSelect @tmp_id = lookup_code FROM code_lookup WHERE ( code_lookup.lookup_name = 'Contract Contact VIA' ) and lower(code) = lower('EMAIL');~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tElse~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSelect @tmp_id = lookup_code FROM code_lookup WHERE ( code_lookup.lookup_name = 'Contract Contact VIA' ) and lower(code) = lower('PHONE');~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~t~tif(@tmp_id > 0 )~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' via,'~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@tmp_id)+ ','~t~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_basic_info'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @primary_key = ' ctx_id  '~r~n" + &
"~t~t~t~t~t~t~tSet @num = 21~r~n" + &
"~t~t~t~t~t~t~tSelect @tmp_id = isnull(ctx_id, 0) From ids;~t~r~n" + &
"~t~t~t~t~t~t~tUPDATE ids~tSET ctx_id =( isnull ( ctx_id , 0 ) + 1 ) Where ctx_id = @tmp_id ;~r~n" + &
"~t~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.ctx_id ('+convert(varchar,@tmp_id)+').'~r~n" + &
"~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~t~tSet @tmp_id =@tmp_id + 1~r~n" + &
"~t~t~t~t~t~t~tSet @sys_ctx_id = @tmp_id~r~n" + &
"~t~t~t~t~t~t~tSet @num = 22~r~n" + &
"~t~t~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~t~t~t~t~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @sys_record_id ;~r~n" + &
"~t~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id ('+convert(varchar,@sys_record_id)+').'~r~n" + &
"~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' '+ @primary_key + ', record_id,'~r~n" + &
"~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@tmp_id)+ ','+CONVERT(varchar,@sys_record_id ) + ','~r~n" + &
"~t~t~t~t~t~t~tSelect @status = Case  when ISNUMERIC(actual_value) = 1 then CONVERT(int,actual_value) else 0 end ~r~n" + &
"~t~t~t~t~t~t~t~tfrom #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='status';~r~n" + &
"~t~t~t~t~t~t~tSelect @custom_status1 = Case  when ISNUMERIC(actual_value) = 1 then CONVERT(int,actual_value) else 0 end ~r~n" + &
"~t~t~t~t~t~t~t~tfrom #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='custom_status1';~r~n" + &
"~t~t~t~t~t~t~tSelect @custom_status2 = Case  when ISNUMERIC(actual_value) = 1 then CONVERT(int,actual_value) else 0 end ~r~n" + &
"~t~t~t~t~t~t~t~tfrom #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='custom_status2';~r~n" + &
"~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_products') or lower(@table_name) = lower('ctx_fee_sched_nm') or lower(@table_name) = lower('ctx_custom') or lower(@table_name) = lower('ctx_custom_multi_hdr'))~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSelect @sys_ctx_id = CONVERT(int,actual_value) from #import_external_tmp_data where table_records_id =@table_records_id and table_name = @table_name and rowid =@rowid and col ='ctx_id';~r~n" + &
"~t~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_products') or lower(@table_name) = lower('ctx_fee_sched_nm') )~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @num = 23~r~n" + &
"~t~t~t~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~t~r~n" + &
"~t~t~t~t~t~t~t~tUPDATE ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id = @sys_record_id ;~r~n" + &
"~t~t~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id ('+convert(varchar,@sys_record_id)+').'~r~n" + &
"~t~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~t~t~t~tEnd ~r~n" + &
"~t~t~t~t~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' record_id,'~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@sys_record_id ) + ','~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_fee_sched_nm'))~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @tmp_id = 0 ~r~n" + &
"~t~t~t~t~t~t~t~tSelect @tmp_id = Max(fee_sched_nm_id ) FROM ctx_fee_sched_nm WHERE ctx_id =@sys_ctx_id ;~r~n" + &
"~t~t~t~t~t~t~t~tif(@tmp_id is null or @tmp_id <= 0 )~r~n" + &
"~t~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~t~tSet @tmp_id = 0~r~n" + &
"~t~t~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~t~t~tSet @tmp_id = @tmp_id + 1 ~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' fee_sched_nm_id,'~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@tmp_id ) + ','~t~t~t~t~t~t~t~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~t~t~t~t~tif(lower(@table_name) = lower('ctx_custom_multi_hdr'))~r~n" + &
"~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~tSet @num = 24~r~n" + &
"~t~t~t~t~t~t~t~tSet @tmp_id = 0 ~r~n" + &
"~t~t~t~t~t~t~t~tSELECT @tmp_id = ids.custom_id1 FROM ids ~r~n" + &
"~t~t~t~t~t~t~t~tUpdate ids SET custom_id1 =( isnull ( custom_id1 , 0 ) + 1 ) Where custom_id1 = @tmp_id ;~r~n" + &
"~t~t~t~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.custom_id1 ('+convert(varchar,@tmp_id)+').'~r~n" + &
"~t~t~t~t~t~t~t~t~tClose external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~t~tDEALLOCATE external_import_cursor~r~n" + &
"~t~t~t~t~t~t~t~t~treturn - 1~r~n" + &
"~t~t~t~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~t~t~t~t~tSet @tmp_id = @tmp_id + 1 ~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_insert = @sql_insert +' hdr_id,'~r~n" + &
"~t~t~t~t~t~t~t~tSet @sql_value = @sql_value + ' '+CONVERT(varchar,@tmp_id ) + ','~r~n" + &
"~t~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~tEnd~t~t~t~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tif (@flag = 'insert')~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert +' '+ @col + ','~r~n" + &
"~t~t~t~tSet @sql_value = @sql_value + ' '+@col_value+ ','~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tElse~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @sql_update = @sql_update +' '+ @col + '= '+ @col_value + ' ,'~r~n" + &
"~t~t~tEnd~r~n" + &
"~r~n" + &
"~t~t~tif (lower(@col) = 'contact_email' and lower(@table_name) = 'ctx_contacts_numbers' and lower(@old_table_name) = 'ctx_contacts_numbers' )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @old_table_name =''~t~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~tFetch Next From external_import_cursor Into @table_records_id,@table_name,@rowid,@col,@col_value,@col_type,@col_length,@prec,@scale,@key_field,@no_match_procd,@lu_type,@lu_table,@lu_field_name~r~n" + &
"~tEnd~r~n" + &
"~tCLOSE external_import_cursor~r~n" + &
"~tDEALLOCATE external_import_cursor~r~n" + &
"~r~n" + &
"~tif(datalength(ltrim(rtrim(@sql_update))) > 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @sql_where = replace(@sql_where,'top 1','')~r~n" + &
"~t~tif (right(@sql_update,1)=',')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_update = left(@sql_update,datalength(@sql_update) -1 ) + ' where '+ @sql_where + ' ;'~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd~r~n" + &
"~tif(datalength(ltrim(rtrim(@sql_insert))) > 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tif (right(@sql_insert,1)=',')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_insert = left(@sql_insert,len(@sql_insert) - 1)+ ') ' + left(@sql_value,len(@sql_value ) -1 ) + ') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tif (lower(@table_name) = 'ctx_basic_info')~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @seq_no = 0~r~n" + &
"~t~tselect top 1 @table_id = table_id from sys_tables where lower(import_table_name) = lower('ctx_basic_info');~r~n" + &
"~t~tselect @seq_no = max(seq_no) from sys_audit where field_id =1001 ;~r~n" + &
"~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~tif (@flag = 'insert')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,sql_syntax )'+~r~n" + &
"~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+', 1001,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+' ,'''',''INSERT'',''salesforce user'',getdate(),1,''I'','+convert(varchar,@notification_pid)+','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@sys_record_id)+' and field_id = 1001 and seq_no = '+convert(varchar,@seq_no) + ' ;'~t~t~t~r~n" + &
"~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO ctx_version (ctx_id,version_id,version_number,version_date,user_id,old_value,new_value)'+~r~n" + &
"~t~t~t~t' Values('+convert(varchar,@sys_ctx_id)+',1,''1.0'',getdate(),''salesforce user'', '''',''1.0'') ;' ~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_version where ctx_id ='+convert(varchar,@sys_ctx_id)+' and version_id =1 ; '~r~n" + &
"~t~t~tif(@status > 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name) '+~r~n" + &
"~t~t~t~t~t' VALUES ('+convert(varchar,@sys_ctx_id)+',1,'+convert(varchar,@status)+',getdate(),''salesforce user'',''status'') ;'~t~t~t~t~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@sys_ctx_id)+' and seq_no = 1 and field_name =''status'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tif(@custom_status1 > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)' +~r~n" + &
"~t~t~t~t~t' VALUES ('+convert(varchar,@sys_ctx_id)+',1,'+convert(varchar,@custom_status1)+',getdate(),''salesforce user'',''custom_status1'') ;'~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@sys_ctx_id)+' and seq_no = 1 and field_name =''custom_status1'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tif(@custom_status2 > 0 )~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)' +~r~n" + &
"~t~t~t~t~t' VALUES ('+convert(varchar,@sys_ctx_id)+',1,'+convert(varchar,@custom_status2)+',getdate(),''salesforce user'',''custom_status2'') ;'~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@sys_ctx_id)+' and seq_no = 1 and field_name =''custom_status2'' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_basic_info Where ctx_id ='+convert(varchar,@sys_ctx_id)+' ; '~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' UPDATE ids~tSET ctx_id =( ctx_id - 1 ) Where ctx_id ='+convert(varchar,@sys_ctx_id)+' ; '~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tif(@status > 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @count = 0~r~n" + &
"~t~t~t~tSelect @count = Max ( sys_statusaudit.seq_no ) FROM sys_statusaudit WHERE sys_statusaudit.ctx_id =@sys_ctx_id and field_name ='status' ;~r~n" + &
"~t~t~t~tif(@count is null)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSet @count = 0~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tSet @count = @count + 1~r~n" + &
"~t~t~t~tSet @sql_update = @sql_update + 'INSERT INTO sys_statusaudit(ctx_id,seq_no,status,start_time,user_id,field_name)'+~r~n" + &
"~t~t~t~t~t' VALUES ('+convert(varchar,@sys_ctx_id)+','+convert(varchar,@count)+','+convert(varchar,@status)+',getdate(),''salesforce user'',''status'') ;'~t~t~t~t~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_statusaudit where ctx_id ='+convert(varchar,@sys_ctx_id)+' and seq_no = '+convert(varchar,@count)+' and field_name =''status'' ;'~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tSet @sql_update = @sql_update + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,sql_syntax )'+~r~n" + &
"~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+', 1001,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+' ,'''',''UPDATE'',''salesforce user'',getdate(),1,''I'','+convert(varchar,@notification_pid)+','''+left(replace(@sql_update,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@sys_record_id)+' and field_id = 1001 and seq_no = '+convert(varchar,@seq_no) + ' ;'~t~t~t~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tSet @origin_col_value = ''~r~n" + &
"~t~tSet @owner = 'N'~r~n" + &
"~t~tSet @tmp_id = 0 ~r~n" + &
"~t~tselect @tmp_id = ctxcta_contact_id from import_project inner join import_hdr on import_project.project_id = import_hdr.project_id  inner join import_webform on import_webform.import_id = import_hdr.import_id where import_webform.id = @id;~r~n" + &
"~t~tif (@tmp_id > 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = 0~r~n" + &
"~t~t~tSelect @count = count(1) from ctx_contract_contacts where contact_id = @tmp_id and ic_area = 'I' and ctx_id = @sys_ctx_id~r~n" + &
"~t~t~tif (@count = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 25~r~n" + &
"~t~t~t~tif (@seq_no = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tif (@sys_record_id = 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@sys_record_id  ;~r~n" + &
"~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id ('+convert(varchar,@sys_record_id)+'). '~r~n" + &
"~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~tEnd~t~r~n" + &
"~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~t~t~t~tSelect top 1 @table_id =table_id from sys_tables where charindex('our company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + ' INSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) '+~r~n" + &
"~t~t~t~t~t~t ' VALUES ( '+convert(varchar,@sys_ctx_id)+' , '+convert(varchar,@tmp_id)+', ''I'', '+convert(varchar,@sys_record_id)+', ''Y'', ''Y'', ''F'' ) ;'~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@sys_ctx_id)+' and ic_area =''I'' and contact_id='+convert(varchar,@tmp_id)+' ; '~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid ,sql_syntax)'+~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+',1001,'+convert(varchar,@seq_no)+','+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+','''',''INSERT'',''salesforce user'',getdate(),1,''I'','+convert(varchar,@notification_pid)+','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit Where rec_id = '+convert(varchar,@sys_record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~t~tSet @origin_col_value = 'N'~r~n" + &
"~t~tEnd~r~n" + &
"~r~n" + &
"~t~tif(@contact_id is not null and @contact_id > 0 and @ic_area is not null and ltrim(ltrim(@ic_area)) <> '' )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = 0~r~n" + &
"~t~t~tSelect @count = count(1) from ctx_contract_contacts where contact_id = @contact_id and ic_area = @ic_area and ctx_id = @sys_ctx_id~r~n" + &
"~t~t~tif (@count = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 26~r~n" + &
"~t~t~t~tif (@seq_no = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tif (@sys_record_id = 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@sys_record_id  ;~r~n" + &
"~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id ('+convert(varchar,@sys_record_id)+'). '~r~n" + &
"~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~tEnd~t~r~n" + &
"~t~t~t~tEnd~t~r~n" + &
"~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~t~t~t~tif(@ic_area='E')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect top 1 @table_id =table_id from sys_tables where  charindex('contracted company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~t~tSet @sql_insert = @sql_insert + ' INSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) '+~r~n" + &
"~t~t~t~t~t~t ' VALUES ( '+convert(varchar,@sys_ctx_id)+' , '+convert(varchar,@contact_id)+', ''E'', '+convert(varchar,@sys_record_id)+', ''Y'', ''N'', ''F'' ) ;'~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif(@origin_col_value <> 'N')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @count = 0~r~n" + &
"~t~t~t~t~t~tselect @count = count(1) from ctx_contacts where user_d is not null and len(user_d) > 0 and contact_id = @contact_id1; ~r~n" + &
"~t~t~t~t~t~tif (@count > 0)~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @owner = 'Y'~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tSelect top 1 @table_id =table_id from sys_tables where charindex('our company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~t~tSet @sql_insert = @sql_insert + ' INSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) '+~r~n" + &
"~t~t~t~t~t~t ' VALUES ( '+convert(varchar,@sys_ctx_id)+' , '+convert(varchar,@contact_id)+', ''I'', '+convert(varchar,@sys_record_id)+', '''+@owner+''', '''+@owner+''', ''F'' ) ;'~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@sys_ctx_id)+' and ic_area ='''+@ic_area+''' and contact_id='+convert(varchar,@contact_id)+' ; '~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid ,sql_syntax)'+~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+',1001,'+convert(varchar,@seq_no)+','+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+','''',''INSERT'',''salesforce user'',getdate(),1,'''+@ic_area+''','+convert(varchar,@notification_pid)+','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit Where rec_id = '+convert(varchar,@sys_record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~t~t~r~n" + &
"~t~tif(@contact_id1 is not null and @contact_id1 > 0 and @ic_area1 is not null and ltrim(ltrim(@ic_area1)) <> '' )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @count = 0~r~n" + &
"~t~t~tSelect @count = count(1) from ctx_contract_contacts where contact_id = @contact_id1 and ic_area = @ic_area1 and ctx_id = @sys_ctx_id~r~n" + &
"~t~t~tif (@count = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @num = 27~r~n" + &
"~t~t~t~tif (@seq_no = 0)~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id in (1001);~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tSet @seq_no = @seq_no + 1~r~n" + &
"~t~t~t~tif(@sys_record_id = 0 )~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@sys_record_id  ;~r~n" + &
"~t~t~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id ('+convert(varchar,@sys_record_id)+'). '~r~n" + &
"~t~t~t~t~t~treturn -1~r~n" + &
"~t~t~t~t~tEnd~t~t~t~r~n" + &
"~t~t~t~tEnd~t~r~n" + &
"~t~t~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~r~n" + &
"~t~t~t~tif(@ic_area1='E')~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tSelect top 1 @table_id =table_id from sys_tables where  charindex('contracted company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~t~tSet @sql_insert = @sql_insert + ' INSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) '+~r~n" + &
"~t~t~t~t~t~t ' VALUES ( '+convert(varchar,@sys_ctx_id)+' , '+convert(varchar,@contact_id1)+', ''E'', '+convert(varchar,@sys_record_id)+', ''Y'', ''N'', ''F'' ) ;'~r~n" + &
"~t~t~t~tEnd~r~n" + &
"~t~t~t~tElse~r~n" + &
"~t~t~t~tBegin~r~n" + &
"~t~t~t~t~tif(@origin_col_value <> 'N')~r~n" + &
"~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~tSet @count = 0~r~n" + &
"~t~t~t~t~t~tselect @count = count(1) from ctx_contacts where user_d is not null and len(user_d) > 0 and contact_id = @contact_id1; ~r~n" + &
"~t~t~t~t~t~tif (@count > 0)~r~n" + &
"~t~t~t~t~t~tBegin~r~n" + &
"~t~t~t~t~t~t~tSet @owner = 'Y'~r~n" + &
"~t~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tEnd~r~n" + &
"~t~t~t~t~tSelect top 1 @table_id =table_id from sys_tables where charindex('our company contact info',lower(table_name_allias) ) > 0 ;~r~n" + &
"~t~t~t~t~tSet @sql_insert = @sql_insert + ' INSERT INTO ctx_contract_contacts ( ctx_id, contact_id, ic_area, record_id, default_email, owner, access ) '+~r~n" + &
"~t~t~t~t~t~t ' VALUES ( '+convert(varchar,@sys_ctx_id)+' , '+convert(varchar,@contact_id1)+', ''I'', '+convert(varchar,@sys_record_id)+', '''+@owner+''', '''+@owner+''', ''F'' ) ;'~r~n" + &
"~t~t~t~tEnd~t~t~t~t~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From ctx_contract_contacts Where ctx_id = '+convert(varchar,@sys_ctx_id)+' and ic_area ='''+@ic_area1+''' and contact_id='+convert(varchar,@contact_id1)+' ; '~r~n" + &
"~t~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,sql_syntax )' +~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+',1001,'+convert(varchar,@seq_no)+','+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+','''',''INSERT'',''salesforce user'',getdate(),1,'''+@ic_area1+''','+convert(varchar,@notification_pid)+','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~t~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit Where rec_id = '+convert(varchar,@sys_record_id)+' and field_id =1001 and seq_no ='+convert(varchar,@seq_no)+' ; '~r~n" + &
"~t~t~tEnd~r~n" + &
"~t~tEnd~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tif (lower(@table_name) ='ctx_products' or lower(@table_name)='ctx_fee_sched_nm'or lower(@table_name)='ctx_custom'or lower(@table_name)='ctx_custom_multi_hdr')~r~n" + &
"~tBegin~r~n" + &
"~t~tif (@seq_no = 0)~t~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id =1001;~t~t~t~t~t~t~t~r~n" + &
"~t~tend ~t~t~t~r~n" + &
"~t~tSet @seq_no = @seq_no + 1~t~r~n" + &
"~t~tSelect top 1 @table_id =table_id from sys_tables where import_table_name = @table_name ;~r~n" + &
"~t~tif(@sys_record_id = 0 )~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @num = 28~r~n" + &
"~t~t~tSelect @sys_record_id = isnull(record_id, 0) From ids;~r~n" + &
"~t~t~tUpdate ids~tSET record_id =( isnull ( record_id , 0 ) + 1 ) Where record_id =@sys_record_id  ;~r~n" + &
"~t~t~tif (@@ROWCOUNT = 0)~r~n" + &
"~t~t~tBegin~r~n" + &
"~t~t~t~tSet @err_msg ='('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Invalid '+@table_name+'.record_id ('+convert(varchar,@sys_record_id)+'). '~r~n" + &
"~t~t~t~treturn -1~r~n" + &
"~t~t~tEnd~t~t~t~r~n" + &
"~t~tEnd~t~r~n" + &
"~t~tSet @sys_record_id = @sys_record_id + 1~r~n" + &
"~t~tif (@flag = 'insert')~r~n" + &
"~t~tBegin~t~t~r~n" + &
"~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,sql_syntax )'+~r~n" + &
"~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+', 1001,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+' ,'''',''INSERT'',''salesforce user'',getdate(),1,''I'','+convert(varchar,@notification_pid)+','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_update = @sql_update + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,sql_syntax )'+~r~n" + &
"~t~t~t~t' VALUES('+convert(varchar,@sys_record_id)+', 1001,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+','+convert(varchar,@sys_ctx_id)+' ,'''',''UPDATE'',''salesforce user'',getdate(),1,''I'','+convert(varchar,@notification_pid)+','''+left(replace(@sql_update,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@sys_record_id)+' and field_id = 1001 and seq_no = '+convert(varchar,@seq_no) + ' ;'~t~t~t~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tif (lower(@table_name)='app_facility')~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @table_id = 10003~r~n" + &
"~t~tif (@seq_no = 0)~t~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id =-9999 ;~t~t~t~t~r~n" + &
"~t~tend ~t~t~t~r~n" + &
"~t~tSet @seq_no = @seq_no + 1~t~r~n" + &
"~t~tif (@flag = 'insert')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,facility_id,tfield_name,tfield_name_allias,sql_syntax )' +~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_id)+', -9999,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+',0 ,'''',''INSERT'',''salesforce user'',getdate(),0,''I'','+convert(varchar,@notification_pid)+','+convert(varchar,@sys_id)+','''+@fieldname+''','''+@fieldname+''','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_update = @sql_update + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,facility_id,tfield_name,tfield_name_allias,sql_syntax )' +~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_id)+', -9999,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+',0 ,'''',''UPDATE'',''salesforce user'',getdate(),0,''I'','+convert(varchar,@notification_pid)+','+convert(varchar,@sys_id)+','''+@fieldname+''','''+@fieldname+''','''+left(replace(@sql_update,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@sys_id)+' and field_id = -9999 and seq_no = '+convert(varchar,@seq_no) + ' ;'~t~t~t~r~n" + &
"~tEnd~r~n" + &
"~r~n" + &
"~tif (lower(@table_name) ='ctx_contacts')~r~n" + &
"~tBegin~r~n" + &
"~t~tSet @table_id = 10004~r~n" + &
"~t~tif (@seq_no = 0)~t~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @seq_no = max(seq_no) from sys_audit where field_id =-9999 ;~t~t~t~t~r~n" + &
"~t~tend ~t~t~t~r~n" + &
"~t~tSet @seq_no = @seq_no + 1~t~r~n" + &
"~t~tif (@flag = 'insert')~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_insert = @sql_insert + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,facility_id,tfield_name,tfield_name_allias,sql_syntax )'+~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_id)+', -9999,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+',0 ,'''',''INSERT'',''salesforce user'',getdate(),0,''I'','+convert(varchar,@notification_pid)+','+convert(varchar,@sys_facility_id)+','''+@fieldname+''','''+@fieldname+''','''+left(replace(@sql_insert,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tElse~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSet @sql_update = @sql_update + 'INSERT INTO sys_audit ( rec_id, field_id, seq_no, table_id, prac_id, old_value, new_value, user_id, date_time_modified, exported, audit_type,sys_notification_pid,facility_id,tfield_name,tfield_name_allias,sql_syntax )' +~r~n" + &
"~t~t~t~t~t' VALUES('+convert(varchar,@sys_id)+', -9999,'+convert(varchar,@seq_no)+' , '+convert(varchar,@table_id)+',0 ,'''',''UPDATE'',''salesforce user'',getdate(),0,''I'','+convert(varchar,@notification_pid)+','+convert(varchar,@sys_facility_id)+','''+@fieldname+''','''+@fieldname+''','''+left(replace(@sql_update,char(39),char(39)+char(39)),8000)+''') ;'~r~n" + &
"~t~tEnd~r~n" + &
"~t~tSelect @sql_delete = @sql_delete + ' Delete From sys_audit where rec_id ='+convert(varchar,@sys_id)+' and field_id = -9999 and seq_no = '+convert(varchar,@seq_no) + ' ;'~t~t~t~r~n" + &
"~tEnd~r~n" + &
"~t~r~n" + &
"~tSet @num = 29~r~n" + &
"~tBegin Try~r~n" + &
"~tBegin Transaction ImportDataTrans~r~n" + &
"~t~tExecute(@sql_insert) ;~r~n" + &
"~t~tSet @error_sum = @error_sum + @@error~t~r~n" + &
"~t~tExecute(@sql_update) ;~r~n" + &
"~t~tSet @error_sum = @error_sum + @@error~t~r~n" + &
"~tEnd Try~r~n" + &
"~tBegin Catch~r~n" + &
"~t~tSet @error_sum = @error_sum + @@error~r~n" + &
"~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~tRollback Transaction ImportDataTrans~r~n" + &
"~t~tExecute(@sql_delete);~r~n" + &
"~t~tif (@@error <> 0)~r~n" + &
"~t~tBegin~r~n" + &
"~t~t~tSelect @err_msg = @err_msg+ ' ('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; ErrorNumber:'+ convert(varchar,@error_sum)+' Delete Sql:'+@sql_delete ~r~n" + &
"~t~tEnd~r~n" + &
"~t~treturn -1~r~n" + &
"~tEnd Catch~r~n" + &
"~r~n" + &
"~tIf (@error_sum <> 0 )~r~n" + &
"~tBegin~r~n" + &
"~t~tSelect @err_msg = '('+Convert(varchar,@id)+') '+'Position:'+convert(varchar,@num)+'; Error:'+convert(varchar,@error_sum)+'; ErrorNumber:'+ convert(varchar,ERROR_NUMBER()) +'; ErrorSeverity:'+ convert(varchar,ERROR_SEVERITY())+'; ErrorState:'+ convert(varchar,ERROR_STATE())+'; ErrorMessage:'+ ERROR_MESSAGE() ~r~n" + &
"~t~tROLLBACK TRANSACTION ImportDataTrans;~r~n" + &
"~t~treturn -1~r~n" + &
"~tEnd~r~n" + &
"~telse~r~n" + &
"~tBegin~r~n" + &
"~t~tCOMMIT TRANSACTION ImportDataTrans;~r~n" + &
"~tEnd~r~n" + &
"End~r~n"

of_execute_sqls("of_ver140_release_storeprocedure2")


return 1
end function

public subroutine of_release_fulltext (boolean ab_do_drop);
If of_get_app_set() = 1 Then				
	of_ver70_release_createfulltext1()
	If ab_do_drop Then of_ver85_release_dropfulltext1( )
	of_ver85_release_createfulltext1( )
	If ab_do_drop Then of_ver95_release_dropfulltext1( )	
	of_ver95_release_createfulltext1( )
	If ab_do_drop Then of_ver100_release_dropfulltext1( )	
	of_ver100_release_createfulltext1( )
	If ab_do_drop Then of_ver110_release_dropfulltext1( )	
	of_ver110_release_createfulltext1( )
	If ab_do_drop Then of_ver115_release_dropfulltext1( )	
	of_ver115_release_createfulltext1( )
	If ab_do_drop Then of_ver120_release_dropfulltext1( )	
	of_ver120_release_createfulltext1( )	
	If ab_do_drop Then of_ver130_release_dropfulltext1( )	
	of_ver130_release_createfulltext1( )
	If ab_do_drop Then of_ver140_release_dropfulltext1( )
	of_ver140_release_createfulltext1( )
//	If ab_do_drop Then of_ver150_release_dropfulltext1( )	
//	of_ver150_release_createfulltext1( )	
End If


end subroutine

on n_cst_update_sql_v140.create
call super::create
end on

on n_cst_update_sql_v140.destroy
call super::destroy
end on

